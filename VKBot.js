const express = require("express"); 
const mysql = require("mysql2");
const request = require('request');
const VkBot = require("node-vk-bot-api");
const Markup = require('node-vk-bot-api/lib/markup');
const easyvk = require('easyvk');
const readline = require('readline')
var app = express();
const token ='58ac7df889e082385f974bf6e3fa090876d5b17d1846d8c33abf40237b3e2eb3e82fe761f8fe079b67fd0';//b7aa395f3e3ca2fb89fc258e4d3f48964b0f8d8807e74c98d4856d91e76d80623f2941dcfab73e3daab60
let EASYVK; let EASYMANAGERVK; let EASYBOTVK; let isAuthorized = false;
let bot = new VkBot(token); let specIDs = [331658531,106541016,615435367,513757464,20904658]//me,admin
request.defaults({pool:{
    maxSockets: Infinity
}});
const connection = mysql.createConnection({
	charset:'utf8',
	host: "glouder.beget.tech",
	user: "glouder_vkbot",
	database: "glouder_vkbot",
	password: "Eryjsn567"
});
 // –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  connection.on('error', function(err) {
    console.log('db error', err);
    if( (err.code === 'PROTOCOL_CONNECTION_LOST')||(err.code === 'ETIMEDOUT') ) { // Connection to the MySQL server is usually
	    connection.connect(function(err){
		    if (err) {
		      return console.error("–û—à–∏–±–∫–∞: " + err.message);
		    }
		    else{
		    	let dateNow =new Date; //(new Date).timezoneOffset(-300);
				let nowDate = dateNow.getDate()+'-'+dateNow.getMonth()+'-'+dateNow.getFullYear()+'-'+dateNow.getHours()+'-'+dateNow.getMinutes()+'-'+dateNow.getSeconds();
		      	console.log("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É MySQL –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ "+nowDate);
		    }
		});                        
    }
    else {                                      
      throw err;                                 
    }
  });

let subjectList = `
üìà –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã:

1 –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–æ–º–µ—Ç—Ä–∏—è
2 –í—ã—Å—à–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞
3 –î–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞
4 –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è
5 –ò–Ω—Ç–µ–≥—Ä–∞–ª—ã
6 –õ–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞
7 –õ–æ–≥–∏–∫–∞
8 –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
9 –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
10 –¢–§–ö–ü
11 –¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
12 –£—Ä–∞–≤–Ω–µ–Ω–∏—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ–∏–∑–∏–∫–∏

ü§ñ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã:

13 –ì–∏–¥—Ä–∞–≤–ª–∏–∫–∞
14 –î–µ—Ç–∞–ª–∏ –º–∞—à–∏–Ω
15 –ò–Ω–∂–µ–Ω–µ—Ä–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞
16 –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞
17 –ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤–µ–¥–µ–Ω–∏–µ
18 –ú–µ—Ç—Ä–æ–ª–æ–≥–∏—è
19 –ú–µ—Ö–∞–Ω–∏–∫–∞ –∂–∏–¥–∫–æ—Å—Ç–µ–π –∏ –≥–∞–∑–æ–≤ (–ú–ñ–ì)
20 –ù–∞—á–µ—Ä—Ç–∞—Ç–µ–ª—å–Ω–∞—è –≥–µ–æ–º–µ—Ç—Ä–∏—è
21 –û—Å–Ω–æ–≤—ã –∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–±–æ—Ä–æ–≤ (–û–ö–ü)
22 –ü–æ–¥—ä–µ–º–Ω–æ-—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ –º–∞—à–∏–Ω—ã (–ü–¢–ú)
23 –ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞
24 –†–µ–∑–∞–Ω–∏–µ
25 –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ
26 –°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
27 –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞
28 –¢–µ–æ—Ä–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–æ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (–¢–ö–ú)
29 –¢–µ–æ—Ä–∏—è –º–∞—à–∏–Ω –∏ –º–µ—Ö–∞–Ω–∏–∑–º–æ–≤ (–¢–ú–ú)
30 –¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞
31 –§–∏–∑–∏–∫–∞
32 –≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞

üí∞ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –∏ üçî–≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã:

33 –ë–∏–æ–ª–æ–≥–∏—è
34 –ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–π —É—á–µ—Ç
35 –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏ –º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
36 –ò—Å—Ç–æ—Ä–∏—è
37 –ö—Ä–∏–º–∏–Ω–∞–ª–∏—Å—Ç–∏–∫–∞
38 –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞
39 –õ–æ–≥–∏—Å—Ç–∏–∫–∞
40 –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥
41 –ú–µ–¥–∏—Ü–∏–Ω–∞
42 –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è
43 –ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç
44 –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ
45 –ü–µ–¥–∞–≥–æ–≥–∏–∫–∞
46 –ü—Ä–∞–≤–æ (–∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å—ë –ø—Ä–∞–≤–æ)
47 –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è
48 –°–æ—Ü–∏–æ–ª–æ–≥–∏—è
49 –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º
50 –§–∏–ª–æ–ª–æ–≥–∏—è
51 –§–∏–ª–æ—Å–æ—Ñ–∏—è
52 –§–∏–Ω–∞–Ω—Å—ã
53 –•–∏–º–∏—è
54 –≠–∫–æ–Ω–æ–º–∏–∫–∞
55 –Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è

‚õ© –Ø–∑—ã–∫–∏:

56 –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
57 –õ–∞—Ç—ã–Ω—å
58 –ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫
59 –†—É—Å—Å–∫–∏–π —è–∑—ã–∫
60 –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —è–∑—ã–∫

‚õπ‚Äç‚ôÇ –°–ø–æ—Ä—Ç:

61 –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞
62 –í–æ–µ–Ω–Ω–∞—è –∫–∞—Ñ–µ–¥—Ä–∞
`;
function databaseRequest(request){
	return new Promise(function (resolve,reject) {
		connection.query(request,function(err,response){
			if(err) reject(err);
			else resolve(response);
		})
	})
}
function initialise(){
	let dateNow =new Date; //(new Date).timezoneOffset(-300);
	let nowDate = dateNow.getDate()+'-'+dateNow.getMonth()+'-'+dateNow.getFullYear()+'-'+dateNow.getHours()+'-'+dateNow.getMinutes()+'-'+dateNow.getSeconds();
	databaseRequest("SET SESSION wait_timeout = 604800").then(function(){
		databaseRequest("create table if not exists userList (id int,subject text,status text,typeOfWork text,Task text, photos text,docs text,paymentCheck text,deadline text,workTime text,chat int, executor int, workId int, price float,executorPrice float,executorStartPrice text,priceMarkup text, comment text,orderFinished int,sendingPaymentCheck int,paid int,userInChat int,whoIsAccepted text,whoIsDeclined text,commentFromExecutorWhenOrderIsAccepted text,askQuestion int)").then(function(){
			//databaseRequest("create table if not exists historyList (id int,subject text,status text,typeOfWork text,Task text, photos text,docs text,deadline text,chat int, executor int, workId int, price float,executorPrice int, comment text,orderFinished int)").then(function(){
				databaseRequest("create table if not exists executorList (id int,executor_id int,chat int, subject text, setpriceto int, waitto int,chatMessage text)").then(function(){
					databaseRequest("create table if not exists chatList (workId int,id int,executorId int,userChatId int, executorChatId int, resendUser bool default true,resendExecutor bool default true)").then(function(){
						databaseRequest("SHOW TABLES LIKE 'grandadmin'").then(function(response){
							if(response != ''){	
								for(let i =0; i < response.length;i++) specIDs.push(response[i].id);
							}
							console.log("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É MySQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ "+nowDate);							
						})
					})							
				})
			//})											
		})
	})		
}
initialise();

let longPollData; let Solve;
const captchaHandler = ({captcha_sid, captcha_img, resolve:solve, vk}) => {
	bot.sendMessage(331658531, `–í–≤–µ–¥–∏—Ç–µ –∫–∞–ø—á—É –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ ${captcha_img} `);
    Solve = solve;
}

const isAdmin = (user_Id) =>{
	return new Promise(function (resolve,reject) {
		databaseRequest("select id from grandadmin where id="+user_Id).then(function(response){
			if(response != '') resolve(true);
			else reject(false);
		})
	})
}
const isExecutor = (user_Id) =>{
	return new Promise(function (resolve,reject) {
		databaseRequest("select id from executorList where id="+user_Id).then(function(response){
			if(response == '') reject("not-exist")
			else resolve(true);
		})
	})
}
const selectUser = (user_Id,isOrderFinished =0,workId='') => {
	return new Promise(function (resolve,reject) {
		isExecutor(user_Id).then(function(response){
			databaseRequest("select * from executorList where id="+user_Id).then(function(response){
				resolve(response)
			})
		}).catch(function(){
			if(workId ==''){
				databaseRequest("select * from userList where id="+user_Id+" and status!='Declined' and status !='Completed' and orderFinished="+isOrderFinished).then(function(response){
					if(response[0]!=undefined) resolve(response)
					else reject('isEmpty');
				}).catch(function(err){
					console.log(89,err);
				})
			}
			else{
				databaseRequest("select * from userList where id="+user_Id+" and status!='Declined' and status !='Completed' and workId="+workId+" and orderFinished="+isOrderFinished).then(function(response){
					if(response[0]!=undefined) resolve(response)
					else reject('isEmpty');
				}).catch(function(err){
					console.log(89,err);
				})
			}		
		})		
	})
}
const getUserList = () =>{
	return new Promise(function (resolve,reject) {
		databaseRequest("select * from userList").then(function(response){
			if(response.length != 0){
				resolve(response);
			}
			else reject('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç');
		})
	})
}
const getHistoryList = () =>{
	return new Promise(function (resolve,reject) {
		databaseRequest("select * from userList where paid=1").then(function(){
			if(response != '') resolve(response);
			else reject('–°–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—Ä–∏–∏ –ø—É—Å—Ç');
		})
	})
}
const getExecutorList = (subject ='') =>{
	return new Promise(function (resolve,reject) {
		console.log(subject);
		if(subject != ''){
			databaseRequest("select * from executorList where subject like '%"+subject+"%'").then(function(response){
				if(response != '') resolve(response);
				else reject('–°–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –ø—É—Å—Ç');
			})
		}
	})
}
const searchByWorkId = (workId = '') =>{
	return new Promise(function (resolve,reject) {
		if(workId != ''){
			databaseRequest("select * from userList where workId="+workId).then(function(response){
				if(response != ''){
					resolve(response)
				}
				else reject('not-found')
			})
		}
		else{
			reject("workId doesn't exist");
		}
	})
}
let specSymbols = ['"','&'];
let vkSpecSymbols = ['&quot;','&amp;'];
function replaceAll(string, search, replace) {
	return new Promise(function (resolve,reject) {
		let newString = '';
		for(let i = 0; i < specSymbols.length;i++) string = string.split(vkSpecSymbols[i]).join(specSymbols[i]);
	  	resolve(string);
	})
}
//////////////////////Bot////////////////////////
function Search(user_Id,workId){
	selectUser(user_Id,1,workId).then(function(response){
		let orderDetails = response;
		if((response[0].subject == '–ù–æ—Ä–º–∞—Ç–∏–≤—ã')||(response[0].Task == '–î–∏–∫—Ç–æ–≤–∫–∞')||(response[0].Task == '–°–¥–∞—Ç—å –∑–∞ –≤–∞—Å')||(response[0].Task == '–ü–µ—Ä–µ–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º')||(response[0].Task == '–û—Ç—Ä–∞–±–æ—Ç–∫–∞')){
			selectUser(user_Id,1).then(function(response){
				var message = '–ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑\n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n ID –∑–∞–∫–∞–∑–∞: '+orderDetails[0].workId+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+orderDetails[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+orderDetails[0].typeOfWork +'\n–í–∏–¥ —Ä–∞–±–æ—Ç—ã:'+orderDetails[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+orderDetails[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+orderDetails[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+orderDetails[0].comment+' \n\n –í–ª–æ–∂–µ–Ω–∏—è: \n';
				var Photos = ''; var Docs = '';
				if( (response[0].photos != null)&&(response[0].photos != 0) ){
					for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
						Photos += (response[0].photos).split('<--->')[i]+'\n';
					}
				}	
				else Photos ='\n–§–æ—Ç–æ: –æ—Ç—Å—É—Ç—Å–≤—É—é—Ç'
				if( (response[0].docs != null)&&(response[0].docs != 0) ){			
					for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
						Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
					}
				}
				else Docs = '\n–î–æ–∫—É–º–µ–Ω—Ç—ã: –æ—Ç—Å—É—Ç—Å–≤—É—é—Ç';
				databaseRequest("select id from grandadmin").then(function(response){
					let adminId = response[1].id;
					databaseRequest("update userList set status='Personal',executor="+adminId).then(function(){
						bot.execute('messages.send', {
						  random_id: randomInteger(0, 18446744073709551614),
						  chat_id: 7,
						  message: message+Docs+' \n\n'+Photos,
						  keyboard: Markup.keyboard([
						  	[
						  		Markup.button('–°–¥–µ–ª–∞—Ç—å –ª–∏—á–Ω—ã–º id:'+workId, 'positive')
						  	]							   	
						   ]).inline()
						})
					})
				})
			}).catch(function(err){
				console.log(2613,err);
			})
		}
		else {
			let WorkType = response[0].subject;
			let executors = []; let buttons = [];
			let workId = response[0].workId;
			let UserSubject = response[0].subject;
			
			getExecutorList(UserSubject).then(function(response){
				for(var i =0; i < response.length ;i++){
					if( (orderDetails[0].whoIsDeclined != null)&&(!orderDetails[0].whoIsDeclined.split(',').includes((response[i].id).toString(),0)) ) executors.push(response[i].id);
					else if(orderDetails[0].whoIsDeclined == null)  executors.push(response[i].id);
				}
				if(executors != ''){
					buttons.push(
						[
							Markup.button('–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ id:'+workId, 'positive'),
							Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+workId, 'primary')
						],
						[
							Markup.button('–û—Ç–∫–∞–∑–∞—Ç—å—Å—è id:'+workId, 'negative'),
						]
					);
					var message = '–ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑\n -----------------\n ID –∑–∞–∫–∞–∑–∞: '+orderDetails[0].workId+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+orderDetails[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+orderDetails[0].typeOfWork +'\n–í–∏–¥ —Ä–∞–±–æ—Ç—ã:'+orderDetails[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+orderDetails[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+orderDetails[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+orderDetails[0].comment+' \n\n –í–ª–æ–∂–µ–Ω–∏—è: \n';
					var Photos = ''; var Docs = '';
					if(orderDetails[0].photos != null){
						for(var i = 0; i < (orderDetails[0].photos).split('<--->').length;i++){
							Photos += (orderDetails[0].photos).split('<--->')[i]+'\n';
						}
					}
					if(orderDetails[0].docs != null){
						for(var i = 0; i < (orderDetails[0].docs).split('<--->').length;i++){
							Docs += ' \n'+(orderDetails[0].docs).split('<--->')[i]+'\n';
						}
					}
					bot.sendMessage(executors, message+Docs+'\n\n\n –í–ª–æ–∂–µ–Ω–∏—è:'+Photos,null, Markup.keyboard(buttons).inline());
				}
			}).catch(function(err){
				if(err == '–°–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –ø—É—Å—Ç'){
					var message = '–í–ù–ò–ú–ê–ù–ò–ï\n\n –°–ü–ò–°–û–ö –ò–°–ü–û–õ–ù–ò–¢–ï–õ–ï–ô –ü–†–ï–î–ú–ï–¢–ê:'+WorkType+' –ü–£–°–¢\n\n–ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑\n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\nID –∑–∞–∫–∞–∑–∞: '+orderDetails[0].workId+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+orderDetails[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+orderDetails[0].typeOfWork +'\n–í–∏–¥ —Ä–∞–±–æ—Ç—ã:'+orderDetails[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+orderDetails[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+orderDetails[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+orderDetails[0].comment+' \n\n –í–ª–æ–∂–µ–Ω–∏—è: \n';
					var Photos = ''; var Docs = '';
					if(orderDetails[0].photos!= undefined){
						for(var i = 0; i < (orderDetails[0].photos).split('<--->').length;i++){
							Photos += (orderDetails[0].photos).split('<--->')[i]+'\n';
						}
					}
					if(orderDetails[0].docs!= undefined){
						for(var i = 0; i < (orderDetails[0].docs).split('<--->').length;i++){
							Docs += ' \n'+(orderDetails[0].docs).split('<--->')[i]+'\n';
						}
					}
					bot.execute('messages.send', {
					  random_id: randomInteger(0, 18446744073709551614),
					  chat_id: 7,
					  message: message+Docs+' \n\n'+Photos,
					  keyboard: Markup.keyboard([
					  	[
					  		Markup.button('–°–¥–µ–ª–∞—Ç—å –ª–∏—á–Ω—ã–º id:'+workId, 'positive')
					  	]							   	
					   ]).inline()
					})
				}
				else console.log(2706,err);
			})
		}
		
	})
}
function randomInteger(min, max) {
  let rand = min + Math.random() * (max + 1 - min);
  return Math.floor(rand);
}
function BotReply(ctx,response = ' ',buttons = null){
	ctx.reply(response, null, buttons);
}
bot.command('–Ω–∞—á–∞—Ç—å', (ctx) => {
	console.log('message_new');
	BotReply(ctx,'–ü—Ä–∏–≤–µ—Ç –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —É—á–µ–±–æ–π. –¢–µ–±–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å?', Markup.keyboard([
	[
		Markup.button('–ó–∞–∫–∞–∑–∞—Ç—å', 'positive'),
		Markup.button('–í –¥—Ä—É–≥–æ–π —Ä–∞–∑', 'negative')
	],
	[
		Markup.button('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'positive')
	],
	[
		Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
	]
	]).oneTime());
});
bot.command('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', (ctx) => {
	var user_Id = ctx.message.user_id;
	databaseRequest('select * from userList where id='+user_Id+" and status !='Declined' and status !='Completed' and orderFinished=0").then(function(response){
		let orderDetails = response;
		let dateNow = new Date();
		if(orderDetails[0] != undefined ){
			/*let nowDate = dateNow.getDate()+'-'+dateNow.getMonth()+'-'+dateNow.getFullYear()+'-'+dateNow.getHours()+'-'+dateNow.getMinutes();
			console.log(nowDate);*/
			if( (orderDetails != '')&&(orderDetails[0].status ==  'getSuccess') ){		
				bot.execute('messages.createChat', {
				 title: orderDetails[0].workId+' '+orderDetails[0].subject,
				}).then(function(response){
					bot.execute('messages.getInviteLink', {
						peer_id: 2000000000+Number(response),
						group_id:148975156,
					}).then(function(chatLink){
						bot.execute('messages.editChat', {
							chat_id: Number(response),
							title: orderDetails[0].workId+' '+orderDetails[0].subject+' id:'+Number(response)
						}).then(function(){
							var message = '–ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑\n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+orderDetails[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+orderDetails[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+orderDetails[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+orderDetails[0].Task+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+orderDetails[0].comment+' \n\n–í–ª–æ–∂–µ–Ω–∏—è: ';
							var Photos = ''; var Docs = '';
							if(orderDetails[0].photos!= undefined){
								for(var i = 0; i < (orderDetails[0].photos).split('<--->').length;i++){
									Photos += (orderDetails[0].photos).split('<--->')[i]+'\n';
								}
							}
							if(orderDetails[0].docs!= undefined){
								for(var i = 0; i < (orderDetails[0].docs).split('<--->').length;i++){
									Docs += ' \n'+(orderDetails[0].docs).split('<--->')[i]+'\n';
								}
							}
							databaseRequest("insert chatList (workId,id,userChatId) values("+orderDetails[0].workId+","+orderDetails[0].id+","+Number(response)+")").then(function(){
								databaseRequest('update userList set chat = '+Number(response)+",status='InProcessing',orderFinished=1 where id="+user_Id+" and orderFinished =0").then(function(){
									EASYVK.call('messages.joinChatByInviteLink', {
										link: chatLink.link,
									}).then(function(chatJoin){
										let userChatID= chatJoin.chat_id;	
										EASYMANAGERVK.call('messages.joinChatByInviteLink', {
											link: chatLink.link,
										}).then(function(chatJoin){
											bot.execute('messages.send', {
												random_id: randomInteger(0, 18446744073709551614),
												peer_id:2000000000+Number(response),
												chat_id: Number(response),
												message: message+Docs+' \n\n'+Photos,
												group_id:148975156,
											}).then(function(response){
												BotReply(ctx,"–í–∞—à –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω.\n–î–ª—è –ø–æ–∏—Å–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –±–µ—Å–µ–¥–µ –≤–∞—à–µ–π –∑–∞–¥–∞—á–∏\n"+chatLink.link,Markup.keyboard([
													[
														Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
													]
												]))	
											}).catch(function(err){
												if(err == undefined){
													BotReply(ctx,"–í–∞—à –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω.\n–î–ª—è –ø–æ–∏—Å–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –±–µ—Å–µ–¥–µ –≤–∞—à–µ–π –∑–∞–¥–∞—á–∏\n"+chatLink.link,Markup.keyboard([
														[
															Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
														]
													]))
												}
												else console.log(323,err);
											})
										})
									})							
								}).catch(function(err){
									console.log(err);
								})
								})
							})
					}).catch(function(err){
						console.log(err);
					})
				}).catch(function(err){
					console.log(err);
				})
				/*EASYBOTVK.call('messages.createChat', {
					title: orderDetails[0].workId+' '+orderDetails[0].subject,
					group_id:148975156,
				}).then(function(userChatLink){
					let chatID = userChatLink.getFullResponse().response;
					let peerID = 2000000000+chatID;
					EASYBOTVK.call('messages.getInviteLink', {
						peer_id: peerID,
						group_id:148975156,
					}).then(function(chatLink){
						EASYBOTVK.call('messages.editChat', {
							chat_id: chatID,
							title: orderDetails[0].workId+' '+orderDetails[0].subject+' id:'+chatID
						}).then(function(){
							var message = '–ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑\n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+orderDetails[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+orderDetails[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+orderDetails[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+orderDetails[0].Task+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+orderDetails[0].comment+' \n\n–í–ª–æ–∂–µ–Ω–∏—è: ';
							var Photos = ''; var Docs = '';
							if(orderDetails[0].photos!= undefined){
								for(var i = 0; i < (orderDetails[0].photos).split('<--->').length;i++){
									Photos += (orderDetails[0].photos).split('<--->')[i]+'\n';
								}
							}
							if(orderDetails[0].docs!= undefined){
								for(var i = 0; i < (orderDetails[0].docs).split('<--->').length;i++){
									Docs += ' \n'+(orderDetails[0].docs).split('<--->')[i]+'\n';
								}
							}
							databaseRequest("insert chatList (workId,id,userChatId) values("+orderDetails[0].workId+","+orderDetails[0].id+","+chatID+")").then(function(){
								databaseRequest('update userList set chat = '+chatID+",status='InProcessing',orderFinished=1 where id="+user_Id+" and orderFinished =0").then(function(){						
									EASYVK.call('messages.joinChatByInviteLink', {
										link: chatLink.link,
									}).then(function(chatJoin){
										let userChatID= chatJoin.chat_id;	
										EASYMANAGERVK.call('messages.joinChatByInviteLink', {
											link: chatLink.link,
										}).then(function(chatJoin){
											bot.execute('messages.send', {
												random_id: randomInteger(0, 18446744073709551614),
												peer_id:peerID,
												chat_id: chatID,
												message: message+Docs+' \n\n'+Photos,
												group_id:148975156,
											}).then(function(){
												BotReply(ctx,"–í–∞—à –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω.\n–î–ª—è –ø–æ–∏—Å–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –±–µ—Å–µ–¥–µ –≤–∞—à–µ–π –∑–∞–¥–∞—á–∏\n"+chatLink.link,Markup.keyboard([
													[
														Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
													]
												]))	
											}).catch(function(err){
												console.log(323,err);
											})
										})					
									}).catch(function(err){
										console.log(329,err);
									})																												
								})	
							})
						}).catch(function(err){
						console.log(334,err);
					})						
					}).catch(function(err){
						console.log(336,err);
					})		
				}).catch(function(err){
					console.log(340,err);
				})	*/	
			}
			else if (orderDetails[0].status == 'WaitsComment'){		
				databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
					BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
						[
							Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
							Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
						],
						[
							Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
						]
					]).oneTime());
				})	
			}
			else if(orderDetails[0].status == 'setDeadline'){
				databaseRequest("update userList set status='setWorkTime' where id="+user_Id+" and status !='Declined' and status !='Completed' and orderFinished=0").then(function(){
					BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã (–ø–æ –ú–æ—Å–∫–≤–µ) –ø–æ –ø—Ä–∏–º–µ—Ä—É: 8:30', Markup.keyboard([
						[
							Markup.button('–ò–¥–µ—Ç —Å–µ–π—á–∞—Å!', 'positive'),
						],
						[
							Markup.button('–ù–µ –∑–Ω–∞—é','negative')
						],
						[
							Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
						],
						[
							Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
						]
					]).oneTime());
				})											
			}
			else if(orderDetails[0].status == 'selectingObject'){
				BotReply(ctx,'–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1) –∏–ª–∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π –ø—Ä–µ–¥–º–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤), –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ:\n'+subjectList, Markup.keyboard([
					[
						Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
					],
					[
						Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
					]
				]).oneTime());
			}
			else if(orderDetails[0].status == 'ObjectSelected'){
				BotReply(ctx,'–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ä–∞–±–æ—Ç—ã', Markup.keyboard([
					[
						Markup.button('–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞/–†–ö', 'positive'),
					],
					[
						Markup.button('–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞', 'primary'),
						Markup.button('–ß–µ—Ä—Ç–µ–∂', 'primary'),
					],
					[
						Markup.button('–≠–∫–∑–∞–º–µ–Ω/–ó–∞—á–µ—Ç', 'negative'),
						Markup.button('–†–µ—Ñ–µ—Ä–∞—Ç/–î–æ–∫–ª–∞–¥/–û—Ç—á–µ—Ç', 'negative')
					],
					[
						Markup.button('–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞', 'primary'),
					],
					[
						Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'primary'),
					]
				]).oneTime());
			}
			else{
				BotReply(ctx,'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.');
			}
		}
		else{
			BotReply(ctx,'–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è, –ø–æ–ø—Ä–æ–±—É–π –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ.');
		}
	})
})
bot.command('–ó–∞–∫–∞–∑–∞—Ç—å', (ctx) => {
	var user_Id = ctx.message.user_id;	
	selectUser(user_Id,0).then(function(response){
		let workID = response[0].workId;
		if( (response != '')&&(response[0].id != null)&&(response[0].id != 0) ){
			BotReply(ctx,'–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É:'+response[0].subject+' —Å ID: '+response[0].workId+'. –°–æ–∑–¥–∞—Ç—å –µ—â–µ?', Markup.keyboard([
				[
					Markup.button('–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑', 'positive')
				],
				[
					Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'primary')
				]
			]).oneTime());			
		}
		else{
			databaseRequest("delete from userList where id="+user_Id+" and orderFinished=0").then(function(){
				databaseRequest("insert userList (id,subject,status,orderFinished) values("+user_Id+",'null','selectingObject',0)").then(function(){
					BotReply(ctx,'–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1) –∏–ª–∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π –ø—Ä–µ–¥–º–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤), –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ:\n'+subjectList, Markup.keyboard([
						[
							Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
						]
					]).oneTime());
				})
			})			
		}
	}).catch(function(err){
		if(err == "isEmpty"){
			databaseRequest("insert userList (id,subject,status,orderFinished) values("+user_Id+",'null','selectingObject',0)").then(function(){
				BotReply(ctx,'–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1) –∏–ª–∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π –ø—Ä–µ–¥–º–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤), –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ:\n'+subjectList, Markup.keyboard([
					[
						Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
					]
				]).oneTime());
			})
		}
	})
});
bot.command('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', (ctx) => {
	var user_Id = ctx.message.user_id;	
	databaseRequest("select * from userList where id="+user_Id+" and orderFinished=0").then(function(response){
		if(response != ''){
				databaseRequest("update userList set askQuestion=1 where id ="+ user_Id).then(function(){
					BotReply(ctx,"–í–≤–æ–¥–∏—Ç–µ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –±–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–∫–∞ –≤—ã –Ω–µ –Ω–∞–∂–º—ë—Ç–µ ¬´–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å¬ª",Markup.keyboard([
						[
							Markup.button('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å','positive')
						]
					]))
				})			
		}
		else{
			databaseRequest("insert userList (id,subject,status,orderFinished,askQuestion) values("+user_Id+",'null','selectingObject',0,1)").then(function(){
				BotReply(ctx,"–í–≤–æ–¥–∏—Ç–µ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –±–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–∫–∞ –≤—ã –Ω–µ –Ω–∞–∂–º—ë—Ç–µ ¬´–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å¬ª",Markup.keyboard([
					[
						Markup.button('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å','positive')
					]
				]))
			})
		}
	})
});
bot.command('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', (ctx) => {
	var user_Id = ctx.message.user_id;	
	databaseRequest("update userList set askQuestion=0 where id ="+ user_Id).then(function(){
		BotReply(ctx,"–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–∫–∞–∑", Markup.keyboard([
			[
				Markup.button('–ó–∞–∫–∞–∑–∞—Ç—å', 'positive'),
				Markup.button('–í –¥—Ä—É–≥–æ–π —Ä–∞–∑', 'negative')
			],
			[
				Markup.button('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'positive')
			],
			[
				Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
			]
		]))
	}).catch(function(){
		BotReply(ctx,'–ü—Ä–∏–≤–µ—Ç –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —É—á–µ–±–æ–π. –¢–µ–±–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å?', Markup.keyboard([
			[
				Markup.button('–ó–∞–∫–∞–∑–∞—Ç—å', 'positive'),
				Markup.button('–í –¥—Ä—É–≥–æ–π —Ä–∞–∑', 'negative')
			],
			[
				Markup.button('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'positive')
			],
			[
				Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
			]
		]));
	})
});
bot.command('–í –¥—Ä—É–≥–æ–π —Ä–∞–∑', (ctx) => {
	BotReply(ctx,'–ï—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–ª—é—Å—å - –ø–∏—à–∏.\n –ú—ã –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –≤–∏–¥—ã —Ä–∞–±–æ—Ç:\n- –ø–æ–º–æ—â—å  –≤—Ä–µ–∂–∏–º–µ –æ–Ω–ª–∞–π–Ω\n- –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è\n- –∫—É—Ä—Å–æ–≤—ã–µ –∏ –≤–∫—Ä\n-–¥–∏–∫—Ç–æ–≤–∫–∞ –≤ –º–∏–∫—Ä–æ–Ω–∞—É—à–Ω–∏–∫/skype/discord –∏ —Ç.–¥\n- –≤—Å–µ –≤–∏–¥—ã –ø–æ–º–æ—â–∏ —Å —Å–µ—Å—Å–∏–µ–π\n- –æ—Ç—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–∑–∫—É–ª—å—Ç—É—Ä—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –ú–ì–¢–£ –∏–º.–ù.–≠. –ë–∞—É–º–∞–Ω–∞)\n- —Å–¥–∞—á–∞ –Ω–æ–º—Ä–∞—Ç–∏–≤–æ–≤ –Ω–∞ –≤–æ–µ–Ω–Ω—É—é –∫–∞—Ñ–µ–¥—Ä—É.\n –ù–∞—à–∏ –æ—Ç–∑—ã–≤—ã: https://vk.com/app6326142_-148975156', Markup.keyboard([
		[
			Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
		],
		[
			Markup.button('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'positive')
		]
	]));
});
bot.command('–î—Ä—É–≥–æ–π –ø—Ä–µ–¥–º–µ—Ç', (ctx) => {
	var user_Id = ctx.message.user_id;
	isExecutor(user_Id).then(function(){
		BotReply(ctx,'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —è–≤–ª—è—è—Å—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º.', Markup.keyboard([
			[
				Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'positive')
			],
			[
				Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
			]
		]).oneTime());
	}).catch(function(){
		databaseRequest("update userList set subject=0,status='selectingObject' where id="+user_Id+" and orderFinished =0").then(function(){
			BotReply(ctx,'–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1) –∏–ª–∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π –ø—Ä–µ–¥–º–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤), –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ:\n'+subjectList, Markup.keyboard([
			[
				Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
			],
			[
				Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
			]
			]).oneTime());
		})
	})
});
bot.command('–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑', (ctx) => {
	var user_Id = ctx.message.user_id;
	selectUser(user_Id,0).then(function(response){
		if( (response[0].workId != null)&&((response[0].workId != 0)) ){
			databaseRequest("delete from userList where id="+user_Id+" and orderFinished=0").then(function(){
				databaseRequest("delete from chatList where workId="+response[0].workId).then(function(){
					databaseRequest("insert userList (id,subject,status,orderFinished) values("+user_Id+",'null','selectingObject',0)").then(function(){
						BotReply(ctx,'–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1) –∏–ª–∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π –ø—Ä–µ–¥–º–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤), –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ:\n'+subjectList, Markup.keyboard([
						[
							Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
						]
						]).oneTime());
					})
				})	
			})	
		}
		else{
			databaseRequest("delete from userList where id="+user_Id+" and orderFinished=0").then(function(){
				databaseRequest("insert userList (id,subject,status,orderFinished) values("+user_Id+",'null','selectingObject',0)").then(function(){
					BotReply(ctx,'–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1) –∏–ª–∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π –ø—Ä–µ–¥–º–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤), –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ:\n'+subjectList, Markup.keyboard([
					[
						Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
					]
					]).oneTime());
				})
			})	
		}
	})	
})
bot.command(['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62'], (ctx) => {
	subjects = '';
	for(let i =0; i < ctx.message.body.split(',').length;i++){
		if( ctx.message.body.split(',')[i] == '1' ) subjects += '–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–æ–º–µ—Ç—Ä–∏—è,';
		else if( ctx.message.body.split(',')[i] == '2' ) subjects += '–í—ã—Å—à–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '3' ) subjects += '–î–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '4' ) subjects += '–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è,';
		else if( ctx.message.body.split(',')[i] == '5' ) subjects += '–ò–Ω—Ç–µ–≥—Ä–∞–ª—ã,';
		else if( ctx.message.body.split(',')[i] == '6' ) subjects += '–õ–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞,';
		else if( ctx.message.body.split(',')[i] == '7' ) subjects += '–õ–æ–≥–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '8' ) subjects += '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '9' ) subjects += '–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑,';
		else if( ctx.message.body.split(',')[i] == '10' ) subjects += '–¢–§–ö–ü,';
		else if( ctx.message.body.split(',')[i] == '11' ) subjects += '–¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '12' ) subjects += '–£—Ä–∞–≤–Ω–µ–Ω–∏—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ–∏–∑–∏–∫–∏,';
		else if( ctx.message.body.split(',')[i] == '13' ) subjects += '–ì–∏–¥—Ä–∞–≤–ª–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '14' ) subjects += '–î–µ—Ç–∞–ª–∏ –º–∞—à–∏–Ω,';
		else if( ctx.message.body.split(',')[i] == '15' ) subjects += '–ò–Ω–∂–µ–Ω–µ—Ä–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '16' ) subjects += '–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '17' ) subjects += '–ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤–µ–¥–µ–Ω–∏–µ,';
		else if( ctx.message.body.split(',')[i] == '18' ) subjects += '–ú–µ—Ç—Ä–æ–ª–æ–≥–∏—è,';
		else if( ctx.message.body.split(',')[i] == '19' ) subjects += '–ú–µ—Ö–∞–Ω–∏–∫–∞ –∂–∏–¥–∫–æ—Å—Ç–µ–π –∏ –≥–∞–∑–æ–≤ (–ú–ñ–ì),';
		else if( ctx.message.body.split(',')[i] == '20' ) subjects += '–ù–∞—á–µ—Ä—Ç–∞—Ç–µ–ª—å–Ω–∞—è –≥–µ–æ–º–µ—Ç—Ä–∏—è,';
		else if( ctx.message.body.split(',')[i] == '21' ) subjects += '–û—Å–Ω–æ–≤—ã –∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–±–æ—Ä–æ–≤ (–û–ö–ü),';
		else if( ctx.message.body.split(',')[i] == '22' ) subjects += '–ü–æ–¥—ä–µ–º–Ω–æ-—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ –º–∞—à–∏–Ω—ã (–ü–¢–ú),';
		else if( ctx.message.body.split(',')[i] == '23' ) subjects += '–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '24' ) subjects += '–†–µ–∑–∞–Ω–∏–µ,';
		else if( ctx.message.body.split(',')[i] == '25' ) subjects += '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ,';
		else if( ctx.message.body.split(',')[i] == '26' ) subjects += '–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤,';
		else if( ctx.message.body.split(',')[i] == '27' ) subjects += '–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '28' ) subjects += '–¢–µ–æ—Ä–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–æ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (–¢–ö–ú),';
		else if( ctx.message.body.split(',')[i] == '29' ) subjects += '–¢–µ–æ—Ä–∏—è –º–∞—à–∏–Ω –∏ –º–µ—Ö–∞–Ω–∏–∑–º–æ–≤ (–¢–ú–ú),';
		else if( ctx.message.body.split(',')[i] == '30' ) subjects += '–¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '31' ) subjects += '–§–∏–∑–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '32' ) subjects += '–≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '33' ) subjects += '–ë–∏–æ–ª–æ–≥–∏—è,';
		else if( ctx.message.body.split(',')[i] == '34' ) subjects += '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–π —É—á–µ—Ç,';
		else if( ctx.message.body.split(',')[i] == '35' ) subjects += '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏ –º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ,';
		else if( ctx.message.body.split(',')[i] == '36' ) subjects += '–ò—Å—Ç–æ—Ä–∏—è,';
		else if( ctx.message.body.split(',')[i] == '37' ) subjects += '–ö—Ä–∏–º–∏–Ω–∞–ª–∏—Å—Ç–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '38' ) subjects += '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞,';
		else if( ctx.message.body.split(',')[i] == '39' ) subjects += '–õ–æ–≥–∏—Å—Ç–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '40' ) subjects += '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥,';
		else if( ctx.message.body.split(',')[i] == '41' ) subjects += '–ú–µ–¥–∏—Ü–∏–Ω–∞,';
		else if( ctx.message.body.split(',')[i] == '42' ) subjects += '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è,';
		else if( ctx.message.body.split(',')[i] == '43' ) subjects += '–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç,';
		else if( ctx.message.body.split(',')[i] == '44' ) subjects += '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ,';
		else if( ctx.message.body.split(',')[i] == '45' ) subjects += '–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '46' ) subjects += '–ü—Ä–∞–≤–æ (–∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å—ë –ø—Ä–∞–≤–æ),';
		else if( ctx.message.body.split(',')[i] == '47' ) subjects += '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è,';
		else if( ctx.message.body.split(',')[i] == '48' ) subjects += '–°–æ—Ü–∏–æ–ª–æ–≥–∏—è,';
		else if( ctx.message.body.split(',')[i] == '49' ) subjects += '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º,';
		else if( ctx.message.body.split(',')[i] == '50' ) subjects += '–§–∏–ª–æ–ª–æ–≥–∏—è,';
		else if( ctx.message.body.split(',')[i] == '51' ) subjects += '–§–∏–ª–æ—Å–æ—Ñ–∏—è,';
		else if( ctx.message.body.split(',')[i] == '52' ) subjects += '–§–∏–Ω–∞–Ω—Å—ã,';
		else if( ctx.message.body.split(',')[i] == '53' ) subjects += '–•–∏–º–∏—è,';
		else if( ctx.message.body.split(',')[i] == '54' ) subjects += '–≠–∫–æ–Ω–æ–º–∏–∫–∞,';
		else if( ctx.message.body.split(',')[i] == '55' ) subjects += '–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è,';
		else if( ctx.message.body.split(',')[i] == '56' ) subjects += '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫,';
		else if( ctx.message.body.split(',')[i] == '57' ) subjects += '–õ–∞—Ç—ã–Ω—å,';
		else if( ctx.message.body.split(',')[i] == '58' ) subjects += '–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫,';
		else if( ctx.message.body.split(',')[i] == '59' ) subjects += '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫,';
		else if( ctx.message.body.split(',')[i] == '60' ) subjects += '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —è–∑—ã–∫,';
		else if( ctx.message.body.split(',')[i] == '61' ) subjects += '–§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞,';
		else if( ctx.message.body.split(',')[i] == '62' ) subjects += '–í–æ–µ–Ω–Ω–∞—è –∫–∞—Ñ–µ–¥—Ä–∞,';
		
	}	
	subjects = subjects.substring(0, subjects.length-1);
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(response){	
		databaseRequest("select * from grandadmin where id="+user_Id).then(function(response){			
			if((response[0].setworktypeto != null)&&(response[0].setworktypeto != 0)){
				var executor = response[0].setworktypeto;
				var Subjects = '';
				databaseRequest("select subject from executorList where id="+executor).then(function(response){
					if((response[0].subject != null)&&(response[0].subject != 0))Subjects = response[0].subject;
					Subjects += subjects+',';
					databaseRequest("update executorList set subject ='"+Subjects+"' where id="+executor).then(function(){
						databaseRequest("update grandadmin set priceto =0,setworktypeto =0 where id="+user_Id).then(function(){
							BotReply(ctx,'–í—ã –Ω–∞–∑–Ω–∞—á–∏–ª–∏ https://vk.com/id'+executor+' –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞(-–æ–≤): '+subjects, Markup.keyboard([
								[
									Markup.button('—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', 'positive')
								]
							]).oneTime());
						})
					})
				})								
			}
			else if((response[0].getExecutorList != 0)&&((response[0].getExecutorList != null))){
				let WorkType = subjects; let executors = '';
				databaseRequest("select id from executorList where subject like '%"+WorkType+"%'").then(function(response){
					for(var j =0; j < response.length;j++){
						executors += 'https://vk.com/id'+response[j].id+'\n';
					}
					if(executors == ''){
						BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç',  Markup.keyboard([
						[
							Markup.button('—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', 'positive')
						]
						]).oneTime())
					}
					else{
						BotReply(ctx,executors,  Markup.keyboard([
						[
							Markup.button('—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', 'positive')
						]
						]).oneTime())
					}	
				})			
			}
			else if((response[0].priceto != 0)&&((response[0].priceto != null))){
				databaseRequest("update grandadmin set priceto =0 where id="+user_Id).then(function(){
					let workId = response[0].priceto;
					searchByWorkId(response[0].priceto).then(function(response){
						let chatID = response[0].chat;
						let peerID = 2000000000+chatID;						
						var price = ctx.message.body;
						let executorProfileID = response[0].executor;
						var message = '\n -----------------\n ID –∑–∞–∫–∞–∑–∞: '+response[0].workId+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+' \n –í–ª–æ–∂–µ–Ω–∏—è: \n';
						var Photos = ''; var Docs = '';
						if(response[0].photos!= null){
							for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
								Photos += (response[0].photos).split('<--->')[i]+'\n';
							}
						}
						if(response[0].docs!= null){
							for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
								Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
							}
						}
						databaseRequest("select executor_id from executorList where id="+executorProfileID).then(function(response){
								if( (response[0].executor_id != null)&&(response[0].executor_id != 0) ){
									databaseRequest("update userList set price="+price+" where workId="+workId).then(function(){
										bot.execute('messages.send', {
										  random_id: randomInteger(0, 18446744073709551614),
										  peer_id:peerID,
										  chat_id: chatID,
										  message: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ–¥–æ–±—Ä–∞–Ω:\nID –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:'+response[0].executor_id+'\n –°—Ç–æ–∏–º–æ—Å—Ç—å:'+price+'\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ: \n'+message+Photos+'\n'+Docs,
										  keyboard: Markup.keyboard([
										  	[
										  		Markup.button('–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è', 'positive'),
										  		Markup.button('–û—Ç–∫–∞–∑–∞—Ç—å—Å—è', 'negative')
										  	]							   	
										   ])
										}).then(function(response){
											console.log(response);
										}).catch(function(err){
											console.log(err);
										})
										BotReply(ctx,'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∑–∞–∫–∞–∑—á–∏–∫—É')
									})										
								}
								else{
									BotReply(ctx,'–£ –∑–∞–∫–∞–∑–∞ –Ω–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è')
								}							
							})																					
					}).catch(function(err){
						if(err == 'not-found'){
							BotReply(ctx,'–ó–∞–∫–∞–∑–∞ —Å ID: '+(ctx.message.body).split(':')[0] +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
						}
						else if(err == "workId doesn't exist"){
							BotReply(ctx,'–ù–µ —É–∫–∞–∑–∞–Ω ID')
						}
						else{
							console.log(3531,err);
						}
					})
				})		
			}
			else{
				BotReply(ctx,'–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è, —É–∫–∞–∂–∏ –æ—Ç–≤–µ—Ç –ø–æ –ø—Ä–∏–º–µ—Ä—É –≤—ã—à–µ –∏–ª–∏ –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ –°–±—Ä–æ—Å')
			}
		})
	}).catch(function(){
		isExecutor(user_Id).then(function(response){
			selectUser(user_Id).then(function(response){
				var ExecutorChat = response[0].chat; var setPrice = response[0].setpriceto; var ApproximatePrice = response[0].waitto;
				if((setPrice != null)&&(setPrice != 0)){
					databaseRequest("select * from userList where workId="+ApproximatePrice).then(function(response){					
						if( Number.isInteger(parseInt(ctx.message.body)) ){
							var workID = response[0].workId;
							var price = ctx.message.body;
							var message = '\n -----------------\n ID –∑–∞–∫–∞–∑–∞: '+workID+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment+'\n –í–ª–æ–∂–µ–Ω–∏—è: \n';
							var Photos = ''; var Docs = '';
							if(response[0].photos!= null){
								for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
									Photos += (response[0].photos).split('<--->')[i]+'\n';
								}
							}
							if(response[0].docs!= null){
								for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
									Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
								}
							}
							databaseRequest("update executorList set setpriceto =0 where id="+user_Id).then(function(){
								databaseRequest("update userList set executorPrice="+parseInt(price)+",status = 'PriceSelected' where workId ="+workID).then(function(){
									bot.execute('messages.send', {
									  random_id: randomInteger(0, 18446744073709551614),
									  chat_id: 4,
									  message: '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω https://vk.com/id'+user_Id+'\—Ç –¶–µ–Ω–∞: '+price+' \n –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ: \n'+message+Photos,
									  keyboard: Markup.keyboard( [
									  	[Markup.button('–ù–∞—Ü–µ–Ω–∫–∞: '+ApproximatePrice+' ID:'+response[0].executor_id, 'positive')]
									  ] ).inline()
									})
									BotReply(ctx,'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.')
								})
							})
						}
						else{
							BotReply(ctx,'–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã. –£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–∏—Å–ª–æ–º')
						}
					}).catch(function(err){
						BotReply(ctx,'–ö–ª–∏–µ–Ω—Ç–∞ —Å ID: '+(ctx.message.body).split(':')[0] +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
					})
				}
				else if((ApproximatePrice != null)&&(ApproximatePrice != 0)){
					databaseRequest("select * from userList where workId="+ApproximatePrice).then(function(response){					
						if( Number.isInteger(parseInt(ctx.message.body)) ){
							var workID = response[0].workId;
							var price = ctx.message.body;
							let executorStartPrice = '';
							if(response[0].executorStartPrice != null) executorStartPrice = response[0].executorStartPrice+','+price+'_'+user_Id;
							else executorStartPrice = price+'_'+user_Id;
							var message = '\n -----------------\n ID –∑–∞–∫–∞–∑–∞: '+workID+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment+'\n –í–ª–æ–∂–µ–Ω–∏—è: \n';
							var Photos = ''; var Docs = '';
							if(response[0].photos!= null){
								for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
									Photos += (response[0].photos).split('<--->')[i]+'\n';
								}
							}
							if(response[0].docs!= null){
								for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
									Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
								}
							}	
							databaseRequest("update executorList set waitto =0 where id="+user_Id).then(function(){
								databaseRequest("update userList set executorStartPrice ='"+executorStartPrice+"' where workId="+workID).then(function(){
									databaseRequest("select executor_id,chatMessage from executorList where id="+user_Id).then(function(response){
										bot.execute('messages.send', {
										  random_id: randomInteger(0, 18446744073709551614),
										  chat_id: 4,
										  message: '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: https://vk.com/id'+user_Id+'\n–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞: '+price+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:'+response[0].chatMessage+'\n –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å\n –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ: \n'+message+Photos,
										  keyboard: Markup.keyboard( [ [Markup.button('–ù–∞—Ü–µ–Ω–∫–∞: '+ApproximatePrice+' ID:'+response[0].executor_id, 'positive')]]  ).inline()
										})
										bot.sendMessage([106541016,20904658],'–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: https://vk.com/id'+user_Id+'\n–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞: '+price+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:'+response[0].chatMessage+'\n –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å\n –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ: \n'+message+Photos,)
										BotReply(ctx,'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.')		
									})	
								})																				
							})
						}
						else{
							BotReply(ctx,'–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã. –£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–∏—Å–ª–æ–º')
						}
					}).catch(function(err){
						BotReply(ctx,'–ó–∞–∫–∞–∑–∞ —Å ID: '+ApproximatePrice +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
					})
				}
				else{
					BotReply(ctx,"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º", Markup.keyboard([						
						[
							Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
						],
						[
							Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'primary'),
						],
						[
							Markup.button('–û—Ç–∫—Ä—ã—Ç—ã–µ —Å–ø–æ—Ä—ã', 'negative'),
						],
					]).oneTime());
				}
			})
		}).catch(function(){
			databaseRequest("select * from userList where id="+user_Id+" and orderFinished=0").then(function(response){
				if(response != ''){
					if(response[0].status == 'setDeadline'){
						selectUser(user_Id).then(function(response){
							if( (response[0].comment !=null)&&(response[0].comment !=0) ){
								databaseRequest('update userList set deadline = "'+ctx.message.body+'", status="getSuccess" where id='+user_Id+" and orderFinished=0").then(function(){							
									databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
										BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
											[
												Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
												Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
											],
											[
												Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
											],
											[
												Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
											]
										]).oneTime());
									})	
								}).catch(function(err){
									console.log(2158,err);
								})									
							}
							else{
								databaseRequest('update userList set deadline = "'+ctx.message.body+'" where id='+user_Id+" and orderFinished=0").then(function(){							
									BotReply(ctx,'–£–∫–∞–∑–∞—Ç—å –¥–µ–¥–ª–∞–π–Ω: '+ctx.message.body+'?', Markup.keyboard([
										[
											Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
											Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
										],
										[
											Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
										]
									]).oneTime());
								}).catch(function(err){
									console.log(2158,err);
								})	
							}
						})								
					}
					else if(response[0].status == 'selectingObject'){
						if( (response[0].comment != null)&&(response[0].comment != 0) ){
							databaseRequest('update userList set subject = "'+subjects+'", status="getSuccess" where id='+user_Id+" and orderFinished=0").then(function(){
								databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
									BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
										[
											Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
											Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
										],
										[
											Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
										]
									]).oneTime());
								})	
							}).catch(function(err){
								console.log(2158,err);
							})	
						}
						else{
							console.log(subjects);
							databaseRequest('update userList set subject = "'+subjects+'", status="ObjectSelected" where id='+user_Id+" and orderFinished=0").then(function(){
								BotReply(ctx,'–í—ã–±–µ—Ä–∏ –≤–∏–¥ –ø–æ–º–æ—â–∏', Markup.keyboard([
								[
									Markup.button('–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞/–†–ö', 'primary'),
									Markup.button('–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞', 'primary'),
								],
								[
									Markup.button('–≠–∫–∑–∞–º–µ–Ω/–ó–∞—á–µ—Ç', 'primary'),
									Markup.button('–ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞', 'primary'),
								],
								[
									Markup.button('–†–µ—Ñ–µ—Ä–∞—Ç/–î–æ–∫–ª–∞–¥/–û—Ç—á–µ—Ç', 'primary'),
									Markup.button('–î–∏–ø–ª–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞', 'primary')
								],
								[
									Markup.button('–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞', 'primary'),
								],
								[
									Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
								]
							]).oneTime());	
							}).catch(function(err){
								console.log(2158,err);
							})	
						}								
					}
					else if(response[0].status == 'setWorkTime'){
						selectUser(user_Id).then(function(response){
							if( (response[0].comment !=null)&&(response[0].comment !=0) ){
								databaseRequest('update userList set workTime = "'+ctx.message.body+'", status="getSuccess" where id='+user_Id+" and orderFinished=0").then(function(){							
									databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
										BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+ctx.message.body+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
											[
												Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
												Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
											],
											[
												Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
											]
										]).oneTime());
									})	
								}).catch(function(err){
									console.log(2158,err);
								})									
							}
							else{
								databaseRequest('update userList set workTime = "'+ctx.message.body+'", status="WaitsComment" where id='+user_Id+" and orderFinished=0").then(function(){							
									BotReply(ctx,'–û–ø–∏—à–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã –º—ã —Ç–æ—á–Ω–æ –æ—Ü–µ–Ω–∏–ª–∏ —Ä–∞–±–æ—Ç—É (–∫–∞–∫–∏–µ –Ω—É–∂–Ω—ã –Ω–æ–º–µ—Ä–∞, –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞, –Ω—É–∂–Ω–∞ –ª–∏ —Ç–µ–æ—Ä–∏—è –∏ —Ç.–¥.).–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥, —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ.', Markup.keyboard([
										[
											Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
										]
									]).oneTime());
								}).catch(function(err){
									console.log(2158,err);
								})	
							}
						})								
					}
					else if(response[0].status == 'ObjectSelected'){
						BotReply(ctx,'–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ä–∞–±–æ—Ç—ã', Markup.keyboard([
							[
								Markup.button('–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞/–†–ö', 'positive'),
							],
							[
								Markup.button('–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞', 'primary'),
								Markup.button('–ß–µ—Ä—Ç–µ–∂', 'primary'),
							],
							[
								Markup.button('–≠–∫–∑–∞–º–µ–Ω/–ó–∞—á–µ—Ç', 'negative'),
							],
							[
								Markup.button('–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞', 'primary'),
							],
							[
								Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
							]
						]).oneTime());
					}
					else if (response[0].status == 'WaitsComment'){		
						databaseRequest("update userList set comment = '"+ctx.message.body+"',status = 'getSuccess' where id="+user_Id+" and orderFinished=0").then(function(){
							databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
								BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
									[
										Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
										Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
									],
									[
										Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
									]
								]).oneTime());
							})	
						})	
					}
					else if(response[0].status == 'getSuccess'){
						BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
							[
								Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
								Markup.button('–û—Ç–∫–∞–∑–∞—Ç—å—Å—è', 'negative')
							],
							[
								Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
							]
						]).oneTime());
					}
					else{
						BotReply(ctx,'–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è, —É–∫–∞–∂–∏ –æ—Ç–≤–µ—Ç –ø–æ –ø—Ä–∏–º–µ—Ä—É –≤—ã—à–µ –∏–ª–∏ –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ –°–±—Ä–æ—Å'),
						BotReply(ctx,'–ü–æ–¥–æ–∂–¥–∏.. –ú–æ–∂–µ—Ç —Ç—ã —Ö–æ—á–µ—à—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π?', Markup.keyboard([
							[
								Markup.button('–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', 'primary')
							],
							[
								Markup.button('–°–±—Ä–æ—Å', 'negative')
							]
						]).oneTime());
					}					
				}
				else{
					databaseRequest("insert userList (id,subject,status,orderFinished) values("+user_Id+",'"+subjects+"','ObjectSelected',0)").then(function(){
						BotReply(ctx,'–í—ã–±–µ—Ä–∏ –≤–∏–¥ –ø–æ–º–æ—â–∏', Markup.keyboard([
							[
								Markup.button('–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞/–†–ö', 'primary'),
								Markup.button('–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞', 'primary'),
							],
							[
								Markup.button('–≠–∫–∑–∞–º–µ–Ω/–ó–∞—á–µ—Ç', 'primary'),
								Markup.button('–ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞', 'primary'),
							],
							[
								Markup.button('–†–µ—Ñ–µ—Ä–∞—Ç/–î–æ–∫–ª–∞–¥/–û—Ç—á–µ—Ç', 'primary'),
								Markup.button('–î–∏–ø–ª–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞', 'primary')
							],
							[
								Markup.button('–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞', 'primary'),
							],
							[
								Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
							]
						]).oneTime());	
					})
				}
			})
		})
	})
});
bot.command(['–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞/–†–ö','–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞','–ß–µ—Ä—Ç–µ–∂','–≠–∫–∑–∞–º–µ–Ω/–ó–∞—á–µ—Ç','–†–µ—Ñ–µ—Ä–∞—Ç/–î–æ–∫–ª–∞–¥/–û—Ç—á–µ—Ç','–ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞','–î–∏–ø–ª–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞','–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞'], (ctx) => {
	var user_Id = ctx.message.user_id;
	console.log(ctx.message.body);	
	databaseRequest("select status,Task from userList where id="+user_Id+" and orderFinished=0").then(function(response){
		if(response != ''){
			if(response[0].status == 'ObjectSelected'){
				let TypeOfWork = (ctx.message.body);
				if( (response[0].Task != null)&&(response[0].Task != 0) ){
					databaseRequest("update userList set typeOfWork = '"+TypeOfWork+"',status='getSuccess' where id="+user_Id+" and orderFinished=0").then(function(){
						databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
							BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
								[
									Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
									Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
								],
								[
									Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
								],
								[
									Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
								]
							]).oneTime());
						})						
					})	
				}				
				else{
					databaseRequest("update userList set typeOfWork = '"+TypeOfWork+"',status = 'typeOfWorkSelected' where id="+user_Id+" and orderFinished=0").then(function(){
						BotReply(ctx,'–í—ã–±–µ—Ä–∏ –≤–∏–¥ –ø–æ–º–æ—â–∏', Markup.keyboard([
							[
								Markup.button('–ü—Ä–∏—Å–ª–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ', 'primary'),
								Markup.button('–ü–µ—Ä–µ–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º', 'primary')
							],
							[
								Markup.button('–î–∏–∫—Ç–æ–≤–∫–∞', 'primary'),
								Markup.button('–°–¥–∞—Ç—å –∑–∞ –≤–∞—Å', 'primary'),
							],
							[
								Markup.button('–û—Ç—Ä–∞–±–æ—Ç–∫–∞', 'primary'),
								Markup.button('–ù–æ—Ä–º–∞—Ç–∏–≤—ã', 'primary'),
							],
							[
								Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
							]
						]).oneTime());
					})
				}				
			}		
			else if (response[0].status == 'WaitsComment'){
				databaseRequest("update userList set comment = '"+ctx.message.body+"',status = 'getSuccess' where id="+user_Id+" and orderFinished=0").then(function(){
					databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
						BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
							[
								Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
								Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
							],
							[
								Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
							]
						]).oneTime());
					})	
				})	
			}	
			else if(response[0].status == 'getSuccess'){
				BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
					[
						Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
						Markup.button('–û—Ç–∫–∞–∑–∞—Ç—å—Å—è', 'negative')
					],
					[
						Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
					]
				]).oneTime());
			}
		}
		else{
			BotReply(ctx,'–ü—Ä–∏–≤–µ—Ç –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —É—á–µ–±–æ–π. –¢–µ–±–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å?', Markup.keyboard([
			[
				Markup.button('–ó–∞–∫–∞–∑–∞—Ç—å', 'positive'),
				Markup.button('–í –¥—Ä—É–≥–æ–π —Ä–∞–∑', 'negative')
			],
			[
				Markup.button('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'positive')
			],
			[
				Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
			]
			]).oneTime());
		}
	})
});
bot.command('–°–º–µ–Ω–∏—Ç—å —Ç–∏–ø —Ä–∞–±–æ—Ç—ã', (ctx) => {
	var user_Id = ctx.message.user_id;
	databaseRequest("update userList set status='ObjectSelected' where id="+user_Id+" and orderFinished=0").then(function(){
		BotReply(ctx,'–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ä–∞–±–æ—Ç—ã', Markup.keyboard([
			[
				Markup.button('–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞/–†–ö', 'primary'),
				Markup.button('–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞', 'primary'),
			],
			[
				Markup.button('–≠–∫–∑–∞–º–µ–Ω/–ó–∞—á–µ—Ç', 'primary'),
				Markup.button('–ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞', 'primary'),
			],
			[
				Markup.button('–†–µ—Ñ–µ—Ä–∞—Ç/–î–æ–∫–ª–∞–¥/–û—Ç—á–µ—Ç', 'primary'),
				Markup.button('–î–∏–ø–ª–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞', 'primary')
			],
			[
				Markup.button('–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞', 'primary'),
			],
			[
				Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive'),
			]
		]).oneTime());
	})	
});
bot.command('–î–µ–¥–ª–∞–π–Ω', (ctx) => {
	var user_Id = ctx.message.user_id;
	databaseRequest("update userList set deadline=0,status='setDeadline' where id="+user_Id+" and orderFinished =0").then(function(){
		BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –¥–µ–¥–ª–∞–π–Ω–∞ –ø–æ –ø—Ä–∏–º–µ—Ä—É: 6.08. –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, —Ç–æ —Å–º–æ–∂–µ—Ç–µ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —É–≤–µ–¥–æ–º–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.', Markup.keyboard([[
				Markup.button('–°–µ–≥–æ–¥–Ω—è', 'primary'),
				Markup.button('–ó–∞–≤—Ç—Ä–∞', 'primary'),
			],
			[
				Markup.button('–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é', 'primary'),
				Markup.button('–ß–µ—Ä–µ–∑ –º–µ—Å—è—Ü', 'primary'),
			],
			[
				Markup.button('–î—Ä—É–≥–∞—è', 'default'),
				Markup.button('–ù–µ –∑–Ω–∞—é', 'default'),
			],
			[
				Markup.button('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', 'default')
			],
			[
				Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
			]
		]).oneTime());
	})
})
bot.command('–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è', (ctx) => {
	var user_Id = ctx.message.user_id;
	databaseRequest('update userList set workTime = 0, status="setWorkTime" where id='+user_Id+" and orderFinished=0").then(function(){							
		BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã (–ø–æ –ú–æ—Å–∫–≤–µ) –ø–æ –ø—Ä–∏–º–µ—Ä—É: 8:30', Markup.keyboard([
			[
				Markup.button('–ò–¥–µ—Ç —Å–µ–π—á–∞—Å!', 'positive'),
			],
			[
				Markup.button('–ù–µ –∑–Ω–∞—é','negative')
			],
			[
				Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
			],
			[
				Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
			]
		]).oneTime());	
	})
})
bot.command('–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', (ctx) => {
	var user_Id = ctx.message.user_id;
	databaseRequest("update userList set comment=0,status='WaitsComment' where id="+user_Id+" and orderFinished =0").then(function(){
		BotReply(ctx,'–û–ø–∏—à–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã –º—ã —Ç–æ—á–Ω–æ –æ—Ü–µ–Ω–∏–ª–∏ —Ä–∞–±–æ—Ç—É (–∫–∞–∫–∏–µ –Ω—É–∂–Ω—ã –Ω–æ–º–µ—Ä–∞, –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞, –Ω—É–∂–Ω–∞ –ª–∏ —Ç–µ–æ—Ä–∏—è –∏ —Ç.–¥.).–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥, —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ.',Markup.keyboard([
			[
				Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
			]
		]))
	})
})
bot.command('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', (ctx) => {
	BotReply(ctx,'–í—ã–±–µ—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ', Markup.keyboard([		
		[
			Markup.button('–î—Ä—É–≥–æ–π –ø—Ä–µ–¥–º–µ—Ç', 'primary'),
			Markup.button('–°–º–µ–Ω–∏—Ç—å —Ç–∏–ø —Ä–∞–±–æ—Ç—ã', 'primary'),
		],
		[
			Markup.button('–°–º–µ–Ω–∏—Ç—å –≤–∏–¥ –ø–æ–º–æ—â–∏', 'primary'),
			Markup.button('–î–µ–¥–ª–∞–π–Ω', 'primary'),
		],
		[
			Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è', 'primary'),
			Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', 'primary'),
		],
		[
			Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
		]
	]).oneTime());
})
bot.command('–°–º–µ–Ω–∏—Ç—å –≤–∏–¥ –ø–æ–º–æ—â–∏', (ctx) => {
	var user_Id = ctx.message.user_id;
	databaseRequest("update userList set status='typeOfWorkSelected' where id="+user_Id+" and orderFinished=0").then(function(){
		BotReply(ctx,'–í—ã–±–µ—Ä–∏ –≤–∏–¥ –ø–æ–º–æ—â–∏', Markup.keyboard([
			[
				Markup.button('–ü—Ä–∏—Å–ª–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ', 'primary'),
				Markup.button('–ü–µ—Ä–µ–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º', 'primary')
			],
			[
				Markup.button('–î–∏–∫—Ç–æ–≤–∫–∞', 'primary'),
				Markup.button('–°–¥–∞—Ç—å –∑–∞ –≤–∞—Å', 'primary')
			],
			[
				Markup.button('–û—Ç—Ä–∞–±–æ—Ç–∫–∞', 'positive'),
				Markup.button('–ù–æ—Ä–º–∞—Ç–∏–≤—ã', 'positive')
			],
			[
				Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
			],
			[
				Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
			]				
		]).oneTime())
	})	
});
bot.command('–°–±—Ä–æ—Å', (ctx) => {
	var user_Id = ctx.message.user_id;
	databaseRequest("select workid from userList where id ="+user_Id+" and status !='Declined' and status !='Completed'").then(function(response){
		let workID = response[0].workId;
		databaseRequest("delete from userList where id ="+user_Id+" and status !='Declined' and status !='Completed' ").then(function(){
			databaseRequest("delete from chatList where workId="+workID).then(function(){
				BotReply(ctx,'–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ –Ω–∞—á–∞—Ç—å.', Markup.keyboard([
					[
						Markup.button('–Ω–∞—á–∞—Ç—å', 'positive')
					]
				]).oneTime())
			})			
		})
	})	
});
bot.command('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', (ctx) => {
	var user_Id = ctx.message.user_id;
	selectUser(user_Id).then(function(response){
		let workID = response[0].workId;
		databaseRequest("update userList set status='Declined',orderFinished=1 where id="+user_Id+" and orderFinished=0").then(function(){
			databaseRequest("delete from chatList where workId="+workID).then(function(){
				BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä—á–∏–∏–Ω—É –æ—Ç–º–µ–Ω—ã, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–∞.\n –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç, –ª–∏–±–æ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π.',Markup.keyboard([
					[
						Markup.button('–î–æ–ª–≥–∏–π –æ—Ç–≤–µ—Ç', 'primary'),
						Markup.button('–†–∞–∑–æ–±—Ä–∞–ª—Å—è —Å–∞–º', 'positive')
					],
					[
						Markup.button('–í—ã—Å–æ–∫–∞—è —Ü–µ–Ω–∞', 'primary'),
						Markup.button('–í—ã —Ö–∞–º–ª–æ!', 'negative')
					],
					[
						Markup.button('–ù–µ –¥–æ–≤–µ—Ä—è—é', 'negative')
					],
					[
						Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
					]
				]).oneTime())
			})			
		})
	}).catch(function(err){
		BotReply(ctx,'–£ –≤–∞—Å –Ω–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤')	
	})	
})
bot.command(['–î–æ–ª–≥–∏–π –æ—Ç–≤–µ—Ç','–†–∞–∑–æ–±—Ä–∞–ª—Å—è —Å–∞–º','–í—ã—Å–æ–∫–∞—è —Ü–µ–Ω–∞','–í—ã —Ö–∞–º–ª–æ!','–ù–µ –¥–æ–≤–µ—Ä—è—é'], (ctx) => {
	var user_Id = ctx.message.user_id;
	databaseRequest("update userList set orderFinished=1,comment='"+ctx.message.body+"' where id="+user_Id+" and orderFinished=0").then(function(){
		databaseRequest("select * from userList where status='Declined' and id="+user_Id+" and orderFinished=1").then(function(response){
			var message;
			if( (response[0].executor != null)&&(response[0].executor != 0) ){
				let executor = response[0].executor;
				message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: https://vk.com/id'+executor+'\n–°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n –ü—Ä–∏—á–∏–Ω–∞: '+ctx.message.body;
			}
			else if(response[0].price != null){
				message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n –ü—Ä–∏—á–∏–Ω–∞: '+ctx.message.body;
			}
			else {
				message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n –ü—Ä–∏—á–∏–Ω–∞: '+ctx.message.body;
			}
			bot.execute('messages.send', {
			  random_id: randomInteger(0, 18446744073709551614),
			  chat_id: 8,
			  message: message
			})
			BotReply(ctx,'–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–¥–µ–π—Å—Ç–≤–∏–µ —É–ª—É—á—à–µ–Ω–∏—é –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞. \n –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∑–∞–Ω–æ–≤–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑.',Markup.keyboard([
				[
					Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
				]
			]))
		})		
	})
})
bot.command('–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', (ctx) => {
	var user_Id = ctx.message.user_id;
	connection.query("select * from user_"+user_Id,function(err,response){
		if(err){
			if(err.sqlMessage == "Table 'vkbotdb.user_"+user_Id+"' doesn't exist"){
				connection.query("select * from executor_"+user_Id,function(err,response){
					if(err){console.log(err);}
					else{
						if(response != ''){
							bot.execute('messages.send', {
							  random_id: randomInteger(0, 18446744073709551614),
							  chat_id: 2,
							  message: ' –ß–µ–ª–æ–≤–µ–∫—É –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å https://vk.com/id'+user_Id
							}),
							BotReply(ctx,'–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', Markup.keyboard([
								Markup.button('–°–±—Ä–æ—Å', 'negative')
							]).oneTime())
						}
					}
				});
			}
			else{
				console.log("ERROR",err);
			}
		}
		else {
			if(response != ''){
				if(response[0].workId!= undefined){
					var workid = response[0].workId;
							bot.execute('messages.send', {
							  random_id: randomInteger(0, 18446744073709551614),
							  chat_id: 2,
							  message: ' –ß–µ–ª–æ–≤–µ–∫—É –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å https://vk.com/id'+user_Id+' \n ID: '+workid
							}),
							BotReply(ctx,'–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', Markup.keyboard([
								Markup.button('–°–±—Ä–æ—Å', 'negative')
							]).oneTime())
				}
			}
			else{
				console.log(response);
			}		
		}
	})
});
bot.command('–û—Ç–∫–∞–∑–∞—Ç—å—Å—è', (ctx) => {
	var user_Id = ctx.message.user_id;	 
	console.log('////–û–¢–ö–ê–ó////',ctx.message.body.split(':')[1]);
		isAdmin(user_Id).then(function(){
			if(ctx.message.body.split(':')[1]!= undefined){
				searchByWorkId(ctx.message.body.split(':')[1]).then(function(response){
					let ID = response[0].id; let WORKID = response[0].workId; let executorId = response[0].executor;
					databaseRequest("update userList set executor=0,chat=0 where workId="+WORKID).then(function(){
						databaseRequest("update chatList set executorId=0,executorChatId=0 where workId="+WORKID).then(function(){
							Search(ID,WORKID,user_Id)
							BotReply(ctx,'–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º');	
						})					
					})
				}).catch(function(err){
					BotReply(ctx,'–ó–∞–∫–∞–∑–∞ —Å ID:'+ctx.message.body.split(':')[1]+' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')	
				})
			}
		}).catch(function(){
			isExecutor(user_Id).then(function(){
				if(ctx.message.body.split(':')[1]!= undefined){
					databaseRequest("update chatList set executorId=0,executorChatId=0 where workId="+ctx.message.body.split(':')[1]).then(function(){
						searchByWorkId(ctx.message.body.split(':')[1]).then(function(response){		
							let whoIsDeclined = ''; let whoIsAccepted = response[0].whoIsAccepted;																
								if( (response[0].whoIsDeclined != null) ){
									if( response[0].whoIsDeclined.split(',').includes((user_Id).toString(),0) == false){
										whoIsDeclined += response[0].whoIsDeclined+','+user_Id;
									}		
									else{
										BotReply(ctx,'–í—ã —Ä–∞–Ω–µ–µ —É–∂–µ –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —ç—Ç–æ–≥–æ –∑–∞–∫–∞–∑–∞.');				
									} 			
								}
								else whoIsDeclined += user_Id;
								
								console.log('–ö—Ç–æ –æ—Ç–∫–∞–∑–∞–ª—Å—è');
								if( whoIsDeclined != ''){									
									databaseRequest("update userList set whoIsDeclined='"+whoIsDeclined+"' where workId="+ctx.message.body.split(':')[1]).then(function(){
										searchByWorkId(ctx.message.body.split(':')[1]).then(function(response){
											let workId = response[0].workId;
											let subject = response[0].subject;
											whoIsDeclined = response[0].whoIsDeclined;
											databaseRequest("select id from executorList where subject like '%"+subject+"%'").then(function(executorIDs){
												if( whoIsDeclined.split(',').length >= executorIDs.length ){
													databaseRequest("update userList set status='Personal' where workId="+workId).then(function(){
														var Photos = ''; var Docs = ''; let executorPrice = ''; let Executor = ''; let Price = 0; let Status = ''; let priceMarkup = 0;
														if( (response[0].photos!= null)&&(response[0].photos!= 0) ){
															for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
																Photos += (response[0].photos).split('<--->')[i]+'\n';
															}
														}
														if( (response[0].docs!= null)&&((response[0].docs!= 0)) ){
															for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
																Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
															}
														}			
														if(response[0].status == 'InProcessing'){
															Status= '–í–µ–¥–µ—Ç—Å—è –ø–æ–∏—Å–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.';
														}
														else if(response[0].status == 'PriceSelected'){
															Status= '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —É–∫–∞–∑–∞–ª —Ü–µ–Ω—É.';
														}
														else if(response[0].status == 'waitToPriceResponse'){
															Status= '–í—ã –Ω–∞–∑–Ω–∞—á–∏–ª–∏ —Ü–µ–Ω—É. –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞..';
														}
														else if(response[0].status == 'Paid'){
															Status= '–û–ø–ª–∞—á–µ–Ω';
														}
														else if(response[0].status == 'Completed'){
															Status= '–ó–∞–≤–µ—Ä—à–µ–Ω';
														}
														else if(response[0].status == 'Declined'){
															Status= '–û—Ç–∫–ª–æ–Ω–µ–Ω';
														}
														else Status = response[0].status;			
														if((response[0].executor != null)&&(response[0].executor != 0)){
															Executor = '–ù–∞–π–¥–µ–Ω';
														}
														else{
															Executor = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
														}
														if((response[0].price != null)&&(response[0].price != 0)){
															Price = response[0].price;
														}
														else{
															Price = '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞';
														}
														if((response[0].executorPrice != null)&&(response[0].executorPrice != 0)){
															executorPrice = response[0].executorPrice;
														}
														else{
															executorPrice = '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞';
														}																			
														let executorStartPrice = '';
														if( (response[0].executorStartPrice != null)&&(response[0].executorStartPrice != 0) ){
															for(let i =0; i < response[0].executorStartPrice.split(',').length;i++){
																if( (response[0].executorStartPrice.split(',')[i]).split('_')[1] == response[0].executor ){
																	executorStartPrice = (response[0].executorStartPrice.split(',')[i]).split('_')[0];
																	break;
																}
															}
														}	
														else executorStartPrice	= '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';	
														if( (response[0].priceMarkup != null)&&(response[0].priceMarkup != 0) ){
															for(let i =0; i < response[0].priceMarkup.split(',').length;i++){
																if( (response[0].priceMarkup.split(',')[i]).split('_')[1] == response[0].executor ){
																	priceMarkup = (response[0].priceMarkup.split(',')[i]).split('_')[0];
																	break;
																}
															}
														}
														else priceMarkup = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
														message = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É ID:'+workId+' \n ------------- \n–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: https://vk.com/id'+response[0].executor+'\n–ü—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n–ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞:'+executorStartPrice+'\n–¶–µ–Ω–∞ —Å –Ω–∞—Ü–µ–Ω–∫–æ–π:'+priceMarkup+'\n –ü—Ä–µ–¥–º–µ—Ç: '+response[0].subject+' \n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+' \n –ó–∞–¥–∞—á–∞: '+response[0].Task +' \n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment+'\n –°—Ç–∞—Ç—É—Å: '+Status+'\n –¶–µ–Ω–∞: '+Price+'\n –¶–µ–Ω–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è: '+executorPrice+'\n –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: '+Executor+'\n –î–æ–∫—É–º–µ–Ω—Ç—ã: '+Docs +' \n\n –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: '+Photos;
														databaseRequest("select chat from userList where workId="+workId).then(function(response){
															if( (response[0] != undefined)&&(response[0].chat != null )&&(response[0].chat != 0) ){
																let chatID = response[0].chat;
																let peerID = 2000000000+chatID;		
																EASYBOTVK.call('messages.getInviteLink', {
																	peer_id: peerID,
																	group_id:148975156,
																}).then(function(chatLink){
																	message += '\n\n\n------------\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É –∑–∞–∫–∞–∑—á–∏–∫–∞:\n'+chatLink.link;
																	var resultMessage = '–í–ù–ò–ú–ê–ù–ò–ï\n\n –í—Å–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –∑–∞–∫–∞–∑–∞: '+ctx.message.body.split(':')[1]+'\n'+message;
																	bot.execute('messages.send', {
																	  random_id: randomInteger(0, 18446744073709551614),
																	  chat_id: 7,
																	  message: resultMessage,
																	  keyboard: Markup.keyboard([
																	  	[
																	  		Markup.button('–°–¥–µ–ª–∞—Ç—å –ª–∏—á–Ω—ã–º id:'+workId, 'positive')
																	  	]							   	
																	   ]).inline()
																	})	
																	bot.sendMessage([106541016,20904658],resultMessage,Markup.keyboard([
																  	[
																  		Markup.button('–°–¥–µ–ª–∞—Ç—å –ª–∏—á–Ω—ã–º id:'+workId, 'positive')
																  	]							   	
																   ]).inline());	
																	BotReply(ctx,'–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –∑–∞–∫–∞–∑–∞');
																}).catch(function(err){
																	console.log(err);
																})
															}
															else {
																var resultMessage = '–í–ù–ò–ú–ê–ù–ò–ï\n\n –í—Å–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –∑–∞–∫–∞–∑–∞: '+ctx.message.body.split(':')[1]+'\n'+message;
																bot.execute('messages.send', {
																  random_id: randomInteger(0, 18446744073709551614),
																  chat_id: 7,
																  message: resultMessage,
																  keyboard: Markup.keyboard([
																  	[
																  		Markup.button('–°–¥–µ–ª–∞—Ç—å –ª–∏—á–Ω—ã–º id:'+workId, 'positive')
																  	]							   	
																   ]).inline()
																})		
																bot.sendMessage([106541016,20904658],resultMessage,Markup.keyboard([
																  	[
																  		Markup.button('–°–¥–µ–ª–∞—Ç—å –ª–∏—á–Ω—ã–º id:'+workId, 'positive')
																  	]							   	
																   ]).inline());
																BotReply(ctx,'–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –∑–∞–∫–∞–∑–∞')	
															}
														})	
													}).catch(function(err){ console.log(1364,err); })											
												}	
												else BotReply(ctx,'–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –∑–∞–∫–∞–∑–∞')									
											})
										})
									})
								}	
								if( (response[0].executor != null)&&((response[0].executor != 0)) ){
									console.log('–ö—Ç–æ –ø—Ä–∏–Ω—è–ª');
									if( whoIsAccepted != null ){ console.log('–°–ø–∏—Å–æ–∫ —Ç–µ—Ö –∫—Ç–æ –ø—Ä–∏–Ω—è–ª –Ω–µ –ø—É—Å—Ç');
										if( (whoIsAccepted.split(',').includes((user_Id).toString(),0)) ||(whoIsAccepted == (user_Id).toString()) ){ console.log('–°–ø–∏—Å–æ–∫ —Ç–µ—Ö –∫—Ç–æ –ø—Ä–∏–Ω—è–ª —Å–æ–¥–µ—Ä–∂–∏—Ç '+ user_Id);
											databaseRequest('select chat from userList where workId='+ctx.message.body.split(':')[1]).then(function(response){
												if( (response[0].chat != null)&&(response[0].chat != 0) ){
													let chatID = response[0].chat;
													let peerID = 2000000000+chatID;
													selectUser(user_Id).then(function(response){ console.log('ID —á–∞—Ç–∞ '+chatID);
														if(response[0].executor_id != null){
															bot.execute('messages.send', {
															  random_id: randomInteger(0, 18446744073709551614),
															  peer_id: peerID,
															  chat_id: chatID,
															  message: '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —Å ID: '+response[0].executor_id+' –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.',
															}).then(function(response){
																//console.log(response);
															}).catch(function(err){
																//console.log(err);
															})
														}
													})												
												}
											})
										}
									}
									databaseRequest("update userList set executor=0,executorPrice=0 where workId="+ctx.message.body.split(':')[1]).then(function(){
										Search(response[0].id,ctx.message.body.split(':')[1]);
									})
								}
								BotReply(ctx,'–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –∑–∞–∫–∞–∑–∞. –û–±—â–µ–Ω–∏–µ –∏–∑ –±–µ—Å–µ–¥—ã –±–æ–ª–µ–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ.');
						})						
					})	
				}
				else{
					console.log(1425,'–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω WorkID');
				}		
			}).catch(function(){
				selectUser(user_Id).then(function(response){
					if((response[0].Task == '–î–∏–∫—Ç–æ–≤–∫–∞')||(response[0].Task == '–°–¥–∞—Ç—å –∑–∞ –≤–∞—Å')||(response[0].Task == '–ü–µ—Ä–µ–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º')){
						var message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork;
					}
					else if((response[0].typeOfWork == '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞')||(response[0].Task == '–û—Ç—Ä–∞–±–æ—Ç–∫–∞')||(response[0].Task == '–ù–æ—Ä–º–∞—Ç–∏–≤—ã')){
						var message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork;
					}
					else{
						var message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork;
					}
					if((response[0].status == 'waitToPriceResponse')||(response[0].status == 'waitToPriceResponse')){
						databaseRequest("delete from chatList where workId ="+ctx.message.body.split(':')[1]).then(function(){
							databaseRequest("delete from userList where workId ="+ctx.message.body.split(':')[1]).then(function(){
								bot.execute('messages.send', {
								  random_id: randomInteger(0, 18446744073709551614),
								  chat_id: 8,
								  message: message
								}),
								BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.',Markup.keyboard([
									Markup.button('–Ω–∞—á–∞—Ç—å','positive')
								]))
							})
						})
					}
					else if(response[0].status == 'getSuccess'){
						databaseRequest("delete from chatList where id ="+user_Id+" and isOrderFinished = 0").then(function(){
							databaseRequest("delete from userList where id ="+user_Id+" and isOrderFinished = 0").then(function(){
								BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.',Markup.keyboard([
									Markup.button('–Ω–∞—á–∞—Ç—å','positive')
								]))
							})
						})					
					}
				}).catch(function(err){
					BotReply(ctx,'–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤')			
				});	
			})				
		})
});
bot.command('–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω —Å —Ü–µ–Ω–æ–π', (ctx) => {
	var user_Id = ctx.message.user_id;
	connection.query("select * from user_"+user_Id,function(err,response){
		if(err) console.log("ERROR",err);
		else {
			if((response[0].status == 'waitToPriceResponse')||(response[0].laststatus == 'waitToPriceResponse')){
				var Executor = response[0].executor;
				if((response[0].Task == '–î–∏–∫—Ç–æ–≤–∫–∞')||(response[0].Task == '–°–¥–∞—Ç—å –∑–∞ –≤–∞—Å')||(response[0].Task == '–ü–µ—Ä–µ–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º')){
					var message = '–ö–ª–∏–µ–Ω—Ç –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω —Å —Ü–µ–Ω–æ–π \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment;
				}
				else if((response[0].typeOfWork == '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞')||(response[0].Task == '–û—Ç—Ä–∞–±–æ—Ç–∫–∞')||(response[0].Task == '–ù–æ—Ä–º–∞—Ç–∏–≤—ã')){
					var message = '–ö–ª–∏–µ–Ω—Ç –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω —Å —Ü–µ–Ω–æ–π \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment;
				}
				else{
					var message = '–ö–ª–∏–µ–Ω—Ç –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω —Å —Ü–µ–Ω–æ–π \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment;
				}
				
				var Subject = response[0].subject;
				var Photos = ''; var Docs = '';
				if(response[0].photos != null){
					for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
						Photos += (response[0].photos).split('<--->')[i]+'\n';
					}
				}
				if(response[0].docs != null){
					for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
						Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
					}
				}				
				bot.execute('messages.send', {
				  random_id: randomInteger(0, 18446744073709551614),
				  chat_id: 8,
				  message: message+Docs+Photos,
				})
				var Chat = response[0].chat; var Price = response[0].price;
				message = '–ó–∞–∫–∞–∑\n -----------------\n –¶–µ–Ω–∞:'+response[0].price+' –Ω–µ —É—Å—Ç—Ä–æ–∏–ª–∞ \n ID –∑–∞–∫–∞–∑–∞: '+response[0].workId+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment+' \n –í–ª–æ–∂–µ–Ω–∏—è: ';
				connection.query("update executor_"+response[0].chat+" set chat=0",function(err,response){
					if(err) {
						if(err.sqlMessage == "Table 'vkbotdb.executor_"+Chat+"' doesn't exist"){
							connection.query("update user_"+user_Id+" set executor= 0, laststatus = status,status ='InProcessing'",function(err,response){
								if(err) console.log("ERROR",err);
								else {
									getExecutorList().then(function(response){
										var executors = [];
										for(var i =0; i < response.length ;i++){
											var executor = response[i].id;
											if((response[i].subject!= undefined)&&(response[i].subject != null)){
												for(var j =0; j < (response[i].subject).split(',').length;j++){
													if((response[i].subject).split(',')[j] == Subject){
														executors.push(executor);
													}
												}
											}
											if(i == response.length -1){
												if(executors[0]!= undefined){
													bot.sendMessage(executor_list, message+Docs+'\n –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã,—Ç–æ –ø–∏—à–∏\n –ß–∞—Ç id:'+countofwork+' \n –ï—Å–ª–∏ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑:\n –ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ id:'+countofwork +' \n\n –í–ª–æ–∂–µ–Ω–∏—è:'+Photos)
												}
												else{
													bot.execute('messages.send', {
													  random_id: randomInteger(0, 18446744073709551614),
													  chat_id: 7,
													  message: message+Docs+Photos
													})
												}
											}
										}
									})
								}
							});
						}
						else{
							console.log(err);
						}
					}
					else{						
						connection.query("update user_"+user_Id+" set executor= 0, laststatus = status,status ='InProcessing'",function(err,response){
							if(err) console.log("ERROR",err);
							else {
								getExecutorList(function(response){	
								var executors = [];					
									for(var i =0; i < response.length ;i++){
										var executor = response[i].id;
										if((response[i].subject!= undefined)&&(response[i].subject != null)){
											for(var j =0; j < (response[i].subject).split(',').length;j++){
												if((response[i].subject).split(',')[j] == Subject){
													executors.push(executor);
												}
											}
										}
										if(i == response.length -1){
											if(executors[0]!= undefined){
												bot.sendMessage(executor_list, message+Docs+'\n –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã,—Ç–æ –ø–∏—à–∏\n –ß–∞—Ç id:'+countofwork+' \n –ï—Å–ª–∏ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑:\n –ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ id:'+countofwork +' \n\n –í–ª–æ–∂–µ–Ω–∏—è:'+Photos)
											}
											else{
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  chat_id: 7,
												  message: message+Docs+Photos
												})
											}
										}
									}	
								});
							}
						});
					}
				})
				
			}
			else{
				BotReply(ctx,'–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è, —É–∫–∞–∂–∏ –æ—Ç–≤–µ—Ç –ø–æ –ø—Ä–∏–º–µ—Ä—É –≤—ã—à–µ –∏–ª–∏ –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ –°–±—Ä–æ—Å'),
				BotReply(ctx,'–ü–æ–¥–æ–∂–¥–∏.. –ú–æ–∂–µ—Ç —Ç—ã —Ö–æ—á–µ—à—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π?', Markup.keyboard([
				[
					Markup.button('–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', 'primary')
				],
				[
					Markup.button('–°–±—Ä–æ—Å', 'positive')
				]
				]).oneTime());
			}
		}
	});
});
bot.command(['–î–∏–∫—Ç–æ–≤–∫–∞','–ü–µ—Ä–µ—Å–ª–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ','–°–¥–∞—Ç—å –∑–∞ –≤–∞—Å','–ü—Ä–∏—Å–ª–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ','–ü–µ—Ä–µ–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º','–û—Ç—Ä–∞–±–æ—Ç–∫–∞','–ù–æ—Ä–º–∞—Ç–∏–≤—ã'], (ctx) => {
	var user_Id = ctx.message.user_id;
	selectUser(user_Id).then(function(response){
		if(response[0].status =='typeOfWorkSelected'){
			if( (response[0].comment != null)&&((response[0].comment != 0)) ){
				databaseRequest("update userList set Task = '"+(ctx.message.body)+"',status='getSuccess' where id="+user_Id+" and orderFinished=0").then(function(){
					BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+ctx.message.body+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
						[
							Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
							Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
						],
						[
							Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
						],
						[
							Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
						]
					]).oneTime());
				})				
			}
			else{
				databaseRequest("update userList set Task = '"+(ctx.message.body)+"',status='TaskSelected' where id="+user_Id+" and orderFinished=0").then(function(){
					BotReply(ctx,'–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫ –∑–∞–¥–∞–Ω–∏—é, –∏–ª–∏ –ø—Ä–∏–º–µ—Ä –±–∏–ª–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –≤—Å—Ç—Ä–µ—Ç–∏—Ç—Å—è, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ—Ü–µ–Ω–∏—Ç—å —Ä–∞–±–æ—Ç—É.\n\nP.s. –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –Ω–∞–∂–º–∏—Ç–µ "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"', Markup.keyboard([
						[
							Markup.button('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', 'default')
						],
						[
							Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
						]
					]).oneTime());
				})
			}			
		}
		else if (response[0].status == 'WaitsComment'){
			databaseRequest("update userList set comment = '"+ctx.message.body+"',status = 'getSuccess' where id="+user_Id+" and orderFinished=0").then(function(){
				databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
					BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
						[
							Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
							Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
						],
						[
							Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
						]
					]).oneTime());
				})	
			})	
		}
		else{
			BotReply(ctx,'–ó–∞–∫–∞–∑ —É–∂–µ –∏–º–µ–µ—Ç –≤–∏–¥ –ø–æ–º–æ—â–∏.', Markup.keyboard([
				[
					Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
				]
			]).oneTime());
		}
	})	
});
bot.command('–û—Ç–∫—Ä—ã—Ç—å —Å–ø–æ—Ä', (ctx) => {
	var user_Id = ctx.message.user_id;
	isExecutor(user_Id).then(function(response){
		BotReply(ctx,'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–æ—Ä —è–≤–ª—è—è—Å—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º.');
	}).catch(function(err){
		if(err == "not-exist"){
			if((ctx.message.body).split(':')[1]!= undefined){
				databaseRequest("update userList set status='InDiscusing' where workId="+(ctx.message.body).split(':')[1]).then(function(){
					searchByWorkId((ctx.message.body).split(':')[1]).then(function(response){
						var workid = response[0].workId;
						var Executor = response[0].executor;
						databaseRequest("select userChatId,executorChatId from chatList where workId="+workid).then(function(response){
							if(response != ''){
								let UserChatID = response[0].userChatId;
								let UserPeerID = 2000000000+UserChatID;	

								let ExecutorChatID = response[0].executorChatId;
								let ExecutorPeerID = 2000000000+ExecutorChatID;	
								if( (ExecutorChatID != null)&&(ExecutorChatID != 0) ){	
									EASYBOTVK.call('messages.getInviteLink', {
										peer_id: ExecutorPeerID,
										group_id:148975156,
									}).then(function(ExecutorChatLink){
										bot.sendMessage(Executor,'–í–Ω–∏–º–∞–Ω–∏–µ\n –û—Ç–∫—Ä—ã—Ç —Å–ø–æ—Ä –ø–æ –∑–∞–∫–∞–∑—É ID:'+workid+'\n '+ExecutorChatLink.link,null,Markup.keyboard(
											[
												Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+workid,'primary'),
												Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å','positive')
											],
											[
												Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
											],
											[
										  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
										  	]
										));
										bot.execute('messages.send', {
										    random_id: randomInteger(0, 18446744073709551614),
											peer_id: ExecutorPeerID,
											chat_id: ExecutorChatID,
											message: '–í–Ω–∏–º–∞–Ω–∏–µ\n –û—Ç–∫—Ä—ã—Ç —Å–ø–æ—Ä –ø–æ –∑–∞–∫–∞–∑—É ID:'+workid,
											keyboard: Markup.keyboard([
											[
										  		Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ','primary'),
												Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å','positive')
										  	],
											[
										  		Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑','positive')
										  	],
											[
										  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
										  	]
											]),
											group_id:148975156,
										}).then(function(){}).catch(function(){})
									})		
								}
								else if( specIDs.includes(parseInt(Executor),0) ){
									EASYBOTVK.call('messages.getInviteLink', {
										peer_id: UserPeerID,
										group_id:148975156,
									}).then(function(ExecutorChatLink){
										bot.sendMessage(Executor,'–í–Ω–∏–º–∞–Ω–∏–µ\n –û—Ç–∫—Ä—ã—Ç —Å–ø–æ—Ä –ø–æ –∑–∞–∫–∞–∑—É ID:'+workid+'\n '+ExecutorChatLink.link,Markup.keyboard(
											[
												Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+workid,'primary'),
												Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å','positive')
											],
											[
												Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
											],
											[
										  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
										  	]
										));
									})	
								}
								else{
									EASYBOTVK.call('messages.getInviteLink', {
										peer_id: ExecutorPeerID,
										group_id:148975156,
									}).then(function(ExecutorChatLink){
										bot.sendMessage(Executor,'–í–Ω–∏–º–∞–Ω–∏–µ\n –û—Ç–∫—Ä—ã—Ç —Å–ø–æ—Ä –ø–æ –∑–∞–∫–∞–∑—É ID:'+workid+'\n '+ExecutorChatLink.link,null,Markup.keyboard(
											[
												Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+workid,'primary'),
												Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å','positive')
											],
											[
												Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
											],
											[
										  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
										  	]
										));
									})									
								}
								EASYBOTVK.call('messages.getInviteLink', {
									peer_id: UserPeerID,
									group_id:148975156,
								}).then(function(UserChatLink){
									BotReply(ctx,'–í—ã –æ—Ç–∫—Ä—ã–ª–∏ —Å–ø–æ—Ä. –ê–≥–µ–Ω—Ç —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.\n'+UserChatLink.link,null,Markup.keyboard([
											Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã','positive'),										
											Markup.button('–°–±—Ä–æ—Å','negative')
										],
										[
											Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
										]
									))
								})	
							}	
							else{
								bot.sendMessage(Executor,'–í–Ω–∏–º–∞–Ω–∏–µ\n –û—Ç–∫—Ä—ã—Ç —Å–ø–æ—Ä –ø–æ –∑–∞–∫–∞–∑—É ID:'+workid+'\n ',Markup.keyboard(
									[
										Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+workid,'primary'),
										Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å','positive')
									],
									[
								  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
								  	],
									[
										Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
									]
								));
								BotReply(ctx,'–í—ã –æ—Ç–∫—Ä—ã–ª–∏ —Å–ø–æ—Ä. –ê–≥–µ–Ω—Ç —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.\n',Markup.keyboard([
										Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã','positive'),										
										Markup.button('–°–±—Ä–æ—Å','negative')
									],
									[
										Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
									]
								))	
							}					
						})						
					})
				})
			}
		}
	})	
})
bot.command('–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É', (ctx)=>{
	var user_Id = ctx.message.user_id;
	isExecutor(user_Id).then(function(){
		if((ctx.message.body).split(':')[1]!= undefined){
			databaseRequest("select chat from userList where workId="+(ctx.message.body).split(':')[1]).then(function(response){
				let messagesChatID = response[0].chat;
				let messagesPeerID = 2000000000+messagesChatID;						
				EASYBOTVK.call('messages.getInviteLink', {
					peer_id: messagesPeerID,
					group_id:148975156,
				}).then(function(chatLink){
					BotReply(ctx,'–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É –∑–∞–∫–∞–∑–∞ —Å ID: '+chatLink.link,Markup.keyboard([
						[
							Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
						]
					]))
				})				
			})
		}
	})	
})
bot.command('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',(ctx) => {
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(response){
		connection.query("update grandadmin set setSideTo=0,setworktypeto =0,priceto=0,getExecutorList=0 where id="+user_Id,function(err,response){
			if(err) console.log("ERROR",err);
			else {
					BotReply(ctx,'–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã', Markup.keyboard([
					[
						Markup.button('—Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π', 'positive'),
					],
					[
						Markup.button('–Ω–∞–∑–Ω–∞—á–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º', 'positive'),
						Markup.button('—É–¥–∞–ª–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è', 'negative')
					],
					[
						Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'positive')
					]
					]).oneTime())
			}
		})
	}).catch(function(){
		isExecutor(user_Id).then(function(){
			BotReply(ctx,'–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!', Markup.keyboard([
				[
					Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive'),
					Markup.button('–ú–æ–∏ –ø—Ä–µ–¥–º–µ—Ç—ã','positive')
				],
				[
					Markup.button('–û—Ç–∫—Ä—ã—Ç—ã–µ —Å–ø–æ—Ä—ã', 'primary')
				],
				[
					Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'positive')
				]
			]).oneTime());
		}).catch(function(){
			BotReply(ctx,'–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!', Markup.keyboard([
				[
					Markup.button('–ó–∞–∫–∞–∑–∞—Ç—å', 'positive'),
					Markup.button('–í –¥—Ä—É–≥–æ–π —Ä–∞–∑', 'negative')
				],
				[
					Markup.button('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'positive')
				],
				[
					Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
				]
			]).oneTime());
		})
	})		
})
//////////////////////admin////////////////////////
bot.command('—Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π', (ctx) => {
	console.log('/////–°–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π//////');
	let user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(response){
			connection.query("update grandadmin set getExecutorList = 1 where id="+user_Id,function(err,response){
				if(err) console.log("ERROR",err);
				else {
					BotReply(ctx,'–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç\n'+subjectList, Markup.keyboard([
					[
							Markup.button('—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', 'negative')
					]
					]).oneTime());
				}
			});
	})
});
bot.command('–¥–æ–±–∞–≤–∏—Ç—å', (ctx) => {
	let user_Id = ctx.message.user_id;
	isAdmin(ctx.message.user_id).then(function(response){
		connection.query("select * from grandadmin where id="+user_Id,function(err,response){
				if(err) console.log("ERROR",err);
				else {
				var user_Id = ctx.message.user_id;
				if((response[0].setworktypeto == null)||(response[0].setworktypeto == 0)){
					if((ctx.message.body).split('https://vk.com/')[1]!= undefined){
							bot.execute('users.get', {
							  user_ids:(ctx.message.body).split('https://vk.com/')[1]
							}).then(function(resp){
								connection.query("update grandadmin set setworktypeto = "+resp[0].id+" where id="+user_Id,function(err,response){
									if(err) console.log("ERROR",err);
									else { 
										BotReply(ctx,'–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.\n'+subjectList)
									}
								});
							});
					}
				}
				else{
					BotReply(ctx,'–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–Ω')
				}
			}
		})
	})
})
/*bot.command('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –±–µ—Å–µ–¥—ã', (ctx) => {
	isAdmin(ctx.message.user_id).then(function(response){
		EASYBOTVK.call('messages.getConversations').then(function(){
			EASYBOTVK.call('messages.deleteConversation',{
				peer_id:2000000200
			}).then(function(result){
				console.log(result);
			})
		})
	})
})*/
bot.command('–Ω–∞–∑–Ω–∞—á–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º', (ctx) => {
	let user_Id = ctx.message.user_id;
	isAdmin(ctx.message.user_id).then(function(response){
		connection.query("update grandadmin set setSideTo=1 where id="+user_Id,function(err,response){
			if(err) console.log("ERROR",err);					
			else {
				BotReply(ctx,'–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É.'),
				 Markup.keyboard([
				[
					Markup.button('—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', 'negative')
				],
				]);
			}
		});
	})
});
bot.command('—É–¥–∞–ª–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è', (ctx) => {
	isAdmin(ctx.message.user_id).then(function(response){
		if((ctx.message.body).split('https://vk.com/')[1]!= undefined){
				bot.execute('users.get', {
				  user_ids:(ctx.message.body).split('https://vk.com/')[1]
				}).then(function(resp){
					databaseRequest("delete from executorList where id="+resp[0].id).then(function(){
						BotReply(ctx,'–í—ã —É–¥–∞–ª–∏–ª–∏ '+resp[0].id+' –∏–∑ —Å–ø–∏—Å–∫–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π.', Markup.keyboard([
						[
							Markup.button('—Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤', 'positive')
						]
						]).oneTime())
					})
				});
		}
		else{
			BotReply(ctx,'–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã.')
		}
	})				
});
bot.command('—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', (ctx) => {
	isAdmin(ctx.message.user_id).then(function(response){
		connection.query("update grandadmin set setSideTo=0,setworktypeto =0,priceto=0,getExecutorList=0 where id="+ctx.message.user_id,function(err,response){
			if(err) console.log("ERROR",err);
			else {
					BotReply(ctx,'–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã', Markup.keyboard([
						[
							Markup.button('—Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π', 'positive'),
						],
						[
							Markup.button('–Ω–∞–∑–Ω–∞—á–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º', 'positive'),
							Markup.button('—É–¥–∞–ª–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è', 'negative')
						],
						[
							Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'positive')
						],
						[
							Markup.button('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', 'primary'),
							Markup.button('–í—Å–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º', 'primary'),							
						]
					]))
			}
		})
	})
});
bot.command('–°—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º', (ctx) => {
	var user_Id = ctx.message.user_id;
	connection.query("select id from grandadmin where id="+user_Id,function(err,response){
		if(err) console.log("ERROR",err);
		else {
			if( (response == '')&&(specIDs.includes(user_Id,0) ) ){				
				databaseRequest("insert grandadmin (id) values("+user_Id+")").then(function(){
					databaseRequest("insert executorList (id,chat,subject,setpriceto,waitto) values("+user_Id+",0,'–ó–∞—Ç—ã—á–∫–∞',0,0)").then(function(){
						BotReply(ctx,'–í—ã —Å—Ç–∞–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. ', Markup.keyboard([
						[
							Markup.button('—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', 'positive')
						]
						]).oneTime())
					})
				})
			}
			else{
				BotReply(ctx,'–ò –Ω–µ –Ω–∞–¥–µ–π—Å—è. ')
			}
		}
	});
});
bot.command('–∞–¥–º–∏–Ω', (ctx) => {
	var user_Id = ctx.message.user_id;
	databaseRequest('select id from grandadmin where id='+user_Id).then(function(response){
		if( (response != '')&&(response[0].id != null) ){
			console.log('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω');
			isAdmin(user_Id).then(function(response){
				BotReply(ctx,'–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º. ', Markup.keyboard([
				[
					Markup.button('—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', 'positive')
				]
				]).oneTime())
			}).catch(function(err){
				console.log('–ê–¥–º–∏–Ω',err);
			})
		}
	}).catch(function(err){
		databaseRequest("create table grandadmin(id int,setworktypeto int,priceto int, setSideTo int, getExecutorList int, ApproximatePriceFrom int,ApproximatePriceTo int,massMessageto text)").then(function(){
			databaseRequest("insert executorList (id,chat,subject,setpriceto,waitto) values("+user_Id+",0,'–ó–∞—Ç—ã—á–∫–∞',0,0)").then(function(){
				BotReply(ctx,'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –µ—â–µ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω. ',Markup.keyboard([
				[
					Markup.button('–°—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º', 'positive')
				]
				]).oneTime())
			})
		})
		console.log(1882,err);
	})
});
bot.command('–û–ø–ª–∞—á–µ–Ω–Ω—ã–µ', (ctx)=>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(){	
		let countOfItems = 0;
		databaseRequest("select workId,subject from userList where paid=1").then(function(response){
			countOfItems = response.length;
			let madeItems = 0;
			function sendInfo(){
				if( madeItems != countOfItems ){
					if( response[madeItems].workId != null ){
						BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
							[
								Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
							]
						]).inline());
						setTimeout(function(){
							madeItems++;
							sendInfo();
						},300)
					}		
					else{
						madeItems++;
						sendInfo();		
					}	
				}		
				else if(countOfItems == 0) BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
				else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');			
			}
			sendInfo();	
		}).catch(function(err){
			console.log(2239,err);
		})
	}).catch(function(err){
		console.log(2240,err);
	})
});
bot.command('–ù–∞–π—Ç–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è', (ctx)=>{
	if((ctx.message.body).split(':')[1] = 'undefined'){
		searchByWorkId((ctx.message.body).split(':')[1]).then(function(response){
			Search(response[0].id,response[0].workId);
			BotReply(ctx,'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞')
		}).catch(function(err){
			if(err == 'not-found'){
				BotReply(ctx,'–ó–∞–∫–∞–∑–∞ —Å ID: '+response[0].workId +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
			}
			else if(err == "workId doesn't exist"){
				BotReply(ctx,'–ù–µ —É–∫–∞–∑–∞–Ω ID')
			}
			else{
				console.log(3531,err);
			}
		})		
	}
	else{
		BotReply(ctx,"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã. –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ —É–∫–∞–∑–∞–Ω ID")
	}
})
bot.command('–û—Ç–∫–∞–∑—ã', (ctx)=>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(){	
		let countOfItems = 0;
		databaseRequest("select workId,subject from userList where status='Declined'").then(function(response){
			countOfItems = response.length;
			let madeItems = 0;
			function sendInfo(){
				if( madeItems != countOfItems ){
					if( response[madeItems].workId != null ){
						BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
							[
								Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
							]
						]).inline());
						setTimeout(function(){
							madeItems++;
							sendInfo();
						},300)
					}		
					else{
						madeItems++;
						sendInfo();		
					}	
				}		
				else if(countOfItems == 0) BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
				else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');			
			}
			sendInfo();	
		}).catch(function(err){
			console.log(2239,err);
		})
	}).catch(function(err){
		console.log(2240,err);
	})
});
bot.command('–û–∂–∏–¥–∞—é—â–∏–µ –Ω–∞—Ü–µ–Ω–∫—É', (ctx)=>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(){	
		let countOfItems = 0;
		databaseRequest("select workId,subject from userList where status='PriceSelected'").then(function(response){
			countOfItems = response.length;
			let madeItems = 0;
			function sendInfo(){
				if( madeItems != countOfItems ){
					if( response[madeItems].workId != null ){
						BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
							[
								Markup.button('—Å—Ç–æ–∏–º–æ—Å—Ç—å '+response[madeItems].workId, 'primary'),
								Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
							]
						]).inline());
						setTimeout(function(){
							madeItems++;
							sendInfo();
						},300)
					}		
					else{
						madeItems++;
						sendInfo();		
					}	
				}		
				else if(countOfItems == 0) BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
				else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');			
			}
			sendInfo();	
		}).catch(function(err){
			console.log(2239,err);
		})
	}).catch(function(err){
		console.log(2240,err);
	})
});
bot.command('–ñ–¥–µ–º –¥–µ–Ω–µ–≥', (ctx)=>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(){	
		let countOfItems = 0;
		databaseRequest("select workId,subject from userList where status='PriceSuccess'").then(function(response){
			countOfItems = response.length;
			let madeItems = 0;
			function sendInfo(){
				if( madeItems != countOfItems ){
					if( response[madeItems].workId != null ){
						BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
							[
								Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
							]
						]).inline());
						setTimeout(function(){
							madeItems++;
							sendInfo();
						},300)
					}		
					else{
						madeItems++;
						sendInfo();		
					}	
				}		
				else if(countOfItems == 0) BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
				else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');			
			}
			sendInfo();	
		}).catch(function(err){
			console.log(2239,err);
		})
	}).catch(function(err){
		console.log(2240,err);
	})
});
/*bot.command('–í —á–∞—Ç–µ', (ctx)=>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(){
		databaseRequest("select workId from userList where status='WaitsResponse'").then(function(response){
			for(var i =0; i < response.length ;i++){
				if(response[i].status == 'Declined'){
					buttons.push([
							Markup.button('–ß–∞—Ç id:'+response[i].workId, 'primary'),
							Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[i].workId, 'primary')
						],
						[
							Markup.button('–ù–∞–π—Ç–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è id:'+response[i].workId, 'positive')
						]
					)
				}						
			}
			if(buttons[1] == undefined){	
				BotReply(ctx,'–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.');
			}
			else{
				BotReply(ctx,'–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.', Markup.keyboard(buttons));
			}
		})
	})	

	var buttons = [];
	buttons.push(
		[
			Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'positive'),
		]
	)
	getUserList().then(function(response){
		for(var i =0; i < response.length ;i++){
			if(response[i].chatStatus == 'WaitsResponse'){
				buttons.push([
						Markup.button('–ß–∞—Ç id:'+response[i].workId, 'primary'),
						Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[i].workId, 'primary')
					]
				)
			}
		}
		getHistoryList().then(function(response){
			for(var i =0; i < response.length;i++){
				if(response[i].chatStatus == 'WaitsResponse'){
					buttons.push([
							Markup.button('–ß–∞—Ç id:'+response[i].workId, 'primary'),
							Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[i].workId, 'primary')
						]
					)
				}
			}
			if(buttons[1] == undefined){	
				BotReply(ctx,'–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.');
			}
			else{
				BotReply(ctx,'–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.', Markup.keyboard(buttons));
			}
		}).catch(function(err){
			if(err == '–°–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—Ä–∏–∏ –ø—É—Å—Ç'){
				if(buttons[1] == undefined){	
					BotReply(ctx,'–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.');
				}
				else{
					BotReply(ctx,'–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.', Markup.keyboard(buttons));
				}
			}
			else{
				console.log(err);
			}
		});	
	}).catch(function(err){
		if(err == '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç'){
			BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç')
		}
		else{
			console.log(err);
		}
	})
});*/
bot.command('–í –ø—Ä–æ—Ü–µ—Å—Å–µ', (ctx)=>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(){	
		databaseRequest("select workId,subject,executor from userList where status='InProcessing' ").then(function(response){
			countOfItems = response.length;
			let madeItems = 0;
			function sendInfo(){
				if( madeItems != countOfItems ){
					if( (response[madeItems].workId != null)&&(response[madeItems].executor == null) ){
						BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
							[
								Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑ id:'+response[madeItems].workId, 'positive'),
								Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
							],
							[
								Markup.button('–ù–∞–π—Ç–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è id:'+response[madeItems].workId, 'positive')
							]
						]).inline());
						setTimeout(function(){
							madeItems++;
							sendInfo();
						},300)
					}	
					else if((response[madeItems].workId != null)&&(response[madeItems].executor != null)){
						BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
							[
								Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑ id:'+response[madeItems].workId, 'positive'),
								Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
							]
						]).inline());
						setTimeout(function(){
							madeItems++;
							sendInfo();
						},300)
					}	
					else{
						madeItems++;
						sendInfo();		
					}	
				}		
				else if(countOfItems == 0) BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
				else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');		
			}
			sendInfo();	
		})
	}).catch(function(){
		isExecutor(user_Id).then(function(){
			databaseRequest("select * from userList where executor="+user_Id+" and status!='Declined' and status !='Completed' ").then(function(response){
				countOfItems = response.length;
				let madeItems = 0;
				function sendInfo(){
					if( madeItems != countOfItems ){
						if( response[madeItems].workId != null ){
							BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
								[
									Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑ id:'+response[madeItems].workId, 'positive'),
									Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
								]
							]).inline());
							setTimeout(function(){
								madeItems++;
								sendInfo();
							},300)
						}		
						else{
							madeItems++;
							sendInfo();		
						}	
					}		
					else if(countOfItems == 0) BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
					else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');			
				}
				sendInfo();	
			}).catch(function(err){
				console.log(err);
			})
		}).catch(function(){			
			databaseRequest("select subject,workId from userList where status !='Completed' and status !='Declined' and id="+user_Id).then(function(response){
				countOfItems = response.length;
				let madeItems = 0;
				function sendInfo(){
					if( madeItems != countOfItems ){
						if( response[madeItems].workId != null ){
							BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
								[
									Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
								]
							]).inline());
							setTimeout(function(){
								madeItems++;
								sendInfo();
							},300)
						}		
						else{
							madeItems++;
							sendInfo();		
						}	
					}		
					else if(countOfItems == 0) BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
					else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');		
				}
				sendInfo();	
			})
		})		
	})
});
bot.command('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', (ctx)=>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(){
		databaseRequest("select workId,subject from userList where status='Completed'").then(function(response){
			if(response != ''){
				countOfItems = response.length;
				let madeItems = 0;
				function sendInfo(){
					if( madeItems != countOfItems ){
						if( response[madeItems].workId != null ){
							BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
								[
									Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
								],
								[
									Markup.button('–ù–∞–π—Ç–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è id:'+response[madeItems].workId, 'positive')
								]
							]).inline());
							setTimeout(function(){
								madeItems++;
								sendInfo();
							},300)
						}		
						else{
							madeItems++;
							sendInfo();		
						}	
					}		
					else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');		
				}
				sendInfo();	
			}
			else{
				BotReply(ctx,'–ù–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤')
			}
		})
	}).catch(function(){
		isExecutor(user_Id).then(function(){
			databaseRequest("select workId,subject from userList where executor="+user_Id+" and status ='Completed' ").then(function(response){
				if(response != ''){
					countOfItems = response.length;
					let madeItems = 0;
					function sendInfo(){
						if( madeItems != countOfItems ){
							if( response[madeItems].workId != null ){
								BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
									[
										Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
									]
								]).inline());
								setTimeout(function(){
									madeItems++;
									sendInfo();
								},300)
							}		
							else{
								madeItems++;
								sendInfo();		
							}	
						}		
						else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');		
					}
					sendInfo();	
				}
				else{
					BotReply(ctx,'–ù–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤')
				}
			}).catch(function(err){
				console.log(err);
			})
		}).catch(function(){
			databaseRequest("select workId,subject from userList where id="+user_Id+" and status ='Completed' ").then(function(response){				
				if(response != ''){
					countOfItems = response.length;
					let madeItems = 0;
					function sendInfo(){
						if( madeItems != countOfItems ){
							if( response[madeItems].workId != null ){
								BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
									[
										Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
									],
									[
										Markup.button('–û—Ç–∫—Ä—ã—Ç—å —Å–ø–æ—Ä id:'+response[madeItems].workId, 'negative')
									]
								]).inline());
								setTimeout(function(){
									madeItems++;
									sendInfo();
								},300)
							}		
							else{
								madeItems++;
								sendInfo();		
							}	
						}		
						else{
							BotReply(ctx,'–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ',Markup.keyboard([
								[
									Markup.button('–í –ø—Ä–æ—Ü–µ—Å—Å–µ', 'primary')
								],
								[
									Markup.button('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', 'positive')
								],
								[
									Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
								]
							]));
							return;
						}
					}
					sendInfo();
				}
				else{
					BotReply(ctx,'–ù–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤',Markup.keyboard([
						[
							Markup.button('–í –ø—Ä–æ—Ü–µ—Å—Å–µ', 'primary')
						],
						[
							Markup.button('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', 'positive')
						],
						[
							Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
						]
					]))
				}
			})				
		})
	})
});
bot.command('–û—Ç–∫—Ä—ã—Ç—ã–µ —Å–ø–æ—Ä—ã', (ctx)=>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(){
		databaseRequest("select workId,subject from userList where status='InDiscusing'").then(function(response){			
				countOfItems = response.length;
				let madeItems = 0;
				function sendInfo(){
					if( madeItems != countOfItems ){
						if( response[madeItems].workId != null ){
							BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
								[
									Markup.button('–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É id:'+response[madeItems].workId, 'primary'),
									Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑ id:'+response[madeItems].workId, 'primary')
								],
								[
									Markup.button('–ù–∞–π—Ç–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è id:'+response[madeItems].workId, 'positive')
								]
							]).inline());
							setTimeout(function(){
								madeItems++;
								sendInfo();
							},300)
						}		
						else{
							madeItems++;
							sendInfo();		
						}	
					}		
					else if(countOfItems == 0) BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
					else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');		
				}
				sendInfo();	
		})
	}).catch(function(){
		isExecutor(user_Id).then(function(){
			databaseRequest("select workId from userList where status='InDiscusing'").then(function(response){
				countOfItems = response.length;
				let madeItems = 0;
				function sendInfo(){
					if( madeItems != countOfItems ){
						if( response[madeItems].workId != null ){
							BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
								[
									Markup.button('–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É id:'+response[madeItems].workId, 'primary'),
									Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
								]
							]).inline());
							setTimeout(function(){
								madeItems++;
								sendInfo();
							},300)
						}		
						else{
							madeItems++;
							sendInfo();		
						}	
					}		
					else if(countOfItems == 0) BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
					else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');		
				}
				sendInfo();	
			})
		})
	})
});
bot.command('–í —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–∏', (ctx)=>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(){	
		let countOfItems = 0;
		databaseRequest("select workId,subject from userList where status='waitToPriceResponse'").then(function(response){
			countOfItems = response.length;
			let madeItems = 0;
			function sendInfo(){
				if( madeItems != countOfItems ){
					if( response[madeItems].workId != null ){
						BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
							[
								Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
							]
						]).inline());
						setTimeout(function(){
							madeItems++;
							sendInfo();
						},300)
					}		
					else{
						madeItems++;
						sendInfo();		
					}	
				}		
				else if(countOfItems == 0) BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
				else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');			
			}
			sendInfo();	
		}).catch(function(err){
			console.log(2239,err);
		})
	}).catch(function(err){
		console.log(2240,err);
	})
});
bot.command('–õ–∏—á–Ω—ã–µ', (ctx)=>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(){	
		let countOfItems = 0;
		databaseRequest("select workId,subject from userList where status='Personal'").then(function(response){
			countOfItems = response.length;
			let madeItems = 0;
			function sendInfo(){
				if( madeItems != countOfItems ){
					if( response[madeItems].workId != null ){
						BotReply(ctx,'–ó–∞–∫–∞–∑ id:'+response[madeItems].workId+' –ü—Ä–µ–¥–º–µ—Ç: '+response[madeItems].subject, Markup.keyboard([
							[
								Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑ id:'+response[madeItems].workId, 'positive'),
								Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[madeItems].workId, 'primary')
							],
							[
								Markup.button('–ù–∞–π—Ç–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è id:'+response[madeItems].workId, 'positive')
							]
						]).inline());
						setTimeout(function(){
							madeItems++;
							sendInfo();
						},300)
					}		
					else{
						madeItems++;
						sendInfo();		
					}	
				}		
				else if(countOfItems == 0) BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
				else BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç');			
			}
			sendInfo();	
		}).catch(function(err){
			console.log(2239,err);
		})
	}).catch(function(err){
		console.log(2240,err);
	})
});
bot.command(['–°–µ–≥–æ–¥–Ω—è','–ó–∞–≤—Ç—Ä–∞','–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é','–ß–µ—Ä–µ–∑ –º–µ—Å—è—Ü','–ù–µ –∑–Ω–∞—é','–î—Ä—É–≥–∞—è','–ò–¥–µ—Ç —Å–µ–π—á–∞—Å!'], (ctx)=>{
	var user_Id = ctx.message.user_id;
	databaseRequest('select status from userList where id='+user_Id+" and orderFinished=0").then(function(response){
		if(response == ''){
			BotReply(ctx,'–ü—Ä–∏–≤–µ—Ç –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —É—á–µ–±–æ–π. –¢–µ–±–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å?', Markup.keyboard([
				[
					Markup.button('–ó–∞–∫–∞–∑–∞—Ç—å', 'positive'),
					Markup.button('–í –¥—Ä—É–≥–æ–π —Ä–∞–∑', 'negative')
				],
				[
					Markup.button('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'positive')
				],
				[
					Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
				]
			]).oneTime());
		}
		else if(response[0].status == 'setDeadline'){
			if(ctx.message.body == "–î—Ä—É–≥–∞—è"){
				BotReply(ctx,'–£–∫–∞–∂–∏–µ –¥–µ–¥–ª–∞–π–Ω –≤ –ª—é–±–æ–º —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ')
			}
			else{
				selectUser(user_Id).then(function(response){
					if( (response[0].comment !=null)&&(response[0].comment !=0) ){
						databaseRequest('update userList set deadline = "'+ctx.message.body+'", status="getSuccess" where id='+user_Id+" and orderFinished=0").then(function(){		
							BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+ctx.message.body+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
							[
								Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
								Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
							],
							[
								Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
							]
						]).oneTime());
						}).catch(function(err){
							console.log(2158,err);
						})										
					}
					else{
						databaseRequest('update userList set deadline = "'+ctx.message.body+'", status="setWorkTime" where id='+user_Id+" and orderFinished=0").then(function(){							
							BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã (–ø–æ –ú–æ—Å–∫–≤–µ) –ø–æ –ø—Ä–∏–º–µ—Ä—É: 8:30', Markup.keyboard([
								[
									Markup.button('–ò–¥–µ—Ç —Å–µ–π—á–∞—Å!', 'positive'),
								],
								[
									Markup.button('–ù–µ –∑–Ω–∞—é','negative')
								],
								[
									Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
								],
								[
									Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
								]
							]).oneTime());
						}).catch(function(err){
							console.log(2158,err);
						})	
					}
				})
			}			
		}
		else if(response[0].status == 'WaitsComment'){
			selectUser(user_Id).then(function(response){
				databaseRequest('update userList set comment = "'+ctx.message.body+'", status="getSuccess" where id='+user_Id+" and orderFinished=0").then(function(){		
					BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+ctx.message.body, Markup.keyboard([
					[
						Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
						Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
					],
					[
						Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
					]
				]).oneTime());
				}).catch(function(err){
					console.log(2158,err);
				})	
			})
		}
		else if(response[0].status == 'setWorkTime'){
			selectUser(user_Id).then(function(response){
					if( (response[0].comment !=null)&&(response[0].comment !=0) ){
						databaseRequest('update userList set workTime = "'+ctx.message.body+'", status="getSuccess" where id='+user_Id+" and orderFinished=0").then(function(){		
							BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+ctx.message.body+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
							[
								Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
								Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
							],
							[
								Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
							]
						]).oneTime());
						}).catch(function(err){
							console.log(2158,err);
						})										
					}
					else{
						databaseRequest('update userList set workTime = "'+ctx.message.body+'", status="WaitsComment" where id='+user_Id+" and orderFinished=0").then(function(){							
							BotReply(ctx,'–û–ø–∏—à–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã –º—ã —Ç–æ—á–Ω–æ –æ—Ü–µ–Ω–∏–ª–∏ —Ä–∞–±–æ—Ç—É (–∫–∞–∫–∏–µ –Ω—É–∂–Ω—ã –Ω–æ–º–µ—Ä–∞, –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞, –Ω—É–∂–Ω–∞ –ª–∏ —Ç–µ–æ—Ä–∏—è –∏ —Ç.–¥.).–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥, —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ.', Markup.keyboard([
								[
									Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∑–∫–∞–∑', 'primary'),
								]
							]).oneTime());
						}).catch(function(err){
							console.log(2158,err);
						})	
					}
				})
		}
	})
});
bot.command('—Å—Ç–æ–∏–º–æ—Å—Ç—å', (ctx) =>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(response){
		if(((ctx.message.body).split('—Å—Ç–æ–∏–º–æ—Å—Ç—å')[1]).split(' ')[1]!= undefined){		
			searchByWorkId(((ctx.message.body).split('—Å—Ç–æ–∏–º–æ—Å—Ç—å')[1]).split(' ')[1]).then(function(response){
				databaseRequest("update grandadmin set priceto="+((ctx.message.body).split('—Å—Ç–æ–∏–º–æ—Å—Ç—å')[1]).split(' ')[1]+" where id="+user_Id).then(function(){
					BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–º–µ—Ä: 1700');
				}).catch(function(err){})
			}).catch(function(err){
				if(err == 'not-found'){
					BotReply(ctx,'–ó–∞–∫–∞–∑–∞ —Å ID: '+(ctx.message.body).split(':')[0] +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
				}
				else if(err == "workId doesn't exist"){
					BotReply(ctx,'–ù–µ —É–∫–∞–∑–∞–Ω ID')
				}
				else{
					console.log(3531,err);
				}
			})
		}
		else{
			BotReply(ctx,'–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã. –ó–∞–∫–∞–∑–∞ —Å id:'+((ctx.message.body).split(':')[1]).split(' ')[0]+' –Ω–µ—Ç.')
		}	
	}).catch(function(err){
		BotReply(ctx,'–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')
	})
})
bot.command('–æ–ø–ª–∞—á–µ–Ω–æ', (ctx) =>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(response){
		databaseRequest("update userList set paid=1 where workId="+((ctx.message.body).split('–æ–ø–ª–∞—á–µ–Ω–æ')[1]).split(' ')[1]).then(function(){
			searchByWorkId( (ctx.message.body).split('–æ–ø–ª–∞—á–µ–Ω–æ')[1] ).then(function(response){
				var message = '–í–∞—à –∑–∞–∫–∞–∑:\n –ü—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+'\n –ó–∞–¥–∞–Ω–∏–µ: '+response[0].Task +'\n –û–ø–ª–∞—á–µ–Ω –∏ –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ.';
				let userChatID = response[0].chat;
				let userPeerID = 2000000000+userChatID;
				bot.execute('messages.send', {
				    random_id: randomInteger(0, 18446744073709551614),
					peer_id:userPeerID,
					chat_id: userChatID,
					message: message,
					group_id:148975156,
				}).then(function(response){
					console.log(response);
				}).catch(function(err){
					console.log(err);
				})

				if((response[0].executor != null)&&(response[0].executor != 0)){
					let message = '–ó–∞–∫–∞–∑: #'+response[0].workId+' –æ–ø–ª–∞—á–µ–Ω.\n –ü—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+'\n –ó–∞–¥–∞–Ω–∏–µ: '+response[0].Task;
					bot.sendMessage(response[0].executor,message,Markup.keyboard(
						[
							Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+response[0].workId,'primary')
						]
					));
				}
				BotReply(ctx,'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∑–∞–∫–∞–∑—á–∏–∫—É.',null, Markup.keyboard([
					[
						Markup.button('—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', 'positive')
					]
				]).oneTime())
			})
		})
	})
})
bot.command('–û—Ç–∫–∞–∑—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤', (ctx) =>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(response){
		databaseRequest("select workId,whoIsDeclined form userList")
	})
})
bot.command('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', (ctx) =>{
	var user_Id = ctx.message.user_id;
	isAdmin(user_Id).then(function(response){
		BotReply(ctx,'–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏',Markup.keyboard([
			[
				Markup.button('–û—Ç–∫–∞–∑—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤','negative')
			]
		]))
	})
})
///////////////////////////–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏//////////////////////////////////
bot.command(['–£—Å–ø–µ—à–Ω–æ','–ë–µ–∑—É—Å–ø–µ—à–Ω–æ'], (ctx) =>{
	var user_Id = ctx.message.user_id;
	isExecutor(user_Id).then(function(response){
		if( (ctx.message.body).split(" ID:")[0] =='–£—Å–ø–µ—à–Ω–æ'){
			searchByWorkId((ctx.message.body).split(":")[1]).then(function(response){
				var message = '–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω. –ú—ã –±—ã–ª–∏ —Ä–∞–¥—ã –í–∞–º –ø–æ–º–æ—á—å!\n–ê —Ç–µ–ø–µ—Ä—å, –µ—Å–ª–∏ –≤–∞—Å –Ω–µ –∑–∞—Ç—Ä—É–¥–Ω–∏—Ç, –æ—Å—Ç–∞–≤—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–º –æ—Ç–∑—ã–≤.\n–ó–∞—Ä–∞–Ω–µ–µ —Å–ø–∞—Å–∏–±–æ\n https://vk.com/app6326142_-148975156';
				let userChatID = response[0].chat;
				let userPeerID = 2000000000+userChatID;
				bot.execute('messages.send', {
				    random_id: randomInteger(0, 18446744073709551614),
					peer_id:userPeerID,
					chat_id: userChatID,
					message: message,
					group_id:148975156,
				}).then(function(response){
					console.log(response);
				}).catch(function(err){
					console.log(err);
				})
				BotReply(ctx,'–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤.', Markup.keyboard([
					[
						Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
					],
					[
						Markup.button('–û—Ç–∫—Ä—ã—Ç—ã–µ —Å–ø–æ—Ä—ã', 'primary')
					],
					[
						Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'positive')
					]
				]).oneTime())
			}).catch(function(err){
				if(err == 'not-found'){
					BotReply(ctx,'–ó–∞–∫–∞–∑–∞ —Å ID: '+(ctx.message.body).split(':')[0] +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
				}
				else if(err == "workId doesn't exist"){
					BotReply(ctx,'–ù–µ —É–∫–∞–∑–∞–Ω ID')
				}
				else{
					console.log(2035,err);
				}
			})
		}	
		else BotReply(ctx,'–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤.');	
	})
})
bot.command('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑', (ctx) =>{
	var user_Id = ctx.message.user_id;
	isExecutor(user_Id).then(function(response){
		if((ctx.message.body).split(":")[1]!= undefined){
			searchByWorkId((ctx.message.body).split(":")[1]).then(function(response){				
				databaseRequest("update userList set status ='Completed' where workId="+(ctx.message.body).split(":")[1]).then(function(){
					BotReply(ctx,'–ó–∞–∫–∞–∑ –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω. –£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –±—ã–ª –∑–∞–∫—Ä—ã—Ç –∑–∞–∫–∞–∑?', Markup.keyboard([
					[
						Markup.button('–£—Å–ø–µ—à–Ω–æ ID:'+(ctx.message.body).split(":")[1], 'positive'),
						Markup.button('–ë–µ–∑—É—Å–ø–µ—à–Ω–æ ID:'+(ctx.message.body).split(":")[1], 'negative')
					]
					,[
						Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'primary')
					]
					]).oneTime())					
				})
			}).catch(function(err){
				if(err == 'not-found'){
					BotReply(ctx,'–ó–∞–∫–∞–∑–∞ —Å ID: '+(ctx.message.body).split(':')[0] +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
				}
				else if(err == "workId doesn't exist"){
					BotReply(ctx,'–ù–µ —É–∫–∞–∑–∞–Ω ID')
				}
				else{
					console.log(2035,err);
				}
			})
		}
	}).catch(function(){
		BotReply(ctx,'–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —Å–º–µ—Ä—Ç–Ω—ã–º')
	});
})
bot.command('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', (ctx) =>{
	var user_Id = ctx.message.user_id;
	isExecutor(user_Id).then(function(response){	
		var buttons = [];
		buttons.push(
			[
				Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'positive')
			],
			[
				Markup.button('–í –ø—Ä–æ—Ü–µ—Å—Å–µ', 'primary')												
			],
			[
				Markup.button('–û—Ç–∫—Ä—ã—Ç—ã–µ —Å–ø–æ—Ä—ã', 'positive')
			],
			[
				Markup.button('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', 'positive')												
			],
			[
				Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')												
			]
		);
		BotReply(ctx,'–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–∏—Å–æ–∫.', Markup.keyboard([
			[
				Markup.button('–í –ø—Ä–æ—Ü–µ—Å—Å–µ', 'primary')												
			],
			[
				Markup.button('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', 'positive')												
			],
			[
				Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')												
			]
		]));		
	}).catch(function(err){
		if(err == "not-exist"){ 			
			BotReply(ctx,'–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–∏—Å–æ–∫.', Markup.keyboard([
				[
					Markup.button('–í –ø—Ä–æ—Ü–µ—Å—Å–µ', 'primary')												
				],
				[
					Markup.button('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', 'positive')												
				],
				[
					Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive'),
				]
			]));				
		}
	})	
})
bot.command('–ú–æ–∏ –ø—Ä–µ–¥–º–µ—Ç—ã', (ctx) =>{
	var user_Id = ctx.message.user_id;
	isExecutor(user_Id).then(function(response){
		databaseRequest("select subject from executorList where id="+user_Id).then(function(response){
			if(response[0].subject != undefined){
				BotReply(ctx,'–í–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã: '+response[0].subject, Markup.keyboard([
					[
						Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')												
					],
				]));
			}	
			else{
				BotReply(ctx,'–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç', Markup.keyboard([
					[
						Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')												
					],
				]));
			}		
		})				
	})
})
/*bot.command('–ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç', (ctx) =>{
	var user_Id = ctx.message.user_id;
	isExecutor(user_Id).then(function(response){	
		selectUser(user_Id).then(function(response){
			var userID = response[0].chat;
			connection.query("update executor_"+user_Id+" set chat=0",function(err,response){
				if(err) console.log("1998",err);
				else {
					selectUser(userID).then(function(response){
						var workid =response[0].workId; 
						connection.query("update user_"+response[0].id+" set chat=0,chatStatus=0",function(err,response){
							if(err) console.log("2397",err);
							else {
								getExecutorList().then(function(response){																		
									for(var j =0;j < response.length;j++){
										if(response[j].waitto == workid){
										var executor = response[j].id;
										connection.query("update executor_"+response[j].id+" set waitto = 0",function(err,response){
											if(err) console.log("2013",err);
											else {
												bot.sendMessage(executor,'–ó–∞–∫–∞–∑—á–∏–∫ —Å id:'+workid+' –≤—ã—à–µ–ª –∏–∑ —á–∞—Ç–∞',null,Markup.keyboard([
														Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+workid,'primary'),
														Markup.button('–ß–∞—Ç id:'+workid,'primary'),
														Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å id:'+workid,'positive')
													]
												));
											}
										})
										}
									}
									BotReply(ctx,'–ß–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω—è–ª–∏ –∑–∞–∫–∞–∑, –Ω–æ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –û—Ç–∫–ª–æ–Ω–∏—Ç—å id:'+workid, Markup.keyboard([
									[
										Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å id:'+workid, 'primary'),
										Markup.button('–û—Ç–∫–ª–æ–Ω–∏—Ç—å id:'+workid, 'negative')
									],
									[
										Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'positive')
									]
									])),
									bot.sendMessage(user,'–ß–∞—Ç –∑–∞–∫—Ä—ã—Ç.',null,Markup.keyboard([
										Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã','positive')
									]) )
								}).catch(function(err){
									BotReply(ctx,'–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã')
								})
							}
						});
					}).catch(function(err){
						if(err == "not-exist"){
							getHistoryList().then(function(response){
								for(var i =0;i < response.length;i++){
									var user = response[i].id;
									var HISTORYworkid = response[i].workId;
									if((response[i].id == userID)&&( (response[i].chat != null)&&(response[i].chat != 0) )){
										connection.query("update history_"+HISTORYworkid+" set chat=0,chatStatus=0",function(err,response){
											if(err) console.log("ERROR",err);
											else {
												getExecutorList().then(function(response){																				
													for(var i =0;i < response.length;i++){
														if(response[i].waitto == user){
															bot.sendMessage(user,'–ó–∞–∫–∞–∑—á–∏–∫ —Å id:'+HISTORYworkid+' –≤—ã—à–µ–ª –∏–∑ —á–∞—Ç–∞',null,Markup.keyboard([
																	Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+HISTORYworkid,'primary'),
																	Markup.button('–ß–∞—Ç id:'+HISTORYworkid,'primary')
																]
															));
														}
													}
													BotReply(ctx,'–ß–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.', Markup.keyboard([
													[
														Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å id:'+HISTORYworkid, 'primary'),
														Markup.button('–û—Ç–∫–ª–æ–Ω–∏—Ç—å id:'+HISTORYworkid, 'negative')
													],
													[
														Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'positive')
													]
													])
													),
													bot.sendMessage(user,'–ß–∞—Ç –∑–∞–∫—Ä—ã—Ç.',null,Markup.keyboard([
														Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã','positive')
													]) )
												})
											}
										});
										break;
									}
									else if(i == response.length-1){
										BotReply(ctx,'–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤', Markup.keyboard([
										[
											Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'positive')
										]
										]))
									}
								}
							})
						}
						else{
							console.log(2401,err);
						}
					})
				}
			});
		}).catch(function(err){
			console.log('2096',err);
		})
	});
});*/
bot.command(['–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤','–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫'], (ctx) =>{
	var user_Id = ctx.message.user_id; var buttons = []; let Items = [];
	isExecutor(user_Id).then(function(response){
		selectUser(user_Id).then(function(response){
				var WorkType = response[0].subject;
				isAdmin(ctx.message.user_id).then(function(response){
					BotReply(ctx,'–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.',   Markup.keyboard([
						[
							Markup.button('–í –ø—Ä–æ—Ü–µ—Å—Å–µ', 'positive'),Markup.button('–û—Ç–∫—Ä—ã—Ç—ã–µ —Å–ø–æ—Ä—ã', 'primary')
						],
						[
							Markup.button('–û–∂–∏–¥–∞—é—â–∏–µ –Ω–∞—Ü–µ–Ω–∫—É', 'primary'),Markup.button('–í —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–∏', 'primary')
						],
						[
							Markup.button('–ñ–¥–µ–º –¥–µ–Ω–µ–≥', 'positive'),Markup.button('–û–ø–ª–∞—á–µ–Ω–Ω—ã–µ', 'positive')
						],
						[
							Markup.button('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', 'primary'),Markup.button('–û—Ç–∫–∞–∑—ã', 'negative')
						],
						[
							Markup.button('–õ–∏—á–Ω—ã–µ', 'positive')
						],
						[
							Markup.button('—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', 'negative')
						]
					]));
				}).catch(function(){					
					getUserList().then(function(response){					
						for(var i =0; i < response.length ;i++){
							if( ( ( response[i].whoIsDeclined == null )||(response[i].whoIsDeclined.split(',').includes((user_Id).toString(),0) == false) )&&(response[i].Task != '–î–∏–∫—Ç–æ–≤–∫–∞')&&(response[i].Task != '–°–¥–∞—Ç—å –∑–∞ –≤–∞—Å')&&(response[i].Task != '–ü–µ—Ä–µ–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º')&&(response[i].Task != '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞')&&(response[i].Task != '–û—Ç—Ä–∞–±–æ—Ç–∫–∞')&&(response[i].Task != '–ù–æ—Ä–º–∞—Ç–∏–≤—ã')&&(response[i].userInChat != null) ){
								for(var j =0; j < WorkType.split(',').length;j++){
									if((WorkType.split(',')[j] == response[i].subject)&&( (response[i].executor == 0)||(response[i].executor == null) )&&((response[i].status != 'Declined')&&(response[i].status != 'Completed')&&(response[i].status != 'Personal'))){
										if(!Items.includes(response[i],0) ) Items.push(response[i])
									}
									else if((WorkType.split(',')[j] != response[i].subject)){
										console.log(2427,WorkType.split(',')[j],response[i].subject);
									}
									else if((response[i].executor != 0)||(response[i].executor != null)){
										console.log(2430,response[i].executor);
									}
									else{
										console.log(2433,response[i].status);
									}
								}
							}							
						}
						buttons.push(
							[
								Markup.button('–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫', 'positive')
							],
							[
								Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
							]
						)
						if(Items[0] == undefined){	
							BotReply(ctx,'–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.', Markup.keyboard(buttons));
						}
						else{
							countOfItems = Items.length;
							let madeItems = 0;
							function sendInfo(){
								if( madeItems != countOfItems ){
									var Photos = ''; var Docs = '';
									if( (Items[madeItems].photos!= null)&&(Items[madeItems].photos!= 0) ){
										for(var i = 0; i < (Items[madeItems].photos).split('<--->').length;i++){
											Photos += (Items[madeItems].photos).split('<--->')[i]+'\n';
										}
									}
									if( (Items[madeItems].docs!= null)&&((Items[madeItems].docs!= 0)) ){
										for(var i = 0; i < (Items[madeItems].docs).split('<--->').length;i++){
											Docs += ' \n'+(Items[madeItems].docs).split('<--->')[i]+'\n';
										}
									}		
									BotReply(ctx,'ID:'+Items[madeItems].workId+' \n ------------- \n–ü—Ä–µ–¥–º–µ—Ç: '+Items[madeItems].subject+' \n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+Items[madeItems].typeOfWork+' \n –ó–∞–¥–∞—á–∞: '+Items[madeItems].Task +' \n–î–µ–¥–ª–∞–π–Ω:'+Items[madeItems].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+Items[madeItems].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+Items[madeItems].comment+'\n –î–æ–∫—É–º–µ–Ω—Ç—ã: '+Docs +' \n\n –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: '+Photos, Markup.keyboard([
										[
											Markup.button('–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ id:'+Items[madeItems].workId, 'positive'),
											Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+Items[madeItems].workId, 'primary')
										],
										[
											Markup.button('–û—Ç–∫–∞–∑–∞—Ç—å—Å—è id:'+Items[madeItems].workId, 'negative')
										]
									]).inline());
									setTimeout(function(){
										madeItems++;
										sendInfo();
									},300)
								}		
								else{
									BotReply(ctx,'–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ',Markup.keyboard(buttons));
									return;
								}		
							}
							sendInfo();	
						}
					}).catch(function(err){
						if(err == "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç"){
							BotReply(ctx,'–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.', Markup.keyboard(buttons));
						}
						else console.log('2521',err);

					})
				})
		}).catch(function(err){
			BotReply(ctx,'–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –ø—É—Å—Ç')
		});
	}).catch(function(err){
		BotReply(ctx,'–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º')
	});
});
bot.command('–û–∂–∏–¥–∞—Ç—å id', (ctx) =>{
	var user_Id = ctx.message.user_id;
	isExecutor(user_Id).then(function(response){
		if((ctx.message.body).split(':')[1]!= undefined){	
			connection.query("update executor_"+user_Id+" set waitto ="+(ctx.message.body).split(':')[1],function(err,response){
				if(err) console.log("ERROR",err);
				else {
					BotReply(ctx,'–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ —Ç–æ–ª—å–∫–æ –∑–∞–∫–∞–∑—á–∏–∫ –≤—ã–π–¥–µ—Ç –∏–∑ —á–∞—Ç–∞.', Markup.keyboard([
						Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤','positive')
					]));
				}
			})
		}				
	}).catch(function(err){
		console.log(2572,err);
	})
})
bot.command('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id', (ctx) =>{
	var user_Id = ctx.message.user_id;
	var Status = '';var Executor = ''; var Price = ''; var executorPrice = '';
	var message = '';
	if((ctx.message.body).split(':')[1]!= undefined){
		searchByWorkId((ctx.message.body).split(':')[1]).then(function(response){
			console.log('/////////////–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id: '+(ctx.message.body).split(':')[1]+'//////////',response);
			var Photos = ''; var Docs = ''; let whoIsAccepted = response[0].whoIsAccepted;
			if( (response[0].photos!= null)&&(response[0].photos!= 0) ){
				for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
					Photos += (response[0].photos).split('<--->')[i]+'\n';
				}
			}
			if( (response[0].docs!= null)&&((response[0].docs!= 0)) ){
				for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
					Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
				}
			}			
			if(response[0].status == 'InProcessing'){
				Status= '–í–µ–¥–µ—Ç—Å—è –ø–æ–∏—Å–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.';
			}
			else if(response[0].status == 'PriceSelected'){
				Status= '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —É–∫–∞–∑–∞–ª —Ü–µ–Ω—É.';
			}
			else if(response[0].status == 'waitToPriceResponse'){
				Status= '–í—ã –Ω–∞–∑–Ω–∞—á–∏–ª–∏ —Ü–µ–Ω—É. –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞..';
			}
			else if(response[0].status == 'Paid'){
				Status= '–û–ø–ª–∞—á–µ–Ω';
			}
			else if(response[0].status == 'Completed'){
				Status= '–ó–∞–≤–µ—Ä—à–µ–Ω';
			}
			else if(response[0].status == 'Declined'){
				Status= '–û—Ç–∫–ª–æ–Ω–µ–Ω';
			}
			else Status = response[0].status;			
			if((response[0].executor != null)&&(response[0].executor != 0)){
				Executor = '–ù–∞–π–¥–µ–Ω';
			}
			else{
				Executor = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
			}
			if((response[0].price != null)&&(response[0].price != 0)){
				Price = response[0].price;
			}
			else{
				Price = '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞';
			}
			if((response[0].executorPrice != null)&&(response[0].executorPrice != 0)){
				executorPrice = response[0].executorPrice;
			}
			else{
				executorPrice = '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞';
			}	
			isAdmin(user_Id).then(function(){				
				if((response[0].executor != null)&&(response[0].executor != 0)){
					let executorStartPrice = '';	let priceMarkup = '';
					if( (response[0].executorStartPrice != null)&&(response[0].executorStartPrice != 0) ){
						for(let i =0; i < response[0].executorStartPrice.split(',').length;i++){
							console.log((response[0].executorStartPrice.split(',')[i]).split('_')[1],response[0].executor);
							if( (response[0].executorStartPrice.split(',')[i]).split('_')[1] == response[0].executor ){
								executorStartPrice = (response[0].executorStartPrice.split(',')[i]).split('_')[0];
								console.log(i,executorStartPrice);
								break;
							}
						}
					}	
					else executorStartPrice	= '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';	
					if( (response[0].priceMarkup != null)&&(response[0].priceMarkup != 0) ){
						for(let i =0; i < response[0].priceMarkup.split(',').length;i++){
							if( (response[0].priceMarkup.split(',')[i]).split('_')[1] == response[0].executor ){
								priceMarkup = (response[0].priceMarkup.split(',')[i]).split('_')[0];
								break;
							}
						}
					}
					else priceMarkup = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
					message = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É ID:'+response[0].workId+' \n ------------- \n–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: https://vk.com/id'+response[0].executor+'\n–ü—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n–ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞:'+executorStartPrice+'\n–¶–µ–Ω–∞ —Å –Ω–∞—Ü–µ–Ω–∫–æ–π:'+priceMarkup+'\n –ü—Ä–µ–¥–º–µ—Ç: '+response[0].subject+' \n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+' \n –ó–∞–¥–∞—á–∞: '+response[0].Task +' \n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment+'\n –°—Ç–∞—Ç—É—Å: '+Status+'\n –¶–µ–Ω–∞: '+Price+'\n –¶–µ–Ω–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è: '+executorPrice+'\n –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: '+Executor+'\n –î–æ–∫—É–º–µ–Ω—Ç—ã: '+Docs +' \n\n –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: '+Photos;
					if(Status == '–û—Ç–∫–ª–æ–Ω–µ–Ω'){
						if( (response[0].chat != null)&&(response[0].chat != 0) ){
							let chatID = response[0].chat;
							let peerID = 2000000000+chatID;
							console.log(chatID);			
							EASYBOTVK.call('messages.getInviteLink', {
								peer_id: peerID,
								group_id:148975156,
							}).then(function(chatLink){
								message += '\n\n\n------------\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É:\n'+chatLink.link;								
								BotReply(ctx,message,
								Markup.keyboard([
									[
										Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
									]
								]).oneTime());	
							}).catch(function(err){
								console.log(err);
							})
						}
						else{
							console.log(response[0].chat);
							BotReply(ctx,message,Markup.keyboard([
								[
									Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
								]
							]).oneTime());	
						}
					}
					else{
						databaseRequest("select userChatId,executorChatId from chatList where workId="+response[0].workId).then(function(response){
							if(response != ''){
								let chatID = response[0].userChatId;
								let peerID = 2000000000+chatID;	

								let executorChatId = response[0].executorChatId;	
								EASYBOTVK.call('messages.getInviteLink', {
									peer_id: peerID,
									group_id:148975156,
								}).then(function(chatLink){
									message += '\n\n\n------------\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É:\n'+chatLink.link;
									if( (executorChatId)&&(executorChatId) ){
										EASYBOTVK.call('messages.getInviteLink', {
											peer_id: peerID,
											group_id:148975156,
										}).then(function(ExecutorchatLink){
											message += '\n\n\n------------\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:\n'+ExecutorchatLink.link;
											BotReply(ctx,message,
											Markup.keyboard([
												[
													Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
												]
											]).oneTime());	
										})
									}
									else{
										BotReply(ctx,message,null,
										Markup.keyboard([
											[
												Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
											]
										]).oneTime());	
									}
								
									
								}).catch(function(err){
									console.log(err);
								})
							}
							else{
								BotReply(ctx,message,
								Markup.keyboard([
									[
										Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
									]
								]).oneTime());
							}
	  																													
						})	
					}					
				}
				else {
					message = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É ID:'+response[0].workId+' \n ------------- \n–ü—Ä–µ–¥–º–µ—Ç: '+response[0].subject+' \n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+' \n –ó–∞–¥–∞—á–∞: '+response[0].Task +' \n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment+'\n –°—Ç–∞—Ç—É—Å: '+Status+'\n –¶–µ–Ω–∞: '+Price+'\n –¶–µ–Ω–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è: '+executorPrice+'\n –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: '+Executor+'\n –î–æ–∫—É–º–µ–Ω—Ç—ã: '+Docs +' \n\n –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: '+Photos;
					if(Status == '–û—Ç–∫–ª–æ–Ω–µ–Ω'){
						BotReply(ctx,message,
						Markup.keyboard([
							[
								Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
							]
						]).oneTime());	
					}
					else{
						databaseRequest("select userChatId from chatList where workId="+response[0].workId).then(function(response){
	  						let chatID = response[0].userChatId;
							let peerID = 2000000000+chatID;			
							EASYBOTVK.call('messages.getInviteLink', {
								peer_id: peerID,
								group_id:148975156,
							}).then(function(chatLink){
								message += '\n\n\n------------\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É:\n'+chatLink.link;
							
								BotReply(ctx,message,
								Markup.keyboard([
									[
										Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
									]
								]).oneTime());	
							}).catch(function(err){
								console.log(err);
							})																							
						})	
					}
				}				
			}).catch(function(){
				let executorStartPrice = '';
				if( (response[0].executorStartPrice != null)&&(response[0].executorStartPrice != 0) ){
					for(let i =0; i < response[0].executorStartPrice.split(',').length;i++){
						if( (response[0].executorStartPrice.split(',')[i]).split('_')[1] == user_Id){
							executorStartPrice = (response[0].executorStartPrice.split(',')[i]).split('_')[0];
							break;
						}
					}					
				}	
				else executorStartPrice = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';		
				let workId = response[0].workId; console.log(3384,workId);
				message = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É ID:'+response[0].workId+' \n ------------- \n–ü—Ä–µ–¥–º–µ—Ç: '+response[0].subject+' \n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+' \n –ó–∞–¥–∞—á–∞: '+response[0].Task +' \n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment+'\n –°—Ç–∞—Ç—É—Å: '+Status+'\n –¶–µ–Ω–∞: '+Price+'\n –î–æ–∫—É–º–µ–Ω—Ç—ã: '+Docs +' \n\n –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: '+Photos;
				isExecutor(user_Id).then(function(){
					if(Status != '–û—Ç–∫–ª–æ–Ω–µ–Ω'){
						databaseRequest("select executorChatId from chatList where workId="+workId).then(function(response){
							console.log(3388,'–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É',response);
	  						let chatID = response[0].executorChatId;
							let peerID = 2000000000+chatID;	
							if( (chatID != null)&&(chatID != 0) ){
								EASYBOTVK.call('messages.getInviteLink', {
									peer_id: peerID,
									group_id:148975156,
								}).then(function(chatLink){
									if( (Status == '–ó–∞–≤–µ—Ä—à–µ–Ω')||(Status == '–û—Ç–∫–ª–æ–Ω–µ–Ω') ){
										BotReply(ctx,message);
									}
									else{
										BotReply(ctx,message+'\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É:\n'+chatLink.link);
									}	
									BotReply(ctx,'–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ',Markup.keyboard([
										[
											Markup.button('–í –ø—Ä–æ—Ü–µ—Å—Å–µ', 'primary')
										],
										[
											Markup.button('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', 'positive')
										],
										[
											Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
										]
									]));
								}).catch(function(err){
									console.log(err);
								})
							}
							else{
								if( (Status == '–ó–∞–≤–µ—Ä—à–µ–Ω')||(Status == '–û—Ç–∫–ª–æ–Ω–µ–Ω') ){
									BotReply(ctx,message,Markup.keyboard([
										[
											Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
										]
									]).oneTime());								
								}
								else{
									console.log(whoIsAccepted);
									if( whoIsAccepted != null ){
										if( whoIsAccepted.split(',').includes(user_Id,0)||(whoIsAccepted == user_Id) ){
											BotReply(ctx,message);
										}
										else{
											BotReply(ctx,message,Markup.keyboard([
												[
													Markup.button('–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ id:'+workId, 'positive')
												]
											]).inline());
										}
									}
									else{
										BotReply(ctx,message,Markup.keyboard([
											[
												Markup.button('–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ id:'+workId, 'positive')
											]
										]).inline());
									}
									BotReply(ctx,'–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ',Markup.keyboard([
										[
											Markup.button('–í –ø—Ä–æ—Ü–µ—Å—Å–µ', 'primary')
										],
										[
											Markup.button('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', 'positive')
										],
										[
											Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
										]
									]));						
								}							
							}
						})			
					}
					else{
						BotReply(ctx,message,Markup.keyboard([
							Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é','positive')
						]))
					}		
				}).catch(function(err){
					if( (response[0].chat != null)&&(response[0].chat != 0) ){
						let messagesChatID = response[0].chat;
						let messagesPeerID = 2000000000+messagesChatID;						
						EASYBOTVK.call('messages.getInviteLink', {
							peer_id: messagesPeerID,
							group_id:148975156,
						}).then(function(chatLink){
							message = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É ID:'+response[0].workId+' \n ------------- \n–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞:'+executorStartPrice+'\n –ü—Ä–µ–¥–º–µ—Ç: '+response[0].subject+' \n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+' \n –ó–∞–¥–∞—á–∞: '+response[0].Task +' \n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment+'\n –°—Ç–∞—Ç—É—Å: '+Status+'\n –¶–µ–Ω–∞: '+Price+'\n –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: '+Executor+'\n –î–æ–∫—É–º–µ–Ω—Ç—ã: '+Docs +' \n\n –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: '+Photos+'\n\n\n------------\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É:'+chatLink.link;
							BotReply(ctx,message,Markup.keyboard([
								[
									Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
								]
							]));
						})							
					}	
					else{
						message = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É ID:'+response[0].workId+' \n ------------- \n–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞:'+executorStartPrice+'\n –ü—Ä–µ–¥–º–µ—Ç: '+response[0].subject+' \n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+' \n –ó–∞–¥–∞—á–∞: '+response[0].Task +' \n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment+'\n –°—Ç–∞—Ç—É—Å: '+Status+'\n –¶–µ–Ω–∞: '+Price+'\n –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: '+Executor+'\n –î–æ–∫—É–º–µ–Ω—Ç—ã: '+Docs +' \n\n –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: '+Photos;
						BotReply(ctx,message,null,
						Markup.keyboard([
							[
								Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
							]
						]).oneTime())
					}		
				})			
			})	
		}).catch(function(err){
			if(err == 'not-found'){
				BotReply(ctx,'–ó–∞–∫–∞–∑–∞ —Å ID: '+(ctx.message.body).split(':')[1] +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
			}
			else if(err == "workId doesn't exist"){
				BotReply(ctx,'–ù–µ —É–∫–∞–∑–∞–Ω ID')
			}
			else{
				console.log(3703,err);
			}
		})		
	}
	else{
		BotReply(ctx,'–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã', Markup.keyboard([
		[
			Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'positive'),
		]
		]).oneTime());
	}	
})
bot.command('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', (ctx) =>{	
	var user_Id = ctx.message.user_id;
	isExecutor(user_Id).then(function(){
		selectUser(user_Id).then(function(response){
			if( (response[0].chat != 0)&&((response[0].chat != null)) ){
				let workID = response[0].chat;					
				databaseRequest("update executorList set chat=0,waitto="+workID+",chatMessage='"+ctx.message.body+"' where id="+user_Id).then(function(){
					databaseRequest("select commentFromExecutorWhenOrderIsAccepted from userList where workId="+workID).then(function(response){
						let comments = response[0].commentFromExecutorWhenOrderIsAccepted;
						if( (comments != null)&&(comments != 0) ){
							comments += ',–ù–µ —É–∫–∞–∑–∞–Ω_'+user_Id;
						}
						else comments = '–ù–µ —É–∫–∞–∑–∞–Ω_'+user_Id;
						databaseRequest("update userList set commentFromExecutorWhenOrderIsAccepted='"+comments+"' where workId="+workID).then(function(){
							BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.')
						})	
					})
				})
			}
		})
	}).catch(function(){
		selectUser(user_Id).then(function(response){
			if(response[0].status == 'TaskSelected'){
				let count = 0;			
				console.log("–ø–æ–∏—Å–∫ workID");
				function searchWorkID(id){	
					console.log("–∏—â—É: "+id);										
					databaseRequest("select id from userList where workId="+id).then(function(response){
						if(response!='') {
							id++;
							searchWorkID(id)
						}
						else{
							console.log("3520 workID: "+id);
							count =  id;
							databaseRequest("update userList set workId ="+count+" ,status ='setDeadline' where id="+user_Id+" and orderFinished=0").then(function(){
								BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –¥–µ–¥–ª–∞–π–Ω–∞ –ø–æ –ø—Ä–∏–º–µ—Ä—É: 6.08. –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, —Ç–æ —Å–º–æ–∂–µ—Ç–µ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —É–≤–µ–¥–æ–º–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.', Markup.keyboard([
									[
										Markup.button('–°–µ–≥–æ–¥–Ω—è', 'primary'),
										Markup.button('–ó–∞–≤—Ç—Ä–∞', 'primary'),
									],
									[
										Markup.button('–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é', 'primary'),
										Markup.button('–ß–µ—Ä–µ–∑ –º–µ—Å—è—Ü', 'primary'),
									],
									[
										Markup.button('–î—Ä—É–≥–∞—è', 'default'),
										Markup.button('–ù–µ –∑–Ω–∞—é', 'default'),
									],
									[
										Markup.button('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å','default')
									]
								]).oneTime());
							})	
						}
					})
				}		
				searchWorkID(count);
			}
			else if(response[0].status == 'setDeadline' ){
				databaseRequest('update userList set deadline = "–ù–µ —É–∫–∞–∑–∞–Ω", status="setWorkTime" where id='+user_Id+" and orderFinished=0").then(function(){							
					BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã (–ø–æ –ú–æ—Å–∫–≤–µ) –ø–æ –ø—Ä–∏–º–µ—Ä—É: 8:30', Markup.keyboard([
						[
							Markup.button('–ò–¥–µ—Ç —Å–µ–π—á–∞—Å!', 'positive'),
						],
						[
							Markup.button('–ù–µ –∑–Ω–∞—é','negative')
						],
						[
							Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
						],
						[
							Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
						]
					]).oneTime());
				}).catch(function(err){
					console.log(2158,err);
				})
			}
		})		
	})
})
bot.command('–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ id', (ctx) =>{
	var user_Id = ctx.message.user_id;
	if((ctx.message.body).split(':')[1]!= undefined){
		searchByWorkId((ctx.message.body).split(':')[1]).then(function(response){
			let workId = response[0].workId;
			if( (response[0].executor == null)||(response[0].executor == 0) ){
				databaseRequest("update executorList set chat ="+response[0].workId+" where id="+user_Id).then(function(){
					databaseRequest("select whoIsAccepted from userList where workId="+response[0].workId).then(function(response){
						let whoIsAccepted = '';
						if( response[0].whoIsAccepted != null ) whoIsAccepted += ','+user_Id;
						else whoIsAccepted += user_Id;
						databaseRequest("update userList set whoIsAccepted ='"+whoIsAccepted+"' where workId="+workId).then(function(){
							BotReply(ctx,'–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É',Markup.keyboard([
								Markup.button('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å','default')
							]))
						})	
					}) })
			}
			else{
				BotReply(ctx,'–£ –∑–∞–∫–∞–∑–∞ —É–∂–µ –µ—Å—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å',Markup.keyboard([
					Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é','positive')
				]))
			}		
		}).catch(function(err){
			if(err == 'not-found'){
				BotReply(ctx,'–ó–∞–∫–∞–∑–∞ —Å ID: '+(ctx.message.body).split(':')[1] +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
			}
			else if(err == "workId doesn't exist"){
				BotReply(ctx,'–ù–µ —É–∫–∞–∑–∞–Ω ID')
			}
			else{
				console.log(3531,err);
			}
		})
	}
	else{
		if((ctx.message.body).split(':')[1] = 'undefined'){
			BotReply(ctx,'–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã. –í–æ–∑–º–æ–∂–Ω–æ –≤—ã –∏–º–µ–ª–∏ –≤–≤–∏–¥—É', Markup.keyboard([
			[
				Markup.button('–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ id:'+(ctx.message.body).split(':')[1], 'positive')
			]
			]).oneTime())
		}
		else{
			BotReply(ctx,'–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã.', Markup.keyboard([
			[
				Markup.button('—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', 'positive')
			]
			]).oneTime())
		}
	}	
})
bot.command('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', (ctx) =>{
	var user_Id = ctx.message.user_id;	
	isAdmin(user_Id).then(function(response){
		isAuthorized = false;
		connection.connect(function(err){
		    if (err) {
		      return console.error("–û—à–∏–±–∫–∞: " + err.message);
		    }
		    else{
		    	BotReply(ctx,'–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞');
					easyvk({
					  username:'',
					  password :'',
					  captchaHandler: captchaHandler,
					  reauth: true
					}).then(async manager => { 
						EASYMANAGERVK = manager;
						BotReply(ctx,'–ú–µ–Ω–µ–¥–∂–µ—Ä –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω,–ø–æ–ø—ã—Ç–∫–∞ –±–æ—Ç–∞');
						easyvk({
						  username:'',
						  password :'',
						  captchaHandler: captchaHandler,
						  reauth: true,
						  mode: 'highload', // –°–∞–º–∞—è –ø—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
						  mode: {
							name: 'highload',

							// –ö–∞–∂–¥—ã–µ 15 –ú–° –≤—Å—è –æ—á–µ—Ä–µ–¥—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è (—Ç–æ—á–Ω–µ–µ —á–∏—Ç–∞–π—Ç–µ –Ω–∏–∂–µ)
							timeout: 15
						  }
						}).then(async vk => {
							EASYVK = vk;	
							isAuthorized = true;
							BotReply(ctx,'–£—Å–ø–µ—Ö');				
						}).catch(function(err){
							BotReply(ctx,'3642 –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');	
						})			
					})	
		    	let dateNow =new Date; //(new Date).timezoneOffset(-300);
				let nowDate = dateNow.getDate()+'-'+dateNow.getMonth()+'-'+dateNow.getFullYear()+'-'+dateNow.getHours()+'-'+dateNow.getMinutes()+'-'+dateNow.getSeconds();
		      	console.log("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É MySQL –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ "+nowDate);
		    }
		}); 
	}).catch(function(err){
		BotReply(ctx,'–û—Ç–∫–∞–∑ '+err);
	})
})
bot.command('–í—Å–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º', (ctx) =>{
	var user_Id = ctx.message.user_id;	
	isAdmin(user_Id).then(function(response){
		databaseRequest("update grandadmin set massMessageto='executors' where id="+user_Id).then(function(response){						
			BotReply(ctx,'–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
		})
	}).catch(function(err){
		BotReply(ctx,'–û—Ç–∫–∞–∑ '+err);
	})
})
/*bot.command('–û—Ç–∫–ª–æ–Ω–∏—Ç—å id', (ctx) =>{
	var user_Id = ctx.message.user_id;
	if((ctx.message.body).split(':')[1] = 'undefined'){
		searchByWorkId((ctx.message.body).split(':')[1]).then(function(response){
			databaseRequest("update executorList set chat = 0 where id="+user_Id)
		})
	}
})*/
bot.event('message_new', (ctx) => {
	console.log('message_new');
	var user_Id = ctx.message.user_id;	
	isAdmin(user_Id).then(function(){	
		if(isAuthorized == false){
				let captcha = ctx.message.body;
				Solve(captcha).then(() => {
					bot.sendMessage(331658531, '–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å');
				}).catch(({err, reCall: tryNewCall}) => {

				  // –ò–Ω–∞—á–µ –∫–∞–ø—á–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞, —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
				  bot.sendMessage(331658531, '–ö–∞–ø—á–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞');

			  tryNewCall() // –ü—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞, –∑–∞–Ω–æ–≤–∞ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à captchaHandler, –ø–æ —Ñ–∞–∫—Ç—É...

			  // –ù–µ —Å—Ç–æ–∏—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é captchaHandler, —Ç–∞–∫ –∫–∞–∫ –≤ EasyVK
			  // –¥–ª—è —ç—Ç–æ–≥–æ –∏–º–µ–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è reCall, –∫–æ—Ç–æ—Ä–∞—è —Ç–æ—á–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç –≤—Å–µ –∫–∞–∫ –Ω—É–∂–Ω–æ

			})
		}	
		else{
			databaseRequest("select * from grandadmin where id="+user_Id).then(function(response){
				let setSideTo = response[0].setSideTo; let setPriceTo = response[0].priceto; let massMessageto = response[0].massMessageto;
				if((setSideTo != null)&&((setSideTo != 0))){
					if((ctx.message.body).split('https://vk.com/')[1]!= undefined){
						EASYVK.call('users.get', {
							user_ids:(ctx.message.body).split('https://vk.com/')[1],
						}).then(function(resp){
							console.log((ctx.message.body).split('https://vk.com/')[1],resp);
							databaseRequest("select subject from executorList where id="+resp[0].id).then(function(response){
								if((response == '')||(response[0].subject == null)){
									databaseRequest('select id from executorList').then(function(response){
										let count = 0;
										if(response[0]!= undefined) count = response.length;
										databaseRequest("insert executorList (id,executor_id) values("+resp[0].id+","+count+")").then(function(){
											databaseRequest("update grandadmin set setSideTo=0,setworktypeto = "+resp[0].id+" where id="+user_Id).then(function(){
												BotReply(ctx,'–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.\n'+subjectList, Markup.keyboard([[
													Markup.button('—Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π', 'positive')
												]
												]).oneTime())

											})
										})
									})								
								}
								else{
									let executor = response[0].setworktypeto;
									var subjects = '';
									if( (response[0]!= undefined)&&((response[0].subject).split(',').length = 1)){
										for(var i =0; i< (response[0].subject).split(',').length;i++){
											subjects += (response[0].subject).split(',')[i]+' ';
										}
									}
									else{
										subjects = response[0].subject;
									}
									databaseRequest("update grandadmin set setworktypeto = 0 where id="+user_Id).then(function(){
										BotReply(ctx,'–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å https://vk.com/'+(ctx.message.body).split('https://vk.com/')[1]+' —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç(—ã): '+subjects +'. \n –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ?',Markup.keyboard([
											[
												Markup.button('–¥–æ–±–∞–≤–∏—Ç—å https://vk.com/'+(ctx.message.body).split('https://vk.com/')[1], 'primary'),
											]
										]).oneTime());
									})
								}
							})						
						}).catch(function(err){
							console.log(err);
						})
					}
					else{
						BotReply(ctx,'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞')
					}
				}		
				else if (massMessageto != null){
					if(massMessageto == 'executors'){
						databaseRequest("update grandadmin set massMessageto = null where id="+user_Id).then(function(){
							databaseRequest("select id from executorList").then(function(response){
								var photos = ''; var docs = '';
								if(ctx.message.attachments != undefined){						
									for(var i =0;i < ctx.message.attachments.length;i++){
										if(ctx.message.attachments[i].photo!= undefined)photos += ctx.message.attachments[i].photo['photo_604']+'\n';
										if(ctx.message.attachments[i].doc!= undefined) docs += ctx.message.attachments[i].doc['url']+'\n';
									}
								}
								let executors = [];
								for(let i =0 ; i < response.length;i++)executors.push(response[i].id);
								bot.sendMessage( [...new Set([...executors ,...specIDs])],ctx.message.body+'\n\n–í–ª–æ–∂–µ–Ω–∏—è:\n'+photos+docs);
							})
						})					
					}				
				}
				else{
					selectUser(user_Id).then(function(response){
						if( (response[0].chat != 0)&&((response[0].chat != null)) ){
							let workID = response[0].chat;
							databaseRequest("update executorList set chat=0,waitto="+workID+",chatMessage='"+ctx.message.body+"' where id="+user_Id).then(function(){
								BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.')
							})	
						}
						else if( (response[0].waitto != 0)&&((response[0].waitto != null)) ){
							BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–∏—Å–ª–æ–º!.')
						}
						else{
							BotReply(ctx,"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º", Markup.keyboard([						
								[
									Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
								],
								[
									Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'primary'),
								],
								[
									Markup.button('–û—Ç–∫—Ä—ã—Ç—ã–µ —Å–ø–æ—Ä—ã', 'negative'),
								],
							]).oneTime());
						}
					}).catch(function(err){
						if(err =="isEmpty"){
							BotReply(ctx,"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º", Markup.keyboard([						
								[
									Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
								],
								[
									Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'primary'),
								],
								[
									Markup.button('–û—Ç–∫—Ä—ã—Ç—ã–µ —Å–ø–æ—Ä—ã', 'negative'),
								],
							]).oneTime());
						}
						else console.log(2831,err);
					})	
				}	
			})
		}
		//–∞–¥–º–∏–Ω
	}).catch(function(){
		isExecutor(user_Id).then(function(response){
			selectUser(user_Id).then(function(response){
				if( (response[0].chat != 0)&&((response[0].chat != null)) ){
					let workID = response[0].chat;
					databaseRequest("update executorList set chat=0,waitto="+workID+",chatMessage='"+ctx.message.body+"' where id="+user_Id).then(function(){
						databaseRequest("select commentFromExecutorWhenOrderIsAccepted from userList where workId="+workID).then(function(response){
							let comments = response[0].commentFromExecutorWhenOrderIsAccepted;
							if( (comments != null)&&(comments != 0) ){
								comments += ','+ctx.message.body+'_'+user_Id;
							}
							else comments = ctx.message.body+'_'+user_Id;
							databaseRequest("update userList set commentFromExecutorWhenOrderIsAccepted='"+comments+"' where workId="+workID).then(function(){
								BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.',Markup.keyboard([
									Markup.button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'positive')
								]))
							})	
						})											
					})	
				}
				else if( (response[0].waitto != 0)&&((response[0].waitto != null)) ){
					BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–∏—Å–ª–æ–º!.')
				}
				else{
					BotReply(ctx,"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º", Markup.keyboard([						
						[
							Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
						],
						[
							Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'primary'),
						],
						[
							Markup.button('–û—Ç–∫—Ä—ã—Ç—ã–µ —Å–ø–æ—Ä—ã', 'negative'),
						],
					]).oneTime());
				}
			}).catch(function(err){
				if(err =="isEmpty"){
					BotReply(ctx,"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º", Markup.keyboard([						
						[
							Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
						],
						[
							Markup.button('–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'primary'),
						],
						[
							Markup.button('–û—Ç–∫—Ä—ã—Ç—ã–µ —Å–ø–æ—Ä—ã', 'negative'),
						],
					]).oneTime());
				}
				else console.log(2831,err);
			})	
			//–∏—Å–ø–æ–ª–æ–Ω–∏—Ç–µ–ª—å
		}).catch(function(){
			selectUser(user_Id).then(function(response){
				if(response[0].askQuestion != 1){
					if(ctx.message.attachments != undefined){
						if (response[0].status == 'TaskSelected'){						
							databaseRequest("select id from userList").then(function(response){
								let count = 0;
								if(response[0]!= undefined) count = response.length;
								databaseRequest("update userList set workId ="+count+" ,status ='setDeadline' where id="+user_Id+" and orderFinished=0").then(function(){
									function searchWorkID(id){
										databaseRequest("select id from userList where workId="+id).then(function(response){
											if(response!='') {
												id++;
												searchWorkID(id)
											}
											else{
												console.log("workID: "+id);
												count =  id;
												var photos = ''; var docs = '';
												for(var i =0;i < ctx.message.attachments.length;i++){
													if(ctx.message.attachments[i].photo!= undefined)photos += ctx.message.attachments[i].photo['photo_604']+'<--->';
													if(ctx.message.attachments[i].doc!= undefined) docs += ctx.message.attachments[i].doc['url']+'<--->';
												}	
												databaseRequest("update userList set photos='"+photos+"',docs ='"+docs+"',workId ="+count+" ,status ='setDeadline' where id="+user_Id+" and orderFinished=0").then(function(){
													BotReply(ctx,'–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –¥–µ–¥–ª–∞–π–Ω–∞ –ø–æ –ø—Ä–∏–º–µ—Ä—É: 6.08. –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, —Ç–æ —Å–º–æ–∂–µ—Ç–µ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —É–≤–µ–¥–æ–º–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.', Markup.keyboard([
														[
															Markup.button('–°–µ–≥–æ–¥–Ω—è', 'primary'),
															Markup.button('–ó–∞–≤—Ç—Ä–∞', 'primary'),
														],
														[
															Markup.button('–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é', 'primary'),
															Markup.button('–ß–µ—Ä–µ–∑ –º–µ—Å—è—Ü', 'primary'),
														],
														[
															Markup.button('–î—Ä—É–≥–∞—è', 'default'),
															Markup.button('–ù–µ –∑–Ω–∞—é', 'default'),
														],
														[
															Markup.button('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', 'default')
														],
														[
															Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
														]
													]).oneTime());
												})
											}
										})
									}	
									searchWorkID(count);
								})																					
							})
						} 	
						else{
							console.log(response[0].workId,'–°—Ç–∞—Ç—É—Å –Ω–µ TaskSelected');
							BotReply(ctx,'–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è.')
						}	
					}
					else{
							if(response[0].status == 'TaskSelected'){
								BotReply(ctx,'–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É —Å–º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –¥–∞–ª—å—à–µ. –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫ –∑–∞–¥–∞–Ω–∏—é, –∏–ª–∏ –ø—Ä–∏–º–µ—Ä –±–∏–ª–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –≤—Å—Ç—Ä–µ—Ç–∏—Ç—Å—è, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ—Ü–µ–Ω–∏—Ç—å —Ä–∞–±–æ—Ç—É.\n\nP.s. –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –Ω–∞–∂–º–∏—Ç–µ "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"', Markup.keyboard([
									[
										Markup.button('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', 'default')
									],
									[
										Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
									]
								]).oneTime());
							}
							if(response[0].chatStatus == 'WaitsResponse'){
								var photos = ''; var Docs = ''; var userMessage = ctx.message.body;
								for(var i =0;i < ctx.message.attachments.length;i++){
									if(ctx.message.attachments[i].photo!= undefined)photos += ctx.message.attachments[i].photo['photo_604']+'\n';
									if(ctx.message.attachments[i].doc!= undefined) Docs +=ctx.message.attachments[i].doc['url'];
								}
								bot.sendMessage(response[0].chat, '&#128100; '+userMessage+' \n ----------------- \n –§–æ—Ç–æ:'+photos+' \n –î–æ–∫—É–º–µ–Ω—Ç—ã:'+Docs)
							}
							else if (response[0].status == 'WaitsComment'){
								databaseRequest("update userList set comment = '"+ctx.message.body+"',status = 'getSuccess' where id="+user_Id+" and orderFinished=0").then(function(){
									databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
										BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
											[
												Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
												Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
											],
											[
												Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
											]
										]).oneTime());
									})	
								})	
							}
							else if(response[0].status == 'setDeadline'){
								selectUser(user_Id).then(function(response){
									if( (response[0].comment !=null)&&(response[0].comment !=0) ){
										databaseRequest('update userList set deadline = "'+ctx.message.body+'", status="getSuccess" where id='+user_Id+" and orderFinished=0").then(function(){							
											databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
												BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
													[
														Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
														Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
													],
													[
														Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
													]
												]).oneTime());
											})	
										}).catch(function(err){
											console.log(2158,err);
										})									
									}
									else{
										databaseRequest('update userList set deadline = "'+ctx.message.body+'" where id='+user_Id+" and orderFinished=0").then(function(){							
											BotReply(ctx,'–£–∫–∞–∑–∞—Ç—å –¥–µ–¥–ª–∞–π–Ω: '+ctx.message.body+'?', Markup.keyboard([
												[
													Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
													Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
												],
												[
													Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
												]
											]).oneTime());
										}).catch(function(err){
											console.log(2158,err);
										})	
									}
								})								
							}
							else if(response[0].status == 'setWorkTime'){
								selectUser(user_Id).then(function(response){
									if( (response[0].comment !=null)&&(response[0].comment !=0) ){
										databaseRequest('update userList set workTime = "'+ctx.message.body+'", status="getSuccess" where id='+user_Id+" and orderFinished=0").then(function(){							
											databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
												BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+ctx.message.body+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
													[
														Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
														Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
													],
													[
														Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
													]
												]).oneTime());
											})	
										}).catch(function(err){
											console.log(2158,err);
										})									
									}
									else{
										databaseRequest('update userList set workTime = "'+ctx.message.body+'" where id='+user_Id+" and orderFinished=0").then(function(){							
											BotReply(ctx,'–£–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: '+ctx.message.body+'?', Markup.keyboard([
												[
													Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
													Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
												],
												[
													Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
												]
											]).oneTime());
										}).catch(function(err){
											console.log(2158,err);
										})	
									}
								})								
							}
							else if(response[0].status == 'selectingObject'){
								selectUser(user_Id).then(function(response){
									if( (response[0].comment !=null)&&(response[0].comment !=0) ){
										databaseRequest('update userList set subject = "'+ctx.message.body+'", status="ObjectSelected" where id='+user_Id+" and orderFinished=0").then(function(){							
											databaseRequest('select * from userList where id='+user_Id+" and orderFinished=0").then(function(response){
												BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+ctx.message.body+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
													[
														Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
														Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
													],
													[
														Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
													]
												]).oneTime());
											})	
										}).catch(function(err){
											console.log(2158,err);
										})									
									}
									else{
										databaseRequest('update userList set subject = "'+ctx.message.body+'" ,status="ObjectSelected" where id='+user_Id+" and orderFinished=0").then(function(){							
											BotReply(ctx,'–£–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç: '+ctx.message.body+'?', Markup.keyboard([
												[
													Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
													Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
												],
												[
													Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
												]
											]).oneTime());
										}).catch(function(err){
											console.log(2158,err);
										})	
									}
								})	
							}
							else if(response[0].status == 'ObjectSelected'){
								BotReply(ctx,'–í—ã–±–µ—Ä–∏ –≤–∏–¥ –ø–æ–º–æ—â–∏', Markup.keyboard([
									[
										Markup.button('–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞/–†–ö', 'primary'),
										Markup.button('–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞', 'primary'),
									],
									[
										Markup.button('–≠–∫–∑–∞–º–µ–Ω/–ó–∞—á–µ—Ç', 'primary'),
										Markup.button('–ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞', 'primary'),
									],
									[
										Markup.button('–†–µ—Ñ–µ—Ä–∞—Ç/–î–æ–∫–ª–∞–¥/–û—Ç—á–µ—Ç', 'primary'),
										Markup.button('–î–∏–ø–ª–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞', 'primary')
									],
									[
										Markup.button('–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞', 'primary'),
									],
									[
										Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
									]
								]).oneTime());						
							}
							else if(response[0].status == 'getSuccess'){
								BotReply(ctx,'–í–∞—à –∑–∞–∫–∞–∑:\n–ü—Ä–µ–¥–º–µ—Ç:'+response[0].subject+'\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:'+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment, Markup.keyboard([
									[
										Markup.button('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'positive'),
										Markup.button('–û—Ç–∫–∞–∑–∞—Ç—å—Å—è', 'negative')
									],
									[
										Markup.button('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'default')
									]
								]).oneTime());
							}
							else if(response[0].status == 'Declined'){
								databaseRequest("select * from userList where status='Declined' and id="+user_Id+" and orderFinished=0").then(function(response){
									var message;
									if( (response[0].executor != null)&&(response[0].executor != 0) ){
										let executor = response[0].executor;
										message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: https://vk.com/id'+executor+'\n–°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n –ü—Ä–∏—á–∏–Ω–∞: '+response[0].comment;
									}
									else{
										message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n  -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n –ü—Ä–∏—á–∏–Ω–∞: '+response[0].comment;
									}
									databaseRequest("update userList set orderFinished=1,comment='"+ctx.message.body+"' where id="+user_Id+" and orderFinished=0").then(function(){
										bot.execute('messages.send', {
										  random_id: randomInteger(0, 18446744073709551614),
										  chat_id: 8,
										  message: message
										})
										BotReply(ctx,'–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–¥–µ–π—Å—Ç–≤–∏–µ —É–ª—É—á—à–µ–Ω–∏—é –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞. \n –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∑–∞–Ω–æ–≤–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑.')
									})
								})
							}
							if(response[0].status =='typeOfWorkSelected'){
								BotReply(ctx,'–í—ã–±–µ—Ä–∏ –≤–∏–¥ –ø–æ–º–æ—â–∏', Markup.keyboard([
									[
										Markup.button('–ü—Ä–∏—Å–ª–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ', 'primary'),
										Markup.button('–ü–µ—Ä–µ–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º', 'primary')
									],
									[
										Markup.button('–î–∏–∫—Ç–æ–≤–∫–∞', 'primary'),
										Markup.button('–°–¥–∞—Ç—å –∑–∞ –≤–∞—Å', 'primary'),
									],
									[
										Markup.button('–û—Ç—Ä–∞–±–æ—Ç–∫–∞', 'primary'),
										Markup.button('–ù–æ—Ä–º–∞—Ç–∏–≤—ã', 'primary'),
									],
									[
										Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'negative')
									]
								]).oneTime());		
							}
							else{
								console.log(2456,response[0].status);
							}	
					}
				}
			}).catch(function(err){
				if(err =="isEmpty"){
					BotReply(ctx,'–ü—Ä–∏–≤–µ—Ç –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —É—á–µ–±–æ–π. –¢–µ–±–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å?', Markup.keyboard([
						[
							Markup.button('–ó–∞–∫–∞–∑–∞—Ç—å', 'positive'),
							Markup.button('–í –¥—Ä—É–≥–æ–π —Ä–∞–∑', 'negative')
						],
						[
							Markup.button('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'positive')
						],
						[
							Markup.button('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', 'positive')
						]
					]).oneTime());											
				}
				else console.log(2831,err);
			})
			//–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
		})
	})
});
function pollRequest(body){
	if( (JSON.parse(body).updates != undefined)&&(JSON.parse(body).updates[0]!= undefined)){ 			
	 	let updatesOrderDetails = JSON.parse(body).updates;
	 	console.log(updatesOrderDetails);	
	 	for (var updateskey in updatesOrderDetails) {	 		
	        if (typeof updatesOrderDetails[updateskey] === 'object') {
	        	let value = updatesOrderDetails[updateskey];			        	
	        	if( ( value != undefined )&&( (value)[7] != undefined )&&((value)[7].from > 0) ){		
	        		console.log('–ü–µ—Ä–≤–æ–µ —É—Å–ª–æ–≤–∏–µ');        	
		        	let user_Id = parseInt((value)[7].from); let messagesWorkID = (value)[5].split(' ')[0];
		            if( (value)[7].hasOwnProperty('source_act') ){            	
		            	if( (value)[7].source_act == 'chat_title_update' ){
		            		let chatID = (value)[3]-2000000000;	
		            		let peerID = (value)[3];	
		            		let messagesID = parseInt(((value)[7].source_old_text).split('id:')[1]);
		            		let messagesPeerID = messagesID +2000000000;		
		            		bot.execute('messages.editChat', {
								chat_id: messagesID,
								title: (value)[7].source_old_text
							}).then(function(){}).catch(function(){})
							bot.execute('messages.send', {
								random_id: randomInteger(0, 18446744073709551614),
								peer_id: messagesPeerID,
								chat_id: messagesID,
								message: '–ù–∞–∑–≤–∞–Ω–∏–µ –±–µ—Å–µ–¥—ã —Ö—Ä–∞–Ω–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–∫–æ—Ä–µ–π—à–µ–π –ø–æ–º–æ—â–∏ –í–∞–º. –ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏–∑–º–µ–Ω—è—Ç—å –µ–≥–æ'
							}).then(function(){}).catch(function(){})
		            	}
		            	else if( (value)[7].source_act == 'chat_kick_user'){
				  			let user_Id = (value)[7].from;
				  			isExecutor(user_Id).then(function(){

				  			}).catch(function(){
				  				if( !specIDs.includes( parseInt(user_Id),0) ){
					  				databaseRequest("select workId,executorChatId from chatList where id="+user_Id+" and userChatID="+(value)[5].split('id:')[1] ).then(function(response){
							  			if( ( (response != '')&&response[0].workId != null)&&((response[0].workId != 0)) ){
							  				let workId = response[0].workId;
						  					let executorChatId = response[0].executorChatId;	
					  						let executorPeerID = 2000000000+executorChatId;
					  						databaseRequest("update userList set status='Declined',comment='–í—ã—à–µ–ª –∏–∑ —á–∞—Ç–∞' where workId="+workId).then(function(){
					  							databaseRequest("delete from chatList where workId="+workId).then(function(){
					  								if( (executorChatId != null)&&(executorChatId != 0) ){					  							
														bot.execute('messages.send', {
														    random_id: randomInteger(0, 18446744073709551614),
															peer_id: executorPeerID,
															chat_id: executorChatId,
															message: '–ö–ª–∏–µ–Ω—Ç —Å ID –∑–∞–∫–∞–∑–∞: '+workId+' –≤—ã—à–µ–ª –∏–∑ —á–∞—Ç–∞! –ó–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω.',
															group_id:148975156
														}).then(function(response){
															console.log(response);
														}).catch(function(err){
															console.log(err);
														})
							  						}
							  						bot.execute('messages.send', {
													    random_id: randomInteger(0, 18446744073709551614),
														chat_id: 7,
														message: '–ö–ª–∏–µ–Ω—Ç —Å ID –∑–∞–∫–∞–∑–∞: '+workId+' –≤—ã—à–µ–ª –∏–∑ —á–∞—Ç–∞! –ó–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω.',
														group_id:148975156
													}).then(function(response){
														console.log(response);
													}).catch(function(err){
														console.log(err);
													})
					  							})					  							
					  						})						  				
							  			}
							  		})	
					  			}	
				  			})					  						  			
				  		}
		            	else{
					  		let user_Id = (value)[7].from;			  		
					  		if( !specIDs.includes( parseInt( user_Id ),0) ){ 					  						  			
					  			let messagesWorkID = (value)[5].split(' ')[0];
					  			console.log('here');
								databaseRequest("select * from userList where workId="+messagesWorkID).then(function(response){
					  				let chatID = response[0].chat;
									let peerID = 2000000000+chatID;
									let subject = response[0].subject;
									let executorID = response[0].executor;

										var message = '\n–ó–∞–∫–∞–∑:\n -----------------\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment+' \n\n–í–ª–æ–∂–µ–Ω–∏—è: ';
										var Photos = ''; var Docs = '';
										if( (response[0].photos != 0)&&(response[0].photos != null) ){
											for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
												Photos += (response[0].photos).split('<--->')[i]+'\n';
											}
										}
										if( (response[0].docs != 0)&&(response[0].docs!= null) ){
											for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
												Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
											}
										}										
										isExecutor(user_Id).then(function(){ 			
											if( ((executorID == null)||(executorID == 0))||(executorID == user_Id) ){
												console.log(3747,executorID);							
												databaseRequest("update userList set executor ="+user_Id+" where workId="+messagesWorkID+" and orderFinished = 1").then(function(){
													databaseRequest("select executorChatId from chatList where workId="+messagesWorkID).then(function(response){
								  						let chatID = response[0].executorChatId;
														let peerID = 2000000000+chatID;
														console.log('–ë–µ—Å–µ–¥–∞: messagesWorkID. –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å '+user_Id+' –∑–∞—à–µ–ª –≤ –±–µ—Å–µ–¥—É');
														console.log('ChatID –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è: '+chatID);
														message = '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –ø–µ—Ä–µ—à–µ–ª –≤ –±–µ—Å–µ–¥—É –∑–∞–∑–∫–∞–∑–∞.' + message;
														bot.execute('messages.send', {
														  random_id: randomInteger(0, 18446744073709551614),
														  peer_id: peerID,
														  chat_id: chatID,
														  message: message+Docs+' \n\n'+Photos,
														  keyboard: Markup.keyboard([
														  	[
														  		Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ','primary')
														  	],
														  	[
														  		Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å','primary')
														  	],
														  	[
														  		Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑','positive')
														  	],
														  	[
														  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
														  	]
														  ])
														}).then(function(response){
															//console.log(response);
														}).catch(function(err){
															console.log(3746,err);
														})									
													})	
												})	
											}		
								  			else{
								  				console.log('/////// '+user_Id+' –£ –∑–∞–∫–∞–∑–∞ —É–∂–µ –µ—Å—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: '+ executorID);
								  				let kickChatID = parseInt((value)[5].split('id:')[1]);
												let kickPeerID = 2000000000+chatID;
												message = '–£ –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ —É–∂–µ –µ—Å—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å. –î–∞–ª–µ–µ —ç—Ç–∞ –±–µ—Å–µ–¥–∞ –±–µ—Å–ø–æ–ª–µ–∑–Ω–∞, –≤—ã –º–æ–∂–µ—Ç–µ —Å–ø–æ–∫–æ–π–Ω–æ –µ—ë –ø–æ–∫–∏–Ω—É—Ç—å.';
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  peer_id: kickPeerID,
												  chat_id: kickChatID,
												  message: message,
												}).then(function(response){
													//console.log(response);
												}).catch(function(err){
													console.log(3746,err);
												})	
								  			}				  					
							  			}).catch(function(){
							  				console.log("–ó–∞–∫–∞–∑—á–∏–∫ "+user_Id+" –ø–µ—Ä–µ—à—ë–ª –≤ –±–µ—Å–µ–¥—É –∑–∞–∫–∞–∑–∞: "+messagesWorkID);
							  				message = '–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ—Ü–µ–Ω–∫–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏. –ü–æ–∫–∞ —á—Ç–æ –º–æ–∂–µ—Ç–µ –ø–æ–ø–∏—Ç—å –∫–æ—Ñ–µ, –ø–æ–¥–æ–∂–¥–∞—Ç—å –Ω–∞—à–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–µ–µ. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –æ–¥–æ–±—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –ø—Ä—è–º–æ —Ç—É—Ç.\n–ù–µ –≤—ã—Ö–æ–¥–∏—Ç–µ –∏–∑ –±–µ—Å–µ–¥—ã, –∏–Ω–∞—á–µ –∑–∞–∫–∞–∑ –∑–∞–∫—Ä–æ–µ—Ç—Å—è.\n &#10084;- –ø–∏—à–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç\n\n\n–í–∞—à –∑–∞–∫–∞–∑:\n -----------------\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment+' \n\n–í–ª–æ–∂–µ–Ω–∏—è: ';
							  				databaseRequest("update userList set userInChat=1 where status!='Declined' and status !='Completed' and workId="+messagesWorkID+" and userInChat is null").then(function(){
												Search(user_Id,messagesWorkID);
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  peer_id:peerID,
												  chat_id: chatID,
												  message: message+Docs+' \n\n'+Photos,
												  keyboard: Markup.keyboard([
												  	[
												  		Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑','negative')
												  	],
												  	[
												  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','negative')
												  	]
												  ])
												}).then(function(response){
													//console.log(response);
												}).catch(function(err){
													//console.log(err);
												})									
											})	
							  			})									  						
								})
					  		}
				  		}
		            }
		            else{			            	
				  		if( (value)[7].payload != undefined ){ 
				  			if( !specIDs.includes( parseInt((value)[7].from),0) ){ 
				  				let user_Id = (value)[7].from;
				  				isExecutor(user_Id).then(function(){ 
				  					if( JSON.parse((value)[7].payload).button == '–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ' ){				  						
				  						var Status = ''; var Executor = ''; var message = '';
				  						searchByWorkId(messagesWorkID).then(function(response){
											var Photos = ''; var Docs = '';
											if(response[0].photos!= undefined){
												for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
													Photos += (response[0].photos).split('<--->')[i]+'\n';
												}
											}
											if(response[0].docs!= undefined){
												for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
													Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
												}
											}		
											let executorStartPrice = '';	let priceMarkup = '';
											if( (response[0].executorStartPrice != null)&&( response[0].executorStartPrice != 0 ) ){
												for(let i =0; i < response[0].executorStartPrice.split(',').length;i++){
													if( (response[0].executorStartPrice.split(',')[i]).split('_')[1] == user_Id){
														executorStartPrice = (response[0].executorStartPrice.split(',')[i]).split('_')[0];
														break;
													}
												}
											}
											else executorStartPrice = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
											
											if(response[0].status == 'InProcessing'){
												Status= '–í–µ–¥–µ—Ç—Å—è –ø–æ–∏—Å–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.';
											}
											else if(response[0].status == 'PriceSelected'){
												Status= '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —É–∫–∞–∑–∞–ª —Ü–µ–Ω—É.';
											}
											else if(response[0].status == 'waitToPriceResponse'){
												Status= '–í—ã –Ω–∞–∑–Ω–∞—á–∏–ª–∏ —Ü–µ–Ω—É. –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞..';
											}
											else if(response[0].status == 'Paid'){
												Status= '–û–ø–ª–∞—á–µ–Ω.';
											}
											else if(response[0].status == 'Completed'){
												Status= '–ó–∞–≤–µ—Ä—à–µ–Ω.';
											}
											else Status = response[0].status;			
											if((response[0].executor != null)&&(response[0].executor != 0)){
												Executor = '–ù–∞–π–¥–µ–Ω';
											}
											else{
												Executor = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
											}
											let executorFinishPrice = response[0].executorPrice 
											if( (executorFinishPrice == null)||(executorFinishPrice == 0) ) executorFinishPrice = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
											
											message = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É ID:'+response[0].workId+' \n ------------- \n–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞:'+executorStartPrice+'\n –ö–æ–Ω–µ—á–Ω–∞—è —Ü–µ–Ω–∞:'+executorFinishPrice+' \n–ü—Ä–µ–¥–º–µ—Ç: '+response[0].subject+' \n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+' \n –ó–∞–¥–∞—á–∞: '+response[0].Task +'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+response[0].comment+'\n –î–æ–∫—É–º–µ–Ω—Ç—ã: '+Docs +' \n\n –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: '+Photos;
											
											databaseRequest("select executorChatId from chatList where workId="+messagesWorkID).then(function(response){
												let executorChatId = response[0].executorChatId;
												let executorPeerId = 2000000000+executorChatId;
												bot.execute('messages.send', {
												    random_id: randomInteger(0, 18446744073709551614),
													peer_id: executorPeerId,
													chat_id: executorChatId,
													message: message,
													group_id:148975156,
												}).then(function(response){
													console.log(response);
												}).catch(function(err){
													console.log(err);
												})
											})
										}).catch(function(err){
											if(err == 'not-found'){
												BotReply(ctx,'–ó–∞–∫–∞–∑–∞ —Å ID: '+(ctx.message.body).split(':')[1] +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
											}
											else if(err == "workId doesn't exist"){
												BotReply(ctx,'–ù–µ —É–∫–∞–∑–∞–Ω ID')
											}
											else{
												console.log(3703,err);
											}
										})		
				  					}
				  					if( JSON.parse((value)[7].payload).button == '–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å' ){
				  						searchByWorkId( messagesWorkID ).then(function(response){
											databaseRequest("update executorList set setpriceto ="+response[0].id+" where id="+user_Id).then(function(){
												databaseRequest("select executorChatId from chatList where workId="+messagesWorkID).then(function(response){
													let executorChatId = response[0].executorChatId;
													let executorPeerId = 2000000000+executorChatId;
													bot.execute('messages.send', {
													    random_id: randomInteger(0, 18446744073709551614),
														peer_id: executorPeerId,
														chat_id: executorChatId,
														message: '–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å.',
														group_id:148975156,
													})
												})
											})
										})
				  					}
				  					if( JSON.parse((value)[7].payload).button == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑' ){ 
				  						searchByWorkId( messagesWorkID ).then(function(response){
											databaseRequest("update userList set status ='Completed' where workId="+messagesWorkID).then(function(){
												databaseRequest("select executorChatId from chatList where workId="+messagesWorkID).then(function(response){
													let executorChatId = response[0].executorChatId;
													let executorPeerId = 2000000000+executorChatId;
													bot.execute('messages.send', {
													    random_id: randomInteger(0, 18446744073709551614),
														peer_id: executorPeerId,
														chat_id: executorChatId,
														message: '–ó–∞–∫–∞–∑ –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω. –£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –±—ã–ª –∑–∞–∫—Ä—ã—Ç –∑–∞–∫–∞–∑?',
														keyboard: Markup.keyboard([
														[
															Markup.button('–£—Å–ø–µ—à–Ω–æ', 'positive'),
															Markup.button('–ë–µ–∑—É—Å–ø–µ—à–Ω–æ', 'negative')
														]
														]),
														group_id:148975156,
													})
												}).then(function(){}).catch(function(){})
											})
										})
				  					}
				  					if( JSON.parse((value)[7].payload).button == '–£—Å–ø–µ—à–Ω–æ' ){
										searchByWorkId(messagesWorkID).then(function(response){
											var message = '–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω. –ú—ã –±—ã–ª–∏ —Ä–∞–¥—ã –í–∞–º –ø–æ–º–æ—á—å!\n–ê —Ç–µ–ø–µ—Ä—å, –µ—Å–ª–∏ –≤–∞—Å –Ω–µ –∑–∞—Ç—Ä—É–¥–Ω–∏—Ç, –æ—Å—Ç–∞–≤—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–º –æ—Ç–∑—ã–≤.\n–ó–∞—Ä–∞–Ω–µ–µ —Å–ø–∞—Å–∏–±–æ\n https://vk.com/app6326142_-148975156';
											let userChatID = response[0].chat;
											let userPeerID = 2000000000+userChatID;
											
											databaseRequest("select executorChatId from chatList where workId="+messagesWorkID).then(function(response){
												let executorChatId = response[0].executorChatId;
												let executorPeerId = 2000000000+executorChatId;		

												bot.execute('messages.send', {
												    random_id: randomInteger(0, 18446744073709551614),
													peer_id:userPeerID,
													chat_id: userChatID,
													message: message,
													group_id:148975156,
												}).then(function(){}).catch(function(){})								

												bot.execute('messages.send', {
												    random_id: randomInteger(0, 18446744073709551614),
													peer_id:executorPeerId,
													chat_id: executorChatId,
													message: '–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É.',
													group_id:148975156,
												}).then(function(){}).catch(function(){})
											})
										})
				  					}
				  					if( JSON.parse((value)[7].payload).button == '–ë–µ–∑—É—Å–ø–µ—à–Ω–æ' ){
				  						databaseRequest("select executorChatId from chatList where workId="+messagesWorkID).then(function(response){
											let executorChatId = response[0].executorChatId;
											let executorPeerId = 2000000000+executorChatId;
											bot.execute('messages.send', {
											    random_id: randomInteger(0, 18446744073709551614),
												peer_id:executorPeerId,
												chat_id: executorChatId,
												message: '–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É.',
												group_id:148975156,
											}).then(function(){}).catch(function(){})
										})
				  					}	
				  					if( JSON.parse((value)[7].payload).button == '–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞' ){
				  						let chatID = parseInt((value)[5].split('id:')[1]);
										let peerID = 2000000000+chatID;
										message = '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é –∑–∞–∫–∞–∑–∞ —Å ID:'+messagesWorkID+' –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä';							
										EASYBOTVK.call('messages.getInviteLink', {
											peer_id: peerID,
											group_id:148975156,
										}).then(function(chatLink){
											message += '\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É –∑–∞–∫–∞–∑–∞ —Å ID: '+chatLink.link;
											bot.sendMessage(specIDs,message)

											bot.execute('messages.send', {
											  random_id: randomInteger(0, 18446744073709551614),
											  peer_id: peerID,
											  chat_id: chatID,
											  message: '–ú–µ–Ω–µ–¥–∂–µ—Ä –æ–ø–æ–≤–µ—â–µ–Ω. –°–∫–æ—Ä–æ –æ–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ',
											  keyboard:Markup.keyboard([
											  	[
											  		Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ','primary')
											  	],
											  	[
											  		Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å','primary')
											  	],
											  	[
											  		Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑','positive')
											  	],
											  	[
											  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
											  	]
											  ])
											}).then(function(response){
												//console.log(response);
											}).catch(function(err){
												console.log(3746,err);
											})	
										})																						
				  					}  					
				  				}).catch(function(err){
						  			if( JSON.parse((value)[7].payload).button.split("–í—ã–±—Ä–∞—Ç—å:")[1]!= undefined ){
						  				let executorID = JSON.parse((value)[7].payload).button.split("–í—ã–±—Ä–∞—Ç—å:")[1];
						  				let messagesWorkID = (value)[5].split(' ')[0];
						  				console.log("–í—ã–±—Ä–∞—Ç—å: "+executorID);
							  			databaseRequest("select chat,workId,subject,executor from userList where workId="+messagesWorkID).then(function(response){
							  				console.log(response);
							  				if( (response[0].executor != null)||(response[0].executor != 0) ){
							  					let chatID = response[0].chat;
												let peerID = 2000000000+chatID;
												let workId = response[0].workId;
												let subject = response[0].subject;														
												databaseRequest("select id from executorList where executor_id="+executorID).then(function(response){
													let executorProfileID = response[0].id;													
													databaseRequest('select * from userList where workId='+workId).then(function(response){
														let orderDetails = response;
														var message = '–ó–∞–∫–∞–∑\n -----------------\n ID: '+orderDetails[0].workId+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+orderDetails[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+orderDetails[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+orderDetails[0].Task+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+orderDetails[0].comment+' \n\n–í–ª–æ–∂–µ–Ω–∏—è: ';
														var Photos = ''; var Docs = '';
														if(orderDetails[0].photos!= undefined){
															for(var i = 0; i < (orderDetails[0].photos).split('<--->').length;i++){
																Photos += (orderDetails[0].photos).split('<--->')[i]+'\n';
															}
														}
														if(orderDetails[0].docs!= undefined){
															for(var i = 0; i < (orderDetails[0].docs).split('<--->').length;i++){
																Docs += ' \n'+(orderDetails[0].docs).split('<--->')[i]+'\n';
															}
														}				
														EASYBOTVK.call('messages.createChat', {
															title: workId+' '+subject,
															group_id:148975156,
														}).then(function(createExecutorChat){
															let messagesChatID = createExecutorChat.getFullResponse().response;
															let messagesPeerID = 2000000000+messagesChatID;
															let editChat = EASYBOTVK.call('messages.editChat', {
																chat_id: messagesChatID,
																title: workId+' '+subject+' id:'+messagesChatID
															})
															databaseRequest("update chatList set executorId="+executorProfileID+",executorChatId="+messagesChatID+" where workId="+workId).then(function(){
																EASYBOTVK.call('messages.getInviteLink', {
																	peer_id: messagesPeerID,
																	group_id:148975156,
																}).then(function(chatLink){
																	EASYVK.call('messages.joinChatByInviteLink', {
																		link: chatLink.link,
																	}).then(function(chatJoin){
																		EASYMANAGERVK.call('messages.joinChatByInviteLink', {
																			link: chatLink.link,
																		}).then(function(){
																			bot.sendMessage(executorProfileID,'–í–∞—Å –≤—ã–±—Ä–∞–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º –∑–∞–∫–∞–∑–∞ #'+workId+'\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É –∑–∞–∫–∞–∑–∞: '+chatLink.link,null,Markup.keyboard([
																			[
																				Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+workId, 'primary')
																			],
																			[
																				Markup.button('–û—Ç–∫–∞–∑–∞—Ç—å—Å—è id:'+workId, 'negative')
																			]
																			]).inline())
																			bot.execute('messages.send', {
																			  random_id: randomInteger(0, 18446744073709551614),
																			  peer_id: peerID,
																			  chat_id: chatID,
																			  message: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å ID:'+executorID+' –æ–ø–æ–≤–µ—â—ë–Ω. –í—Å–∫–æ—Ä–µ –æ–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ —Ç—É—Ç. –ü–æ–∫–∞ —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.',
																			}).then(function(response){
																				//console.log(response);
																			}).catch(function(err){
																				//console.log(err);
																			})
																		})																																				
																	})
																})																
															})	
														})	
													})									
												})
							  				}	
							  				else{
							  					let chatID = response[0].chat;
												let peerID = 2000000000+chatID;
												let workId = response[0].workId;
												let subject = response[0].subject;							
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  peer_id:peerID,
												  chat_id: chatID,
												  message: '–£ –∑–∞–∫–∞–∑–∞ —Å ID:'+response[0].workId+' —É–∂–µ –µ—Å—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å'
												}).then(function(response){
													//console.log(response);
												}).catch(function(err){
													//console.log(err);
												})
							  				}				  				
							  			})				  				
						  			}
						  			if( JSON.parse((value)[7].payload).button == '–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è' ){ 
						  				let messagesWorkID = (value)[5].split(' ')[0];
						  				databaseRequest("select * from userList where workId="+messagesWorkID).then(function(response){
						  					if((response[0].Task == '–î–∏–∫—Ç–æ–≤–∫–∞')||(response[0].Task == '–°–¥–∞—Ç—å –∑–∞ –≤–∞—Å')||(response[0].Task == '–ü–µ—Ä–µ–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º')){
												var message = '–ö–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ –æ–ø–ª–∞—Ç–∏—Ç—å \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task;
											}
											else if((response[0].typeOfWork == '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞')||(response[0].Task == '–û—Ç—Ä–∞–±–æ—Ç–∫–∞')||(response[0].Task == '–ù–æ—Ä–º–∞—Ç–∏–≤—ã')){
												var message = '–ö–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ –æ–ø–ª–∞—Ç–∏—Ç—å \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task;
											}
											else{
												var message = '–ö–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ –æ–ø–ª–∞—Ç–∏—Ç—å \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task;
											}
											let Price = response[0].price;
											databaseRequest("update userList set status='PriceSuccess' where workId="+messagesWorkID).then(function(response){
												databaseRequest("select id from grandadmin where id="+specIDs[1]).then(function(response){
													let admin_Id = response[0].id
													bot.sendMessage(admin_Id, message);
													databaseRequest("select userChatID from chatList where workId="+messagesWorkID).then(function(response){
														let userChatID = response[0].userChatID;
														let userPeerID = 2000000000+userChatID;
														bot.execute('messages.send', {
														    random_id: randomInteger(0, 18446744073709551614),
															peer_id:userPeerID,
															chat_id: userChatID,
															message: '–ñ–¥—ë–º –æ—Ç –≤–∞—Å –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É –≤ —Ä–∞–∑–º–µ—Ä–µ '+Price+'‚ÇΩ\n –û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏:\n- vk pay\n- –≤–∫ –¥–µ–Ω—å–≥–∏ (—Å–∫—Ä–µ–ø–∫–∞ -> –¥–µ–Ω—å–≥–∏)\n- –Ω–∞ –∫–∞—Ä—Ç—É –°–±–µ—Ä–±–∞–Ω–∫ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7 (926) 942-27-09 \n\n–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ ¬´—á–µ–∫¬ª, –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω –ø–µ—Ä–µ–≤–æ–¥–∞.\n –ù–∞—à–∏ –æ—Ç–∑—ã–≤—ã: https://vk.com/app6326142_-148975156?ref=group_menu',
															group_id:148975156,
															keyboard: Markup.keyboard( [
																[
																	Markup.button({
																      action: {
																        type:"vkpay",
																		hash:"action=pay-to-user&amount="+(Price).toString()+"&user_id=106541016"
																      },
																    })
															    ],
																[ 
															   		Markup.button('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫','primary')
															    ],
															    [
															    	Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
															    ]
															] )
														}).then(function(response){
															console.log(response);
														}).catch(function(err){
															console.log(err);
														})
													})
												})	
											})																		
						  				})
						  			}
						  			if( JSON.parse((value)[7].payload).button == '–û—Ç–∫–∞–∑–∞—Ç—å—Å—è' ){
						  				let messagesWorkID = (value)[5].split(' ')[0];
						  				databaseRequest("select * from userList where workId="+messagesWorkID).then(function(response){
											if((response[0].Task == '–î–∏–∫—Ç–æ–≤–∫–∞')||(response[0].Task == '–°–¥–∞—Ç—å –∑–∞ –≤–∞—Å')||(response[0].Task == '–ü–µ—Ä–µ–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º')){
												var message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork;
											}
											else if((response[0].typeOfWork == '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞')||(response[0].Task == '–û—Ç—Ä–∞–±–æ—Ç–∫–∞')||(response[0].Task == '–ù–æ—Ä–º–∞—Ç–∏–≤—ã')){
												var message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork;
											}
											else{
												var message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork;
											}
											if((response[0].status == 'waitToPriceResponse')||(response[0].status == 'waitToPriceResponse')){
												databaseRequest("select userChatID from chatList where workId="+messagesWorkID).then(function(response){
													let userChatID = response[0].userChatID;
													let userPeerID = 2000000000+userChatID;
													databaseRequest("delete from chatList where workId ="+messagesWorkID).then(function(){
														databaseRequest("delete from userList where workId ="+messagesWorkID).then(function(){
															bot.execute('messages.send', {
															  random_id: randomInteger(0, 18446744073709551614),
															  chat_id: 8,
															  message: message
															}),
															databaseRequest("select userChatID from chatList where workId="+messagesWorkID).then(function(response){
																let userChatID = response[0].userChatID;
																let userPeerID = 2000000000+userChatID;
																bot.execute('messages.send', {
																    random_id: randomInteger(0, 18446744073709551614),
																	peer_id:userPeerID,
																	chat_id: userChatID,
																	message: '–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.',
																	group_id:148975156,
																	keyboard: Markup.keyboard([
																		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
																	])
																}).then(function(response){
																	console.log(response);
																}).catch(function(err){
																	console.log(err);
																})
															})
														})
													})
												})											
											}
										})
						  			}
						  			if( JSON.parse((value)[7].payload).button == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫' ){
						  				let messagesWorkID = (value)[5].split(' ')[0];
						  					databaseRequest("select userChatID from chatList where workId="+messagesWorkID).then(function(response){
												let userChatID = response[0].userChatID;
												let userPeerID = 2000000000+userChatID;
												isExecutor(user_Id).then(function(){
													bot.execute('messages.send', {
													    random_id: randomInteger(0, 18446744073709551614),
														peer_id:userPeerID,
														chat_id: userChatID,
														message: '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é',
														group_id:148975156
													}).then(function(response){
														console.log(response);
													}).catch(function(err){
														console.log(err);
													})											
												}).catch(function(){
													databaseRequest("select * from userList where workId="+messagesWorkID).then(function(response){
														if(response[0] != ''){
															databaseRequest("update userList set sendingPaymentCheck=1 where workId="+messagesWorkID).then(function(){
																databaseRequest("select userChatID from chatList where workId="+messagesWorkID).then(function(response){
																	let userChatID = response[0].userChatID;
																	let userPeerID = 2000000000+userChatID;
																	bot.execute('messages.send', {
																	    random_id: randomInteger(0, 18446744073709551614),
																		peer_id:userPeerID,
																		chat_id: userChatID,
																		message: '–ü—Ä–∏—Å—ã–ª–∞–π —á–µ–∫',
																		group_id:148975156,
																		keyboard: Markup.keyboard([
																			Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
																		])
																	}).then(function(response){
																		console.log(response);
																	}).catch(function(err){
																		console.log(err);
																	})
																})
															}) 
														}
													})		
												})
											})										
						  			}		
						  			if( JSON.parse((value)[7].payload).button == '–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞' ){
				  						databaseRequest("select chat from userList where workId="+messagesWorkID).then(function(response){
											let messagesChatID = response[0].chat;
											let messagesPeerID = 2000000000+messagesChatID;						
											EASYBOTVK.call('messages.getInviteLink', {
												peer_id: messagesPeerID,
												group_id:148975156,
											}).then(function(chatLink){
												databaseRequest('select workID from chatList where executorChatId='+messagesChatID).then(function(response){
													bot.execute('messages.send', {
													  random_id: randomInteger(0, 18446744073709551614),
													  peer_id: messagesPeerID,
													  chat_id: messagesChatID,
													  message: '–ú–µ–Ω–µ–¥–∂–µ—Ä –æ–ø–æ–≤–µ—â–µ–Ω. –°–∫–æ—Ä–æ –æ–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ',
													  keyboard: Markup.keyboard([
													  	[
													  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
													  	]
													  ])
													}).then(function(response){
														//console.log(response);
													}).catch(function(err){
														console.log(3746,err);
													})
													bot.sendMessage(specIDs,'–ó–∞–∫–∞–∑—É —Å ID: #'+messagesWorkID+' –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä.\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É –∑–∞–∫–∞–∑–∞: '+chatLink.link,null,Markup.keyboard([
														[
															Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é id:'+messagesWorkID, 'primary')
														]
													]).oneTime())
												})
											})													
										})				  						
				  					}
				  					if( JSON.parse((value)[7].payload).button == '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑' ){
				  						databaseRequest("select * from userList where workId="+messagesWorkID).then(function(response){
											if(response[0]!=undefined){
												databaseRequest("update userList set status='Declined' where workId="+messagesWorkID).then(function(){
													databaseRequest("delete from chatList where workId="+messagesWorkID).then(function(){
														databaseRequest("select chat from userList where workId="+messagesWorkID).then(function(response){
															let messagesChatID = response[0].chat;
															let messagesPeerID = 2000000000+messagesChatID;	
															bot.execute('messages.send', {
															  random_id: randomInteger(0, 18446744073709551614),
															  peer_id: messagesPeerID,
															  chat_id: messagesChatID,
															  message: '–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä—á–∏–∏–Ω—É –æ—Ç–º–µ–Ω—ã, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–∞.\n –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç, –ª–∏–±–æ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π.',
															  keyboard: Markup.keyboard([
																[
																	Markup.button('–î–æ–ª–≥–∏–π –æ—Ç–≤–µ—Ç', 'primary'),
																	Markup.button('–†–∞–∑–æ–±—Ä–∞–ª—Å—è —Å–∞–º', 'positive')
																],
																[
																	Markup.button('–í—ã—Å–æ–∫–∞—è —Ü–µ–Ω–∞', 'primary'),
																	Markup.button('–í—ã —Ö–∞–º–ª–æ!', 'negative')
																],
																[
																	Markup.button('–ù–µ –¥–æ–≤–µ—Ä—è—é', 'negative')
																],
																[
																	Markup.button('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', 'positive')
																]
															]).oneTime()
															}).then(function(response){
																//console.log(response);
															}).catch(function(err){
																console.log(4504,err);
															})
														})
													})			
												})
											}
											else{
												databaseRequest("select chat from userList where workId="+messagesWorkID).then(function(response){
													let messagesChatID = response[0].chat;
													let messagesPeerID = 2000000000+messagesChatID;	
													bot.execute('messages.send', {
													  random_id: randomInteger(0, 18446744073709551614),
													  peer_id: messagesPeerID,
													  chat_id: messagesChatID,
													  message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ —Ä–µ—à–∏—Ç –ø—Ä–æ–±–ª–µ–º—É..'
													}).then(function(response){
														//console.log(response);
													}).catch(function(err){
														console.log(4665,err);
													})
												})
											}
										}).catch(function(err){
											console.log(89,err);
										})					  						
				  					}
				  					if( (JSON.parse((value)[7].payload).button == '–î–æ–ª–≥–∏–π –æ—Ç–≤–µ—Ç')||(JSON.parse((value)[7].payload).button == '–†–∞–∑–æ–±—Ä–∞–ª—Å—è —Å–∞–º')||(JSON.parse((value)[7].payload).button == '–í—ã—Å–æ–∫–∞—è —Ü–µ–Ω–∞')||(JSON.parse((value)[7].payload).button == '–í—ã —Ö–∞–º–ª–æ!')||(JSON.parse((value)[7].payload).button == '–ù–µ –¥–æ–≤–µ—Ä—è—é') ){
				  						databaseRequest("update userList set comment='"+JSON.parse((value)[7].payload).button+"' where workId="+messagesWorkID).then(function(){
				  							databaseRequest("select * from userList where workId="+messagesWorkID).then(function(response){
					  							var message;
												if( (response[0].executor != null)&&(response[0].executor != 0) ){
													let executor = response[0].executor;
													message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: https://vk.com/id'+executor+'\n–°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n –ü—Ä–∏—á–∏–Ω–∞: '+response[0].comment;
												}
												else{
													message = '–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è \n –¶–µ–Ω–∞:'+response[0].price+' \n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+response[0].id+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+response[0].Task+'\n –ü—Ä–∏—á–∏–Ω–∞: '+response[0].comment;
												}
												let messagesChatID = response[0].chat;
												let messagesPeerID = 2000000000+messagesChatID;	
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  peer_id: messagesPeerID,
												  chat_id: messagesChatID,
												  message: '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤'
												}).then(function(response){}).catch(function(err){})
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  chat_id: 8,
												  message: message
												})
					  						})	
				  						})					  										  						
				  					}
					  			})		  			
					  		}
					  		else if( (value)[5] == '–¶–µ–Ω—ã'){ 						  			
					  			if( JSON.parse((value)[7].payload).button.split("—Å—Ç–æ–∏–º–æ—Å—Ç—å ")[1] != undefined ){						  				
					  				let workId = JSON.parse((value)[7].payload).button.split("—Å—Ç–æ–∏–º–æ—Å—Ç—å ")[1];
					  				databaseRequest("update grandadmin set priceto="+workId+" where id="+user_Id).then(function(){
					  					searchByWorkId(workId).then(function(response){
											databaseRequest("update grandadmin set priceto="+workId+" where id="+user_Id).then(function(){
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  chat_id: 4,
												  message: '–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–º–µ—Ä: 1700',
												})
											}).catch(function(err){})
										}).catch(function(err){
											if(err == 'not-found'){
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  chat_id: 4,
												  message: '–ó–∞–∫–∞–∑–∞ —Å ID: '+workId +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.',
												})
											}
											else if(err == "workId doesn't exist"){
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  chat_id: 4,
												  message: '–ù–µ —É–∫–∞–∑–∞–Ω ID',
												})
											}
										})
					  				})						  				
					  			}					  			
					  			else if( JSON.parse((value)[7].payload).button.split("–ù–∞—Ü–µ–Ω–∫–∞: ")[1].split(' ID')[0] != undefined ){
					  				databaseRequest("select id from executorList where executor_id ="+JSON.parse( (value)[7].payload ).button.split("ID:")[1]).then(function(response){
					  					let executorID = response[0].id;
						  				let ToUser_Id = JSON.parse((value)[7].payload).button.split(" ID")[0].split("–ù–∞—Ü–µ–Ω–∫–∞: ")[1];			  				
						  				databaseRequest("update grandadmin set ApproximatePriceFrom="+executorID+",ApproximatePriceTo="+ToUser_Id+" where id="+user_Id).then(function(){
						  					bot.execute('messages.send', {
											  random_id: randomInteger(0, 18446744073709551614),
											  chat_id: 4,
											  message: '–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å',
											})
						  				})
					  				})					  				
					  			}
					  			/*else if( JSON.parse((value)[7].payload).button.split("—Å—Ç–æ–∏–º–æ—Å—Ç—å ")[1] != undefined ){						  				
					  				let workId = JSON.parse((value)[7].payload).button.split("—Å—Ç–æ–∏–º–æ—Å—Ç—å ")[1];
					  				databaseRequest("update grandadmin set priceto="+workId+" where id="+user_Id).then(function(){
					  					searchByWorkId(workId).then(function(response){
											databaseRequest("update grandadmin set priceto="+((ctx.message.body).split('—Å—Ç–æ–∏–º–æ—Å—Ç—å')[1]).split(' ')[1]+" where id="+user_Id).then(function(){
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  chat_id: 4,
												  message: '–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–º–µ—Ä: 1700',
												})
											}).catch(function(err){})
										}).catch(function(err){
											if(err == 'not-found'){
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  chat_id: 4,
												  message: '–ó–∞–∫–∞–∑–∞ —Å ID: '+(ctx.message.body).split(':')[1] +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.',
												})
											}
											else if(err == "workId doesn't exist"){
												bot.execute('messages.send', {
												  random_id: randomInteger(0, 18446744073709551614),
												  chat_id: 4,
												  message: '–ù–µ —É–∫–∞–∑–∞–Ω ID',
												})
											}
										})
					  				})						  				
					  			}*/
					  		}		
					  		else if( (value)[5] == '–≠–∫–∑–∞–º–µ–Ω—ã, –Ω–æ—Ä–º–∞—Ç–∏–≤—ã –∏ —Ç.–¥.'){
									let user_Id = (value)[7].from;	
									if( JSON.parse((value)[7].payload).button.split("–°–¥–µ–ª–∞—Ç—å –ª–∏—á–Ω—ã–º id:")[1] != undefined ){											
										isAdmin(user_Id).then(function(){
											let workId = JSON.parse((value)[7].payload).button.split("–°–¥–µ–ª–∞—Ç—å –ª–∏—á–Ω—ã–º id:")[1];											
											databaseRequest('update userList set status="Personal",executor='+user_Id+' where workId='+workId).then(function(){
												databaseRequest("select chat from userList where workId="+workId).then(function(response){
													if(response[0] != undefined){
														let messagesChatID = response[0].chat;
														let messagesPeerID = 2000000000+messagesChatID;																			
														EASYBOTVK.call('messages.getInviteLink', {
															peer_id: messagesPeerID,
															group_id:148975156,
														}).then(function(chatLink){
															bot.execute('messages.send', {
															  random_id: randomInteger(0, 18446744073709551614),
															  chat_id: 7,
															  message: '–ó–∞–∫–∞–∑ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ –ª–∏—á–Ω—ã–µ\n C—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É –∑–∞–∫–∞–∑–∞: '+chatLink.link
															})
														})	
													}
													else{
														bot.execute('messages.send', {
														  random_id: randomInteger(0, 18446744073709551614),
														  chat_id: 7,
														  message: '–ù–µ—Ç –∑–∞–∫–∞–∑–∞ —Å id: '+workId
														})
													}														
												})
											});											
										})
									}									
					  		}			  		
				  		}					  		
				  		else if( ( (value)[7].attach1_type == 'money_transfer')&&( specIDs.includes( parseInt( (value)[3] ),0) ) ){
					  		let user_Id = (value)[3];
				  			let gotAmount = (value)[7].attach1_amount;
					  		databaseRequest("select price,workId from userList where id="+user_Id+" and orderFinished=1 and paid is null").then(function(response){
					  			if(response[0]!= undefined){
					  				let priceForWork = response[0].price;
					  				let workId = response[0].workId;
					  				if( parseInt(priceForWork) <= parseInt(gotAmount) ){
					  					databaseRequest("select userChatId,executorChatId from chatList where workId="+workId).then(function(response){
					  						let userChatID = response[0].userChatId;
											let userPeerID = 2000000000+userChatID;

											let executorChatId = response[0].executorChatId;
											let executorPeerID = 2000000000+executorChatId;
											databaseRequest("update userList set paid =1 where workId="+workId).then(function(){
												bot.execute('messages.send', {
												    random_id: randomInteger(0, 18446744073709551614),
													peer_id: userPeerID,
													chat_id: userChatID,
													message: '–ü–æ–ª—É—á–µ–Ω–∞ –æ–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ —Å ID: '+workId+'\n –†–µ—à–µ–Ω–∏—è –±—É–¥—É—Ç –ø–æ—Å—Ç—É–ø–∞—Ç—å –≤ —ç—Ç—É –±–µ—Å–µ–¥—É. –ù–∏ –≤ –∫–æ–µ–≤ —Å–ª—É—á–∞–µ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç–µ –∏–∑ –±–µ—Å–µ–¥—ã, –∏–Ω–∞—á–µ –∑–∞–∫–∞–∑ –∑–∞–∫—Ä–æ–µ—Ç—Å—è.\n\n –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –Ω–µ–¥–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–ü–æ–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞", –∏ –æ–Ω –æ—Ç–≤–µ—Ç–∏—Ç –í–∞–º –≤ –±–µ—Å–µ–¥–µ. ',
													group_id:148975156														
												}).then(function(response){
													console.log(response);
												}).catch(function(err){
													console.log(err);
												})
												bot.sendMessage([106541016,20904658],'–ü–æ–ª—É—á–µ–Ω–∞ –æ–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ —Å ID: '+workId)
												bot.execute('messages.send', {
												    random_id: randomInteger(0, 18446744073709551614),
													peer_id: executorPeerID,
													chat_id: executorChatId,
													message: '–ü–æ–ª—É—á–µ–Ω–∞ –æ–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ —Å ID: '+workId+'. –£–¥–∞—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã.',
													group_id:148975156,
													keyboard: Markup.keyboard([
													  	[
													  		Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ','primary')
													  	],
													  	[
													  		Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å','primary')
													  	],
													  	[
													  		Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑','positive')
													  	],
													  	[
													  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
													  	]
													])
												}).then(function(response){
													console.log(response);
												}).catch(function(err){
													console.log(err);
												})
											})											
										})
					  				}
					  				else{
					  					bot.sendMessage(user_Id,'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞')
					  				}					  				
					  			}
					  			else{
					  				bot.sendMessage(user_Id,'–ó–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –£–≤–µ–¥–æ–º–∏—Ç–µ –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é.')
					  			}
					  		})					  		
				  		}	
				  		else if((value)[5].split(' ')[1] != undefined ){
			  				if( ( (value)[7].from >0 )&& (!specIDs.includes( user_Id,0)) ){
			  					console.log('–ù–µ —Å–ø–µ—Ü');
			  					let messageFrom = (value)[7].from;
					  			let messagesWorkID = (value)[5].split(' ')[0];
					  			if( Number.isInteger(parseInt(messagesWorkID)) ){
						  			databaseRequest("select * from chatList where workId="+messagesWorkID).then(function(response){		
						  				let orderDetails = response;	
						  				if( orderDetails != '' ){ 
											isExecutor(messageFrom).then(function(){ 
												selectUser(messageFrom).then(function(response){
													var setPrice = response[0].setpriceto;
													if((setPrice != null)&&(setPrice != 0)){
														searchByWorkId(messagesWorkID).then(function(response){					
															if( Number.isInteger(parseInt((value)[6])) ){
																var workID = response[0].workId;
																let executorStartPrice = response[0].executorStartPrice;
																let priceMarkup = response[0].priceMarkup;
																var price = (value)[6];
																var message = '\n -----------------\n ID –∑–∞–∫–∞–∑–∞: '+workID+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+'\n–í–∏–¥ –ø–æ–º–æ—â–∏:'+response[0].Task+'\n–î–µ–¥–ª–∞–π–Ω:'+response[0].deadline+'\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:'+response[0].workTime+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:'+response[0].comment+'\n –í–ª–æ–∂–µ–Ω–∏—è: \n';
																var Photos = ''; var Docs = '';
																if(response[0].photos!= undefined){
																	for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
																		Photos += (response[0].photos).split('<--->')[i]+'\n';
																	}
																}
																if(response[0].docs!= undefined){
																	for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
																		Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
																	}
																}
																databaseRequest("update executorList set setpriceto =0 where id="+messageFrom).then(function(){
																	databaseRequest("update userList set executorPrice="+parseInt(price)+",status = 'PriceSelected' where workId ="+workID).then(function(){
																		databaseRequest("select executorChatId from chatList where workId="+messagesWorkID).then(function(response){
																			let executorChatId = response[0].executorChatId;
																			let executorPeerId = 2000000000+executorChatId;

																			for(let i =0; i < executorStartPrice.split(',').length;i++){
																				if( (executorStartPrice.split(',')[i]).split('_')[1] == messageFrom ){
																					executorStartPrice = (executorStartPrice.split(',')[i]).split('_')[0];
																					break;
																				}
																			}
																			for(let i =0; i < priceMarkup.split(',').length;i++){
																				if( (priceMarkup.split(',')[i]).split('_')[1] == priceMarkup.split('_')[1] ){
																					priceMarkup = (priceMarkup.split(',')[i]).split('_')[0];
																					break;
																				}
																			}
																			bot.execute('messages.send', {
																			  random_id: randomInteger(0, 18446744073709551614),
																			  chat_id: 4,
																			  message: '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: https://vk.com/id'+messageFrom+'\n –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞:'+executorStartPrice+'\n–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞ —Å –Ω–∞—Ü–µ–Ω–∫–æ–π:'+priceMarkup+'\n–ù–æ–≤–∞—è —Ü–µ–Ω–∞: '+price+'\n –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ: \n'+message+Photos,
																			  keyboard: Markup.keyboard([
																			  	[
																			  		Markup.button('—Å—Ç–æ–∏–º–æ—Å—Ç—å '+messagesWorkID, 'primary')
																			  	]
																			  ]).inline()
																			}).then(function(){}).catch(function(){});

																			bot.execute('messages.send', {
																			    random_id: randomInteger(0, 18446744073709551614),
																				peer_id: executorPeerId,
																				chat_id: executorChatId,
																				message: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞',
																				group_id:148975156,
																				keyboard: Markup.keyboard([
																					[
																				  		Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑','negative')
																				  	],
																				  	[
																				  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','negative')
																				  	]
																				])
																			}).then(function(){}).catch(function(){});
																		})
																	})
																})
															}
															else{
																databaseRequest("select executorChatId from chatList where workId="+messagesWorkID).then(function(response){
																	let executorChatId = response[0].executorChatId;
																	let executorPeerId = 2000000000+executorChatId;
																	bot.execute('messages.send', {
																	    random_id: randomInteger(0, 18446744073709551614),
																		peer_id: executorPeerId,
																		chat_id: executorChatId,
																		message: '–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã. –£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º',
																		group_id:148975156,
																	}).then(function(){}).catch(function(){});
																})
															}
														}).catch(function(err){
															console.log(err);
															databaseRequest("select executorChatId from chatList where workId="+messagesWorkID).then(function(response){
																let executorChatId = response[0].executorChatId;
																let executorPeerId = 2000000000+executorChatId;
																bot.execute('messages.send', {
																    random_id: randomInteger(0, 18446744073709551614),
																	peer_id: executorPeerId,
																	chat_id: executorChatId,
																	message: '–ó–∞–∫–∞–∑–∞ —Å ID: '+messagesWorkID +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.',
																	group_id:148975156,
																})
															})
														})
													}
													else{
														let chatID = orderDetails[0].userChatId
														let peerID = 2000000000+chatID;
														let message = '&#10084; '+(value)[6];
														if( user_Id == orderDetails[0].executorId ){
															databaseRequest("select resendExecutor from chatList where workId="+messagesWorkID).then(function(response){
																if(response[0].resendExecutor == true){
																	databaseRequest('select paymentCheck from userList where workId='+messagesWorkID).then(function(check){
																		let buttons = [];
																		console.log(messagesWorkID,check[0].paymentCheck);
																		if( (check[0].paymentCheck == null)||(check[0].paymentCheck == 0) ){
																			buttons = [
																				[Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑','negative')],
																				[Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')]
																			]																		
																		}
																		else{
																			buttons = [
																				[Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑','negative')],
																				[Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')]
																			]	
																		}
																		if( (value)[7].attach1_type!= undefined ){
																		let userPeerID = (value)[3];
																		EASYVK.call('messages.getHistory', {
																			count:1,
																			peer_id: userPeerID
																		}).then(function(attach){
																			message = '&#10084; '+attach.items[0].text;
																			var photos = ''; var docs = '';
																			for(var i =0;i < attach.items[0].attachments.length;i++){
																				if( attach.items[0].attachments[i].photo!= undefined) photos += attach.items[0].attachments[i].photo.sizes[attach.items[0].attachments[i].photo.sizes.length-1].url+'\n';
																				if( attach.items[0].attachments[i].doc!= undefined) docs += (attach.items[0].attachments[i].doc).url+'\n';
																			}
																			replaceAll(message).then(function(response){
																				bot.execute('messages.send', {
																					random_id: randomInteger(0, 18446744073709551614),
																					peer_id: peerID,
																					chat_id: chatID,
																					message: response+'\n\n\n –í–ª–æ–∂–µ–Ω–∏—è:\n'+photos+'\n'+docs,
																					group_id:148975156,
																					keyboard: Markup.keyboard(
																						buttons
																					)
																				})	
																			})
																		})																	
																	}
																	else{
																		bot.execute('messages.send', {
																			random_id: randomInteger(0, 18446744073709551614),
																			peer_id: peerID,
																			chat_id: chatID,
																			message: message,
																			group_id:148975156,
																			keyboard: Markup.keyboard(
																				buttons
																			)
																		})
																	}
																	})																		
																}
															})
														}
														else{
															let messagesID = parseInt(((value)[5]).split('id:')[1]);
			            									let messagesPeerID = messagesID +2000000000;														
															let sendMessage = EASYBOTVK.call('messages.send', {
																random_id: randomInteger(0, 18446744073709551614),
																peer_id: messagesPeerID,
																chat_id: messagesID,
																message: '–£ –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ —É–∂–µ –∏–º–µ–µ—Ç—Å—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å. –î–∞–ª–µ–µ —ç—Ç–∞ –±–µ—Å–µ–¥–∞ –±–µ—Å–ø–æ–ª–µ–∑–Ω–∞, –≤—ã –º–æ–∂–µ—Ç–µ –µ—ë –ø–æ–∫–∏–Ω—É—Ç—å.'
															})
														}
													}
												})
											}).catch(function(){
												selectUser(messageFrom,1,messagesWorkID).then(function(check){
													if(check[0].sendingPaymentCheck == 1){
														console.log('–ß–µ–∫: '+messagesWorkID);
														if( (value)[7].attach1_type!= undefined ){
															let userPeerID = (value)[3];
															EASYVK.call('messages.getHistory', {
																count:1,
																peer_id: userPeerID
															}).then(function(attach){																												
																var paymentCheck = '';
																for(var i =0;i < attach.items[0].attachments.length;i++){
																	if( attach.items[0].attachments[i].photo!= undefined) paymentCheck += attach.items[0].attachments[i].photo.sizes[attach.items[0].attachments[i].photo.sizes.length-1].url+'\n';
																	if( attach.items[0].attachments[i].doc!= undefined) paymentCheck += (attach.items[0].attachments[i].doc).url+'\n';
																}
																databaseRequest("update userList set paymentCheck='"+paymentCheck+"',sendingPaymentCheck=0 where workId ="+messagesWorkID+" and sendingPaymentCheck=1").then(function(){
																	databaseRequest("select userChatID,executorChatId from chatList where workId="+messagesWorkID).then(function(response){
																		let userChatID = response[0].userChatID;
																		let userPeerID = 2000000000+userChatID;	

																		let executorChatId = response[0].executorChatId;
																		let executorPeerID = 2000000000+executorChatId;	

																		var message = '–ü–æ–ª—É—á–µ–Ω —á–µ–∫\n -----------------\n –ö–ª–∏–µ–Ω—Ç: https://vk.com/id'+check[0].id+'\nID –∑–∞–∫–∞–∑–∞: '+messagesWorkID+'\n–°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+check[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+check[0].typeOfWork +'\n –ó–∞–¥–∞—á–∞: '+check[0].Task+'\n –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+check[0].comment+'\n–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: https://vk.bom/id'+check[0].executor+'\n–¶–µ–Ω–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:'+check[0].executorPrice+'\n–¶–µ–Ω–∞ –∑–∞–∫–∞–∑–∞: '+check[0].price+' \n\n–í–ª–æ–∂–µ–Ω–∏—è: ';
																		var Photos = ''; var Docs = '';
																		if(check[0].photos!= undefined){
																			for(var i = 0; i < (check[0].photos).split('<--->').length;i++){
																				Photos += (check[0].photos).split('<--->')[i]+'\n';
																			}
																		}
																		if(check[0].docs!= undefined){
																			for(var i = 0; i < (check[0].docs).split('<--->').length;i++){
																				Docs += ' \n'+(check[0].docs).split('<--->')[i]+'\n';
																			}
																		}

																		EASYBOTVK.call('messages.getInviteLink', {
																			peer_id: userPeerID,
																			group_id:148975156,
																		}).then(function(chatLink){
																			message += '\n\n\n------------\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É:\n'+chatLink.link;
																			if( (executorChatId != null)&&(executorChatId != 0) ){
																				EASYBOTVK.call('messages.getInviteLink', {
																					peer_id: executorPeerID,
																					group_id:148975156,
																				}).then(function(ExecutorchatLink){
																					message += '\n\n\n------------\n–°—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:\n'+ExecutorchatLink.link;	
																					bot.execute('messages.send', {
																					  random_id: randomInteger(0, 18446744073709551614),
																					  chat_id: 8,
																					  message: message+'\n\n'+Photos+'\n'+Docs+'\n-----------------\n–ß–µ–∫:\n'+paymentCheck,																						  
																					})	
																					bot.sendMessage([106541016,20904658],'–ü–æ–ª—É—á–µ–Ω–∞ –æ–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ —Å ID: '+workId)	
																				})
																			}
																			else{
																				bot.execute('messages.send', {
																				  random_id: randomInteger(0, 18446744073709551614),
																				  chat_id: 8,
																				  message: message+'\n\n'+Photos+'\n'+Docs+'\n-----------------\n–ß–µ–∫:\n'+paymentCheck
																				})	
																			}
																			
																		
																			
																		}).catch(function(err){
																			console.log(err);
																		})																			
																			
																		if( (executorChatId != null)&&(executorChatId != 0) ){
																			bot.execute('messages.send', {
																				random_id: randomInteger(0, 18446744073709551614),
																				peer_id:executorPeerID,
																				chat_id: executorChatId,
																				message: '–ü–æ–ª—É—á–µ–Ω–∞ –æ–ø–ª–∞—Ç–∞. –ú–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é —Ä–∞–±–æ—Ç—ã.',
																			 	keyboard: Markup.keyboard([
																				  	[
																				  		Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ','primary')
																				  	],
																				  	[
																				  		Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å','primary')
																				  	],
																				  	[
																				  		Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑','positive')
																				  	],
																				  	[
																				  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
																				  	]
																				])
																			}).then(function(response){
																				//console.log(response);
																			}).catch(function(err){
																				console.log(3746,err);
																			})
																		}														
																		bot.execute('messages.send', {
																		    random_id: randomInteger(0, 18446744073709551614),
																			peer_id:userPeerID,
																			chat_id: userChatID,
																			message: '–ß–µ–∫ –ø–æ–ª—É—á–µ–Ω. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –Ω–∞—á–Ω—ë—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞–±–æ—Ç—É –∏—Å—Ö–æ–¥—è –∏–∑ –≤–∞—à–∏—Ö –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–µ–π',
																			group_id:148975156,
																			keyboard: Markup.keyboard([
																				[Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')],
																				[Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑','negative')]
																			])
																		}).then(function(response){
																			console.log(response);
																		}).catch(function(err){
																			console.log(err);
																		})
																	})
																})
															})	
														}
													}																						
													else if( (orderDetails[0].executorChatId != null)&&(orderDetails[0].executorChatId !=0) ){
														let chatID = orderDetails[0].executorChatId;
														let peerID = 2000000000+chatID;
														let message = '&#128396; '+(value)[6];
														databaseRequest("select resendUser from chatList where workId="+messagesWorkID).then(function(response){
															if(response[0].resendUser == true){
																if( (value)[7].attach1_type!= undefined ){
																	let userPeerID = (value)[3];
																	let attach = EASYVK.call('messages.getHistory', {
																		count:1,
																		peer_id: userPeerID
																	}).then(function(attach){
																		message = '\n'+attach.items[0].text;
																		var photos = ''; var docs = '';
																		for(var i =0;i < attach.items[0].attachments.length;i++){
																			if( attach.items[0].attachments[i].photo!= undefined) photos += attach.items[0].attachments[i].photo.sizes[attach.items[0].attachments[i].photo.sizes.length-1].url+'\n';
																			if( attach.items[0].attachments[i].doc!= undefined) docs += (attach.items[0].attachments[i].doc).url+'\n';
																		}
																		replaceAll(message).then(function(response){
																			bot.execute('messages.send', {
																			  random_id: randomInteger(0, 18446744073709551614),
																			  peer_id: peerID,
																			  chat_id: chatID,
																			  group_id:148975156,
																			  message: response+'\n\n\n –í–ª–æ–∂–µ–Ω–∏—è:\n'+photos+'\n'+docs,
																			  keyboard: Markup.keyboard([
																				  	[
																				  		Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ','primary')
																				  	],
																				  	[
																				  		Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å','primary')
																				  	],
																				  	[
																				  		Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑','positive')
																				  	],
																				  	[
																				  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
																				  	]
																				])
																			}).then(function(response){
																				//console.log(response);
																			}).catch(function(err){
																				console.log(3746,err);
																			})
																			console.log('////User send image////');
																		})																			
																	})	
																}															
																else{
																	replaceAll(message).then(function(response){
																		bot.execute('messages.send', {
																			random_id: randomInteger(0, 18446744073709551614),
																			peer_id: peerID,
																			chat_id: chatID,
																			message: response,
																			group_id:148975156,
																			keyboard: Markup.keyboard([
																			  	[
																			  		Markup.button('–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ','primary')
																			  	],
																			  	[
																			  		Markup.button('–£–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å','primary')
																			  	],
																			  	[
																			  		Markup.button('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑','positive')
																			  	],
																			  	[
																			  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','primary')
																			  	]
																			])
																		}).then(function(){}).catch(function(){})	
																	})																										
																}	
															}
														})
													}	
													else if( (check[0].status == 'Personal')&&(specIDs.includes(check[0].executor,0)) ){

													}
													else{
														let chatID = orderDetails[0].userChatId
														let peerID = 2000000000+chatID;
														let message = '–í—ã —Ç—É—Ç –æ–¥–∏–Ω. –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –∫–æ–≥–¥–∞ –∫—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –≤–æ–∑—å–º—ë—Ç—Å—è –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑';
														bot.execute('messages.send', {
														    random_id: randomInteger(0, 18446744073709551614),
															peer_id: peerID,
															chat_id: chatID,
															message: message,
															group_id:148975156,
															keyboard: Markup.keyboard([
																[
															  		Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑','negative')
															  	],
															  	[
															  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','negative')
															  	]
															])
														}).then(function(){}).catch(function(){})
													}
												}).catch(function(err){
													console.log(5325,err);
												})								
											})
										}	
										else{
											let chatID = parseInt((value)[5].split('id:')[1]);	 
											let peerID = 2000000000+chatID;
											bot.execute('messages.send', {
											    random_id: randomInteger(0, 18446744073709551614),
												peer_id: peerID,
												chat_id: chatID,
												message: '–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω. –ë–æ–ª–µ–µ —ç—Ç–∞ –±–µ—Å–µ–¥–∞ –±–µ—Å–ø–æ–ª–µ–∑–Ω–∞.',
												group_id:148975156,
												keyboard: Markup.keyboard([
													[
												  		Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑','negative')
												  	],
												  	[
												  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','negative')
												  	]
												])
											}).then(function(response){
											}).catch(function(err){
											})
										}			  				
						  			}).catch(function(){
						  				databaseRequest("select * from chatList where workId="+messagesWorkID).then(function(response){
							  				let chatID = orderDetails[0].userChatId
											let peerID = 2000000000+chatID;
											bot.execute('messages.send', {
											    random_id: randomInteger(0, 18446744073709551614),
												peer_id: peerID,
												chat_id: chatID,
												message: '–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω. –ë–æ–ª–µ–µ —ç—Ç–∞ –±–µ—Å–µ–¥–∞ –±–µ—Å–ø–æ–ª–µ–∑–Ω–∞.',
												group_id:148975156,
												keyboard: Markup.keyboard([
													[
												  		Markup.button('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑','negative')
												  	],
												  	[
												  		Markup.button('–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞','negative')
												  	]
												])
											}).then(function(response){
											}).catch(function(err){
											})
										})
						  			})
								}
			  				}
			  				else if(specIDs.includes( user_Id,0)){
			  					if( (value)[6] == '!–∑–∞–ø—Ä–µ—Ç–∏—Ç—å' ){
			  						let messagesWorkID = (value)[5].split(' ')[0];
				  					let chatID = (value)[5].split('id:')[1];
				  					let peerID = 2000000000+parseInt(chatID);
				  					databaseRequest("select userChatId,executorChatId from chatList where workId="+messagesWorkID).then(function(response){
				  						if(response[0].userChatId == chatID){
				  							databaseRequest("update chatList set resendUser=false where workId="+messagesWorkID).then(function(){
				  								bot.execute('messages.send', {
												    random_id: randomInteger(0, 18446744073709551614),
													peer_id: peerID,
													chat_id: chatID,
													message: '–°–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –¥–∞–Ω–Ω–æ–π –±–µ—Å–µ–¥—ã –±–æ–ª–µ–µ –Ω–µ  –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é',
													group_id:148975156,
												}).then(function(){}).catch(function(){});
				  							})
				  						}
				  						if(response[0].executorChatId == chatID){
				  							databaseRequest("update chatList set resendExecutor=false where workId="+messagesWorkID).then(function(){
				  								bot.execute('messages.send', {
												    random_id: randomInteger(0, 18446744073709551614),
													peer_id: peerID,
													chat_id: chatID,
													message: '–°–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –¥–∞–Ω–Ω–æ–π –±–µ—Å–µ–¥—ã –±–æ–ª–µ–µ –Ω–µ  –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è –∑–∞–∫–∞–∑—á–∏–∫—É',
													group_id:148975156,
												}).then(function(){}).catch(function(){});
				  							})
				  						}
				  					})
			  					}	
			  					if( (value)[6] == '!—Ä–∞–∑—Ä–µ—à–∏—Ç—å' ){ 
			  						let messagesWorkID = (value)[5].split(' ')[0];
				  					let chatID = (value)[5].split('id:')[1];
				  					let peerID = 2000000000+parseInt(chatID);
				  					databaseRequest("select userChatId,executorChatId from chatList where workId="+messagesWorkID).then(function(response){
				  						if(response != ''){
				  							if( (response[0].userChatId != null)&&(response[0].userChatId != 0)&&(response[0].userChatId == parseInt(chatID) ) ){
				  								databaseRequest("update chatList set resendUser=true where workId="+messagesWorkID).then(function(){
					  								bot.execute('messages.send', {
													    random_id: randomInteger(0, 18446744073709551614),
														peer_id: peerID,
														chat_id: chatID,
														message: '–°–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –¥–∞–Ω–Ω–æ–π –±–µ—Å–µ–¥—ã –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é',
														group_id:148975156,
													}).then(function(){}).catch(function(err){ console.log(err); });
					  							})
					  						}
					  						if( ( (response[0].executorChatId != null)&&(response[0].executorChatId != 0) )&&(response[0].executorChatId == parseInt(chatID)) ){
					  							databaseRequest("update chatList set resendExecutor=true where workId="+messagesWorkID).then(function(){
					  								bot.execute('messages.send', {
													    random_id: randomInteger(0, 18446744073709551614),
														peer_id: peerID,
														chat_id: chatID,
														message: '–°–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –¥–∞–Ω–Ω–æ–π –±–µ—Å–µ–¥—ã –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è –∑–∞–∫–∞–∑—á–∏–∫—É',
														group_id:148975156,
													}).then(function(){}).catch(function(){});
					  							})
					  						}
				  						}					  						
				  					})
			  					}				  					
			  				}		  			
				  		}	  		
				  		else if( ( value != undefined )&&((value)[5] == '–¶–µ–Ω—ã')){
				  			databaseRequest('select * from grandadmin where id='+user_Id).then(function(response){
				  				if( (response[0].ApproximatePriceFrom != null)&&(response[0].ApproximatePriceFrom != 0)&&(response[0].ApproximatePriceTo != null)&&(response[0].ApproximatePriceTo != 0) ){
				  					let executorSelfID = response[0].ApproximatePriceFrom;
				  					let user_WorkId = response[0].ApproximatePriceTo;
				  					databaseRequest("select executor_id from executorList where id="+executorSelfID).then(function(response){
				  						let excutorID = response[0].executor_id;
						  				databaseRequest("select * from userList where workId="+user_WorkId).then(function(response){
						  					if( ((value)[7]).from >0 ){
							  					if( Number.isInteger(parseInt((value)[6])) ){
													var workID = response[0].workId;
													let chatID = response[0].chat;
													let peerID = 2000000000+chatID;
													var price = parseInt((value)[6]);
													let priceMarkup ='';
													if((response[0].priceMarkup != null)&&(response[0].priceMarkup != 0)) priceMarkup = response[0].priceMarkup+','+price+'_'+executorSelfID;
													else priceMarkup = price+'_'+executorSelfID;
													var message = '\n -----------------\n ID –∑–∞–∫–∞–∑–∞: '+workID+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+' \n –í–ª–æ–∂–µ–Ω–∏—è: \n';
													var Photos = ''; var Docs = '';
													if(response[0].photos!= undefined){
														for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
															Photos += (response[0].photos).split('<--->')[i]+'\n';
														}
													}
													if(response[0].docs!= undefined){
														for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
															Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
														}
													}
													databaseRequest("update grandadmin set ApproximatePriceFrom=0,ApproximatePriceTo=0 where id="+user_Id).then(function(){
														databaseRequest("update userList set priceMarkup='"+priceMarkup+"' where workId="+workID).then(function(){
															databaseRequest("select commentFromExecutorWhenOrderIsAccepted from userList where workId="+workID).then(function(response){
																if( (response[0].commentFromExecutorWhenOrderIsAccepted!=null)&&((response[0].commentFromExecutorWhenOrderIsAccepted!=0)) ){
																	let chatMessage = '';
																	for(let i =0; i < response[0].commentFromExecutorWhenOrderIsAccepted.split(',').length;i++){
																		if( response[0].commentFromExecutorWhenOrderIsAccepted.split(',')[i].split('_')[1] ==  executorSelfID) chatMessage = response[0].commentFromExecutorWhenOrderIsAccepted.split(',')[i].split('_')[0];
																	}	
																	if(chatMessage == '') chatMessage = '–ù–µ —É–∫–∞–∑–∞–Ω';																	
																	databaseRequest("update executorList set chatMessage='0' where id="+executorSelfID).then(function(){
																		bot.execute('messages.send', {
																		  random_id: randomInteger(0, 18446744073709551614),
																		  chat_id: chatID,
																		  peer_id:peerID,
																		  message: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ–¥–æ–±—Ä–∞–Ω\nID –∑–∞–∫–∞–∑–∞:'+user_WorkId+'\n–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞: '+price+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:'+chatMessage+'\n –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ: \n'+message+Photos,
																		  keyboard: Markup.keyboard( [Markup.button('–í—ã–±—Ä–∞—Ç—å: '+excutorID, 'positive')] ).inline()
																		})
																	}).catch(function(err){
																		console.log(err);
																	})									
																}	
																else{
																	bot.execute('messages.send', {
																	  random_id: randomInteger(0, 18446744073709551614),
																	  chat_id: chatID,
																	  peer_id:peerID,
																	  message: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ–¥–æ–±—Ä–∞–Ω: ID:'+user_WorkId+'\n–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞: '+price+'\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ: \n'+message+Photos,
																	  keyboard: Markup.keyboard( [Markup.button('–í—ã–±—Ä–∞—Ç—å: '+excutorID, 'positive')] ).inline()
																	}).then(function(response){console.log(response);}).catch(function(err){console.log(err);})											
																}		
																bot.execute('messages.send', {
																  random_id: randomInteger(0, 18446744073709551614),
																  chat_id: 4,
																  message: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞',
																}).then(function(){}).catch(function(){})									
															})	
														})								  					
									  				})																				
												}
												else{
													bot.execute('messages.send', {
													  random_id: randomInteger(0, 18446744073709551614),
													  chat_id: 4,
													  message: '–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã. –£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–∏—Å–ª–æ–º',
													})
												}
											}
						  				})
				  					})					  				
					  			}
					  			else if(response[0].priceto != null){
					  				let workId = response[0].priceto;
					  				databaseRequest("update grandadmin set priceto =0 where id="+user_Id).then(function(){
										searchByWorkId(workId).then(function(response){
											let chatID = response[0].chat;
											let peerID = 2000000000+chatID;						
											var price = ctx.message.body;
											let executorProfileID = response[0].executor;
											var message = '\n -----------------\n ID –∑–∞–∫–∞–∑–∞: '+response[0].workId+'\n –°–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç: '+response[0].subject+'\n –¢–∏–ø —Ä–∞–±–æ—Ç—ã: '+response[0].typeOfWork+' \n –í–ª–æ–∂–µ–Ω–∏—è: \n';
											var Photos = ''; var Docs = '';
											if(response[0].photos!= null){
												for(var i = 0; i < (response[0].photos).split('<--->').length;i++){
													Photos += (response[0].photos).split('<--->')[i]+'\n';
												}
											}
											if(response[0].docs!= null){
												for(var i = 0; i < (response[0].docs).split('<--->').length;i++){
													Docs += ' \n'+(response[0].docs).split('<--->')[i]+'\n';
												}
											}
											databaseRequest("select executor_id from executorList where id="+executorProfileID).then(function(response){
													if( (response[0].executor_id != null)&&(response[0].executor_id != 0) ){
														databaseRequest("update userList set price="+price+" where workId="+workId).then(function(){
															bot.execute('messages.send', {
															  random_id: randomInteger(0, 18446744073709551614),
															  peer_id:peerID,
															  chat_id: chatID,
															  message: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ–¥–æ–±—Ä–∞–Ω:\nID –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:'+response[0].executor_id+'\n –°—Ç–æ–∏–º–æ—Å—Ç—å:'+price+'\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ: \n'+message+Photos+'\n'+Docs,
															  keyboard: Markup.keyboard([
															  	[
															  		Markup.button('–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è', 'positive'),
															  		Markup.button('–û—Ç–∫–∞–∑–∞—Ç—å—Å—è', 'negative')
															  	]							   	
															   ])
															}).then(function(response){
																console.log(response);
															}).catch(function(err){
																console.log(err);
															})
															BotReply(ctx,'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∑–∞–∫–∞–∑—á–∏–∫—É')
														})										
													}
													else{
														BotReply(ctx,'–£ –∑–∞–∫–∞–∑–∞ –Ω–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è')
													}							
												})																					
										}).catch(function(err){
											if(err == 'not-found'){
												BotReply(ctx,'–ó–∞–∫–∞–∑–∞ —Å ID: '+(ctx.message.body).split(':')[0] +' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
											}
											else if(err == "workId doesn't exist"){
												BotReply(ctx,'–ù–µ —É–∫–∞–∑–∞–Ω ID')
											}
											else{
												console.log(3531,err);
											}
										})
									})	
					  			}
				  			})
		  				}	
				  	}	
				  }
	        }		
	    }    	
	}
}
bot.startPolling( console.log('startPolling'),
	easyvk({
	  token:token,
	  captchaHandler: captchaHandler,
	}).then(async botvk => {
		EASYBOTVK = botvk;				
		easyvk({
		  username:'',
		  password :'',
		  captchaHandler: captchaHandler,
		  reauth: true
		}).then(async manager => { 
			EASYMANAGERVK = manager;
			easyvk({
			  username:'',
			  password :'',
			  captchaHandler: captchaHandler,
			  reauth: true,
			  mode: 'highload', // –°–∞–º–∞—è –ø—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
			  mode: {
				name: 'highload',

				// –ö–∞–∂–¥—ã–µ 15 –ú–° –≤—Å—è –æ—á–µ—Ä–µ–¥—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è (—Ç–æ—á–Ω–µ–µ —á–∏—Ç–∞–π—Ç–µ –Ω–∏–∂–µ)
				timeout: 150
			  }
			}).then(async vk => {
				EASYVK = vk;
				EASYVK.call('messages.getLongPollServer').then(function(longPollData){
					let key = longPollData.key;
					let ts = longPollData.ts;
					isAuthorized = true;
					console.log('authorized');	
					function getUpdates(){
						return new Promise(function (resolve,reject) {
							setTimeout(function(){
								request('https://im.vk.com/nim513757464?act=a_check&key='+key+'&wait=25&mode=2&ts='+ts, function (error, response, body) {
									if (error){
										console.log(6029,error);
										reject(false);
									}
									else{
										vk.call('messages.getLongPollServer').then(function(longPollData){
											key = longPollData.key;
											ts = longPollData.ts;
											if( (JSON.parse(body).updates != undefined)&&(JSON.parse(body).updates[0]!= undefined)){ 			
											 	let updatesOrderDetails = JSON.parse(body).updates;									 		
											 	for (var updateskey in updatesOrderDetails) {	 		
											        if (typeof updatesOrderDetails[updateskey] === 'object') {
											        	let value = updatesOrderDetails[updateskey];			        	
											        	if( ( value != undefined )&&( (value)[7] != undefined )&&((value)[7].from > 0) ){
											        		resolve(body);
											        	}
											        }
												}
												reject(false);
											}
											else reject(false);
										})
									}																									
								})
							},300)							
						})
					}
					function eventTrigger(){	
						getUpdates().then(function(response){	
							pollRequest(response);
							console.log('–í—ã–ø–æ–ª–Ω–µ–Ω–æ');
							eventTrigger();	
						}).catch(function(err){
							eventTrigger();
						});	
					}
					eventTrigger();																	
				});				
			}).catch(function(err){
				console.log(5642,err);
			})			
		})		
	}).catch(function(err){
		console.log(5645,err);
	})	
	/*bot.execute('groups.getLongPollServer', {
	  group_id:148975156
	}).then(function(response){
		longPollData = response;
		function makeRequest(ts){
			console.log('request',ts);
			setTimeout(
			function(){
				request(longPollData.server+'?act=a_check&key='+longPollData.key+'&wait=25&ts='+ts, function (error, response, body) {
				  console.error('error:', error); // Print the error if one occurred
				  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received
				  console.log(updatesOrderDetails); // Print the HTML for the Google homepage.
				  makeRequest(JSON.parse(body).ts);
				})
			},1000)
		}
		makeRequest(longPollData.ts);
	}).catch(function(err){
		console.log(err);
	})*/
);
app.get('/init', function(req, res) {
	databaseRequest("SET SESSION wait_timeout = 604800").then(function(){
		databaseRequest("create table if not exists userList (id int,subject text,status text,typeOfWork text,Task text, photos text,docs text,paymentCheck text,deadline text,workTime text,chat int, executor int, workId int, price float,executorPrice float,executorStartPrice text,priceMarkup text, comment text,orderFinished int,sendingPaymentCheck int,paid int,userInChat int,whoIsAccepted text,whoIsDeclined text,commentFromExecutorWhenOrderIsAccepted text)").then(function(){
			//databaseRequest("create table if not exists historyList (id int,subject text,status text,typeOfWork text,Task text, photos text,docs text,deadline text,chat int, executor int, workId int, price float,executorPrice int, comment text,orderFinished int)").then(function(){
				databaseRequest("create table if not exists executorList (id int,executor_id int,chat int, subject text, setpriceto int, waitto int,chatMessage text)").then(function(){
					databaseRequest("create table if not exists chatList (workId int,id int,executorId int,userChatId int, executorChatId int, resendUser bool default true,resendExecutor bool default true)").then(function(){
						databaseRequest("SHOW TABLES LIKE 'grandadmin'").then(function(response){
							if(response != ''){	
								for(let i =0; i < response.length;i++) specIDs.push(response[i].id);
							}							
							bot.execute('messages.send', {
							  random_id: randomInteger(0, 18446744073709551614),
							  chat_id: 7,
							  message: "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: "+isAuthorized,
							}).then(function(){
								res.send("–ë–∞–∑–∞ —Å–æ–∑–¥–∞–Ω–∞, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ."+' '+bot);	
							}).catch(function(){
								res.send("–ë–∞–∑–∞ —Å–æ–∑–¥–∞–Ω–∞, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ."+' '+bot);	
							})
						})
					})							
				})
			//})											
		})
	})
});
app.get('/sendTest', function(req, res) {
	let dateNow = new Date();
	let message = "–¢–µ—Å—Ç "+dateNow.getDate()+'-'+dateNow.getMonth()+'-'+dateNow.getFullYear()+'-'+dateNow.getHours()+'-'+dateNow.getMinutes();	
	bot.sendMessage(331658531, message);
	res.send(message);
});
app.get('/', function(req, res) {
	let message = "–í —Å–µ—Ç–∏, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: "+isAuthorized;
	res.send(message);		  
});

app.listen(3000);

module.exports.app = app;